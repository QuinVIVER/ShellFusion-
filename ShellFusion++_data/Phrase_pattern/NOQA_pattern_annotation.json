{
  "0": [
    {
      "task": "Dump the data in an HTML file",
      "F_verb": "dump",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP in NP"
    },
    {
      "task": "Create a new wallet",
      "F_verb": "create",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "search for a word in all the files with the extension \"ch\" in the current folder\n",
      "F_verb": "search",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP with NP in NP"
    },
    {
      "task": "List all processes of the current user in extra full format",
      "F_verb": "format",
      "reason": "noVerb",
      "cate": "format",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Run a pipeline file",
      "F_verb": "run",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Print command with PID 11383\n",
      "F_verb": "print",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "Check out a pull request locally",
      "F_verb": "check",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V out NP"
    },
    {
      "task": "Search for 'ireg' in all PHP files under 'project' directory tree and show only the files that match\n",
      "F_verb": "show",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP that S"
    },
    {
      "task": "Extract the sources to a temporary build directory",
      "F_verb": "build",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "search for all the text files and display the long listing of these files from that directory\n",
      "F_verb": "display",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Add a file to the index",
      "F_verb": "add",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Print lines of code in the current directory",
      "F_verb": "print",
      "reason": "noVerb",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Print information of the root mount point\n",
      "F_verb": "mount",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP"
    },
    {
      "task": "Sort alphabetically on a field",
      "F_verb": "sort",
      "reason": "noVerb",
      "cate": "sort",
      "pat": "V NP on NP"
    },
    {
      "task": "find all files in the current directory with default depth size and compress them to lpicpio.1 file\n",
      "F_verb": "find",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Find all files/directories owned by user 'michel' under current directory\n",
      "F_verb": "find",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP by NP under NP"
    },
    {
      "task": "Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'\n",
      "F_verb": "find",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Render diagrams to default format (PNG)",
      "F_verb": "render",
      "cate": "draw/render/paint/redraw/plot",
      "pat": "V NP to NP"
    },
    {
      "task": "Print a list of most often changed files in git\n",
      "F_verb": "print",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "find all files in the current directory whose size is 24 or 25 bytes.\n",
      "F_verb": "find",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Play the given audio at twice the speed",
      "F_verb": "play",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP at NP"
    },
    {
      "task": "Run the compiler using command line options and arguments fetched from a text file",
      "F_verb": "run",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP using NP from NP"
    },
    {
      "task": "Force create a symbolic link as a file named \"/usr/lib/jvm/default-java\" to \"$default_java_dir\" with verbose output\n",
      "F_verb": "create",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP as NP to NP with NP"
    },
    {
      "task": "Use a specific compression level (0-5)",
      "F_verb": "use",
      "reason": "noCate",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Delete unused secrets in a specific namespace",
      "F_verb": "delete",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all directories under 'test' directory tree whose paths match the regex '.*/course[0-9]\\.[0-9]\\.[0-9]\\.[0-9]$'\n",
      "F_verb": "find",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP whose S"
    },
    {
      "task": "List available PHP versions",
      "F_verb": "list",
      "reason": "noVerb",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Find all files under current directory that are read less than 1 minute ago\n",
      "F_verb": "find",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "display all the text files and pdf files in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Change the owner user of a file/directory",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP"
    },
    {
      "task": "Change only the type part of SELinux security context",
      "F_verb": "change",
      "reason": "noVerb",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP"
    },
    {
      "task": "Set up a local SSH tunnel from port 80 to port 3000",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V up NP from NP to NP"
    },
    {
      "task": "Find all files under /home/username/public_html/sites/all/themes and set their permission to 640",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "Query specific system information on a remote host by OID using SNMPv3 and authentication without encryption",
      "F_verb": "query",
      "reason": "noCate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP by NP using NP without NP"
    },
    {
      "task": "Remove files named \"core\" from the /work directory tree and write their names to /dev/stderr (the standard error",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "find all the directories in current folder and do not search in sub directories and create the same directory structure in another folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Automatically fix any lint issues found",
      "F_verb": "fix",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "show all .cpp, .c, .h, .hpp files in the folder ~/src",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Generate a 2048bit RSA private key and save it to a file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Run the PHP script \"newEmptyPHP\" redirecting the output to \"nohup.out\" in the current directory, or in the home directory if that is not possible. The process will not receive or respond to SIGHUP (signal 1) which are sent to it.",
      "F_verb": "process",
      "source": "nl",
      "cate": "handle/process/preprocess",
      "pat": "V NP to NP which S"
    },
    {
      "task": "find and image in current folder (case insensitive search)",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Pull an image from a docker registry",
      "F_verb": "pull",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    },
    {
      "task": "Count all directories under current directory",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP under NP"
    },
    {
      "task": "display all the directories in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find files in the current directory and below that are 2000 kB in size",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "View all logins by a specific user and show the ip address instead of the hostname",
      "F_verb": "view",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP by NP"
    },
    {
      "task": "Join comma-separated data in file1 and file2, including extra non-matching information in both files.",
      "F_verb": "join",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Sort and remove duplicate lines in the output of \"finger\"",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP in NP of NP"
    },
    {
      "task": "View a transaction by address or hash",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP by NP"
    },
    {
      "task": "Search the current directory tree for all files matching either pattern \"*.rb\" or pattern \"*.py\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "display all the text files in current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files under  current directory and rename them by replacing all white spaces with _",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP by S_ING with NP"
    },
    {
      "task": "Generate a 10 characters long password",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Show the mv commands that would rename the *.so files in the current directory tree prepending their names with \"lib\"",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP that S"
    },
    {
      "task": "Expand bash array \"myargs\" as arguments to \"mv\"",
      "F_verb": "expand",
      "source": "nl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V NP as NP to NP"
    },
    {
      "task": "Show files in a bucket",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Show system information",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Copy entire directory structure from dir1 as a subdirectory of dir2, omitting any file or directory named \"exclude\".",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP from NP as NP"
    },
    {
      "task": "Print the size of each file and the cumulative size of each directory, in human-readable format",
      "F_verb": "format",
      "source": "tl",
      "cate": "format",
      "pat": "V"
    },
    {
      "task": "Find all *.mov (case insensitive) files under current directory and list their paths with their names",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Run docker daemon and config it to listen to specific sockets(unix,tcp)",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Ping host",
      "F_verb": "ping",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "display the file name and the file type of all the files in the current directory",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "search for the file centos in /usr folder ( case insenstive search )",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for in NP"
    },
    {
      "task": "Remove symbolic links and get absolute path of \"${the_stuff_you_test}\" and save to variable \"DIR_PATH\"",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Mount partition with label \"WHITE\" on \"/mnt/WHITE\" with read and write permission",
      "F_verb": "mount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP with NP on NP with NP"
    },
    {
      "task": "Create a package from a specified directory",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "Display available updates for installed packages",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "display a long listing of all the regular/normal files in the file system which have set uid bit or set gid bit enabled.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of in which S"
    },
    {
      "task": "Execute a command inside the project's virtual environment",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP inside NP"
    },
    {
      "task": "find all the html files in the current folder and replace the end of each line with a pattern",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Add all files (tracked and untracked)",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Find the top level directories that contain a 'bin' directory in it or in one of it's sub-directories and print a sorted list to file b",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Read a single character from standard input with prompt \"Are you sure? \"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP with NP"
    },
    {
      "task": "Ignore specific directory names",
      "F_verb": "ignore",
      "reason": "noCate",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP"
    },
    {
      "task": "Send SIGWINCH process to current shell, causing it to update the LINES and COLUMNS variables which describe the size of the screen/window in characters.",
      "F_verb": "describe",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Find all files under current directory whose file type description contains \"image\", display only path to each file.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP whose S"
    },
    {
      "task": "Check if command \"c++\" and command \"g++\" are equal",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Search in the current directory and all sub-directories except ./D for the file named hi.dat",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP except NP for NP"
    },
    {
      "task": "Find all files/directories under current directory appending a null character at the end of each file name/path",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP at NP of NP"
    },
    {
      "task": "Print the sorted unique column of usernames of users who are currently logged in",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP who S"
    },
    {
      "task": "Download a file from a Flash player",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    },
    {
      "task": "Find all directories under /path/to/base/dir and change their permission to 755",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "List all files in current directory whose name or file type description contains the word \"ASCII\".",
      "F_verb": "type",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Display file information, trying to detect an embedded file",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Search for installed packages in the Portage tree and in overlays",
      "F_verb": "search",
      "reason": "noCate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "find all the files in the current folder which are bigger than 1MB",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Auto patch and ignore vulnerabilities",
      "F_verb": "ignore",
      "reason": "noCate",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP"
    },
    {
      "task": "Set the grid cell size and resize images to fit it before tiling",
      "F_verb": "resize",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP S_INF before S_ING"
    },
    {
      "task": "Find all files in the /etc folder that have been modified within the last 30 days and copy them to /a/path/.",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Filter /path/to/logfile for any lines containing the specified date, paging interactively through the output.",
      "F_verb": "filter",
      "source": "nl",
      "cate": "filter",
      "pat": "V NP for NP"
    },
    {
      "task": "find the count of all the regular files in a directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "View chains, rules, and packet/byte counters for all tables",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Send the contents of a file (`data.txt`), by reading from `stdin` and send the entire input as a message and publish it to `sensors/temperature` topic",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP of NP by S_ING from NP"
    },
    {
      "task": "Check the system for any potential hiccups when on install or update of Ghost",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP for NP when S"
    },
    {
      "task": "Ping a host and ring the bell when a packet is received (if your terminal supports it)",
      "F_verb": "ring",
      "reason": "noCate",
      "source": "tl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP when S"
    },
    {
      "task": "Find all regular files under $dir directory tree that are bigger than $size MB in size and print them along with their sizes in decreasing order of size",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP in NP of NP"
    },
    {
      "task": "List the contents of a specific package",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP"
    },
    {
      "task": "Enter the gitsome shell (optional), to enable autocompletion and interactive help for git (and gh) commands",
      "F_verb": "enter",
      "source": "tl",
      "cate": "enter",
      "pat": "V NP S_INF for NP"
    },
    {
      "task": "Remove active traps",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Print a tab separated table in \"table.txt\" with cell borders",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Remove all *bak files under current directory with confirmation prompt",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP with NP"
    },
    {
      "task": "find all files in the current folder which have been modified after a specific time stamp and do not search in the subfolders;",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Search for \"facebook\\|xing\\|linkedin\\|googleplus\" in \"access-log.txt\" and print a count of the unique entries",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all CSS files that do something with HTML ID #content",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Proxy all requests for ROUTE to URL",
      "F_verb": "proxy",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP for NP to NP"
    },
    {
      "task": "Run the command 'true' with an empty environment variable doFirst",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP"
    },
    {
      "task": "Guess FTP credentials using usernames and passwords lists, specifying the number of threads",
      "F_verb": "guess",
      "reason": "noCate",
      "source": "tl",
      "cate": "assert/assume/guess",
      "pat": "V NP using NP of NP"
    },
    {
      "task": "Remove trailing spaces, replace tabs with spaces, replace Windows CRLF with Unix LF  in all *.java, *.xml and *.css files under current directory excluding ./vendor directory and its contents",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP under NP"
    },
    {
      "task": "List all files/directories under current directory using comma (,) as the delimiter for different fields in the output",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP using NP as NP for NP in NP"
    },
    {
      "task": "Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Create a PR of the current (already pushed) branch, reusing the message from the first commit",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP of NP"
    },
    {
      "task": "Enable a given swap file",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Change active window (starts at 1)",
      "F_verb": "change",
      "reason": "noVerb",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Lists all subdirectories in current directory with a trailing slash",
      "F_verb": "slash",
      "source": "nl",
      "cate": "cut/slash/separate/clip/crop",
      "pat": "V"
    },
    {
      "task": "Print multiline text \"ONBOOT=\\\"YES\\\"\\nIPADDR=10.42.84.168\\nPREFIX=24\" to the terminal, replacing '\\n' with newline symbol, and append that text to file /etc/sysconfig/network-scripts/ifcfg-eth4 as root user.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all Name* files under ../../$name-module and rename them by replacing 'Name' with $Name (will be expanded in the sub-shell) in their names",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP by S_ING with NP in NP"
    },
    {
      "task": "Start top",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Search the /var/www/ tree for files owned by root or unknown group and change their group to 'apache'",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Changes group ownership of 'public' to 'pub'.",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Rebase the current branch on top of another specified branch",
      "F_verb": "rebase",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP on NP of NP"
    },
    {
      "task": "Lookup the IP(s) associated with a hostname (A records)",
      "F_verb": "lookup",
      "reason": "noCate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Start \"xeyes\" in the background on the remote server and exit the SSH session",
      "F_verb": "exit",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Search the current directory tree for .aux files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "(GNU specific) Display information about number of processes in various states.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP of NP in NP"
    },
    {
      "task": "Touch files with altered Template Haskell dependencies",
      "F_verb": "touch",
      "reason": "noVerb",
      "source": "tl",
      "cate": "touch/press",
      "pat": "V NP with NP"
    },
    {
      "task": "Compare 2 directory structures and count the differences between them",
      "F_verb": "count",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP between NP"
    },
    {
      "task": "List all files in the current directory tree that were last modified yesterday or later",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Resize the video to 640x480 pixels and convert to MPEG4 codec using xvid",
      "F_verb": "resize",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP"
    },
    {
      "task": "Start the interactive console interface",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "List the files in a backup stored on a remote machine, via ssh",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP on NP via NP"
    },
    {
      "task": "Apply a stash (default is stash@{0}), and remove it from the stash list if applying doesn't cause conflicts",
      "F_verb": "apply",
      "source": "tl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP"
    },
    {
      "task": "Checkout a specific version of a target from a different Git commit/tag/branch",
      "F_verb": "checkout",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Find *.scm files recursively in the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Remount subtree \"/usr/bin\" on \"/path/to/chroot/jail/usr/bin\" as a bind",
      "F_verb": "remount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP on NP as NP"
    },
    {
      "task": "show all files in the current folder that belongs to a specific userid",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Generate a settings file ignoring all outstanding hints",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Kill an instance",
      "F_verb": "kill",
      "reason": "noCate",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP"
    },
    {
      "task": "Display information about all EC2 volumes",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "file1 and file2 contain lines of comma-separated information, for each line whose first field matches, and where 3rd field of file1 matches 2nd field of file2, 6th field of file1 matches 3rd field of file2, and 7th field of file1 matches 4th field of file2, output: fields 1, 2, 3, 4, 6, and 7 of file1.",
      "F_verb": "contain",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP for NP whose S"
    },
    {
      "task": "Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Count total number of lines in all *.txt file in cuuent directory .",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP in NP"
    },
    {
      "task": "Show the size of a single directory, in human readable units",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Find all the files/directories under user's home directory that do not belong to the user $USER",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Find all ES* and FS_* files under current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Create new user with specified shell",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Find all files under current directory that match the case insensitive regex .\\|./.git and replace all occurrences of the regex $1 (literal) with $upper2 (literal) in these files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Disable X11 forwarding and execute \"cd yourRemoteDir; ./yourRemoteScript.sh </dev/null >/dev/null 2>&1\" in the background on \"remoteServer\"",
      "F_verb": "disable",
      "source": "nl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP"
    },
    {
      "task": "Find '.java' files with checksum 0bee89b07a248e27c83fc3d5951213c1 in the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "List all available commands in Mac OS",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Add a new user to a password file (will prompt to enter the password)",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Start display in fullscreen mode",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP in NP"
    },
    {
      "task": "View images without window borders",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP without NP"
    },
    {
      "task": "Print the details of the randomness used, such as the origin and seed for each source",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP as NP for NP"
    },
    {
      "task": "display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word \"file\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP those S"
    },
    {
      "task": "Write \"error\" to both the log file \"log\" and standard error",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Delete a specific entry",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Find all files under /home/username/public_html/modules  and set their permission to 640",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "Search for all the files starting with grep in man pages",
      "F_verb": "grep",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V for NP with NP in NP"
    },
    {
      "task": "Check that a XML file meets the requirements of its DOCTYPE declaration",
      "F_verb": "check",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V that S"
    },
    {
      "task": "Enable swap by label of a device or file",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP by NP of NP"
    },
    {
      "task": "Search for the regex expaned by the variable $SEARCH in all regular files under $DIR directory tree",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP by NP in NP under NP"
    },
    {
      "task": "Display helper message",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Run a command on two hosts, and print its output on each server inline",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP on NP"
    },
    {
      "task": "display the directory name along with the modified time for all the files /var",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP for NP"
    },
    {
      "task": "find all files and directories under the current directory and display the filesize followed by the filename, using the stat command on FreeBSD/OSX",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP by NP using NP on NP"
    },
    {
      "task": "Restore dependencies for a .NET project or solution in the current directory",
      "F_verb": "restore",
      "source": "tl",
      "cate": "restore/recover/resume",
      "pat": "V NP for NP in NP"
    },
    {
      "task": "Display apparent size instead of disk usage",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP instead-of NP"
    },
    {
      "task": "Publish timestamp and temperature data on the topic `sensors/temperature` to a remote host on a non-standard port",
      "F_verb": "publish",
      "source": "tl",
      "cate": "publish",
      "pat": "V NP on NP to NP on NP"
    },
    {
      "task": "Change all \"JPG\" filename suffixes in current directory to \"jpeg\".",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Find all files/directories named 'foo.bar' under './dir1' and './dir2' directory trees",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Print groups of all users logged in",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Find out if there are any files on the system owned by user `account'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V out if S"
    },
    {
      "task": "Find all files/directories following symlinks under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Download from multiple sources",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V from NP"
    },
    {
      "task": "Search the current directory recursively for text files containing at least one character",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP at NP"
    },
    {
      "task": "Prefix each non-blank line in \"filename\" with a line number",
      "F_verb": "prefix",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Find *.tex files in the current directory tree that contain text \"documentclass\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Assign the alias rm100m to a find command that removes any .tar file larger than 100M.",
      "F_verb": "assign",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF that S"
    },
    {
      "task": "Rename all *.jpg files under current directory by appending parent directory name at the beginning of their names if the name doesn't already contain the parent directory name",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP under NP by S_ING at NP if S"
    },
    {
      "task": "Recursively copy directories \"A\" and \"D\" to directory \"/path/to/target/directory\" on host \"anotherhost\", connecting as ssh user matching current user on local host, via default TCP port for ssh (22).",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP on NP"
    },
    {
      "task": "Show number of jobs run",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Prints all child processes of a process with id 20238, separated with comma.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP with NP with NP"
    },
    {
      "task": "Include file name and page number for each matched line",
      "F_verb": "include",
      "reason": "noCate",
      "source": "tl",
      "cate": "import/include",
      "pat": "V NP for NP"
    },
    {
      "task": "Find files with 002 permission in entire file system and print them with the string 'has world write permissions' appended after every path",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP after NP"
    },
    {
      "task": "Specify the number of spaces to indent by (or \"t\" for tabs)",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP S_INF by"
    },
    {
      "task": "search for files in a directory and check the validity of a command by giving the  file as input",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Send text \"spawn daemon\" and a newline character to the screen session",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP"
    },
    {
      "task": "Upload a file and allow 4 downloads",
      "F_verb": "allow",
      "source": "tl",
      "cate": "request/ask/allow",
      "pat": "V NP"
    },
    {
      "task": "Starts tmux session 'name', forcing tmux to assume the terminal supports 256 colours, and executes defined script within.",
      "F_verb": "assume",
      "source": "nl",
      "cate": "assert/assume/guess",
      "pat": "V NP"
    },
    {
      "task": "Print a listing of the `other' directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Login to \"user@host\" with key \"keyFile\" and execute \"./script arg1 arg2 > output.txt 2>&1\" in the background",
      "F_verb": "login",
      "source": "nl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V to NP with NP"
    },
    {
      "task": "Update local copy of fly",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP of NP"
    },
    {
      "task": "Push the current directory path to the dirs stack",
      "F_verb": "push",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Set permissions to 600 for regular files under media/",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP for NP under NP"
    },
    {
      "task": "Run a command with the changed file (`/_`) as an argument",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP as NP"
    },
    {
      "task": "Show only I/O usage of processes(Default is to show all threads)",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Copy the output from a command to a given X11 selection area",
      "F_verb": "copy",
      "reason": "noCate",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Run a job on the cluster",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP"
    },
    {
      "task": "Find process lines containing a specific string, excluding headers",
      "F_verb": "find",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Start ed, editing an empty document (which can be saved as a new file in the current directory)",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP which S"
    },
    {
      "task": "Listen for input on the specified port and write it to the specified file",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Install a package in a virtual environment and add entry points to path",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all files matching \"abc*\" in the current directory and append a column with \"OK\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "List only file names matching \"*2012*\" from \"serveripaddress::pt/dir/files/\" listening on port 111 and write to \"output.txt\"",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP from NP on NP"
    },
    {
      "task": "Generate a controller, views and related files for the CRUD actions on the specified model class",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP for NP on NP"
    },
    {
      "task": "Start htop",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Extract any line in \"set1\" which does not appear in \"set2\"",
      "F_verb": "extract",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Clear the commands history list (only for current `bash` shell)",
      "F_verb": "clear",
      "reason": "noCate",
      "source": "tl",
      "cate": "clear/clean/empty/eliminate/unpin/cleanup/unpublish",
      "pat": "V NP for NP"
    },
    {
      "task": "Set artist and title tag of an MP3 file",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP"
    },
    {
      "task": "find a file in current folder and show all errors apart from permission denied",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Download a torrent using a specific configuration file",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP using NP"
    },
    {
      "task": "Recursively change the owner and group of all files in \"public_html\" to \"owner\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "Identify CMS version/releases across all your Drupal websites",
      "F_verb": "identify",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP across NP"
    },
    {
      "task": "Find all *.txt, *.html files under /basedir that match the case insensitive pattern *company* in their names",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Check the nmcli version",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Analyse one or more directories",
      "F_verb": "analyse",
      "reason": "noCate",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "Find \"*.dat\" files recursively in the current directory, print the lines starting on line 5 to the console and save to \"concat.txt\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Open in incognito mode",
      "F_verb": "open",
      "reason": "noVerb",
      "source": "tl",
      "cate": "open",
      "pat": "V in NP"
    },
    {
      "task": "Find all files in the current directory recursively with \"linkin park\" in their names and copy them to /Users/tommye/Desktop/LP",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP in NP"
    },
    {
      "task": "Show jobs from queue named 'a' (queues have single-character names)",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP from NP"
    },
    {
      "task": "Follow symbolic links for the full path of \"lshw\"",
      "F_verb": "follow",
      "source": "nl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V NP for NP of NP"
    },
    {
      "task": "Query file with header row",
      "F_verb": "query",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP with NP in NP with NP for NP"
    },
    {
      "task": "Check all Python files found in multiple directories",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files/directories under $dir directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Search for a string (press `n` to go to the next match)",
      "F_verb": "search",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Find and delete all .zip files in the current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Delete files previously created by phpize",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP by NP"
    },
    {
      "task": "Display the files/directories under current directory tree matching the regex '/$prefix$ypatt' where $prefix and $ypatt expands in the current shell",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP under NP where S"
    },
    {
      "task": "Sort \",\" delimited lines in \"file\" by the first field preserving only unique lines",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP in NP by NP"
    },
    {
      "task": "Find all files in current directory that were modified less than 1 day ago, and create cpio archive in $backup_dir",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Remove all packages that are no longer needed",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP that S"
    },
    {
      "task": "Record the terminal and create a recording file",
      "F_verb": "record",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Delete instantiated services/deployments from Kubernetes",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Find all *.java files under current directory and archive them to myfile.tar",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Change to the directory containing the \"oracle\" executable",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP"
    },
    {
      "task": "Install an executable script from a URL",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP from NP"
    },
    {
      "task": "List all attributes of a kernel module",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP"
    },
    {
      "task": "Find and kill a process by name",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP by NP"
    },
    {
      "task": "Show all messages from this boot",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP from NP"
    },
    {
      "task": "find all text files in the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Analyze a Docker image",
      "F_verb": "analyze",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "Display basic information about installed snap software",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Find all files in the current directory recursively that were last modified more than 5 days ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Install a package",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "List all secrets",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Display the last 3 characters of variable foo.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Remove a space-separated list of unused networks",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP of NP"
    },
    {
      "task": "Display a notification when tar finishes compressing files",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP when S"
    },
    {
      "task": "find all \"tar.gz\" files in a folder and sort them according to the name and display the first 2 files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Connect to a database through a Unix socket",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP through NP"
    },
    {
      "task": "Archive \"/path/to/sfolder\" to \"name@remote.server:/path/to/remote/dfolder\" preserving hard links and compressing the data during transmission",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Stream the largest media file in a torrent",
      "F_verb": "stream",
      "reason": "noCate",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP in NP"
    },
    {
      "task": "Fetch and follow the logs of a container",
      "F_verb": "follow",
      "source": "tl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V NP of NP"
    },
    {
      "task": "find all python files in current folder and test if there is a makefile in all these fodlers where these are present",
      "F_verb": "test",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "display the number of lines in all the \".c\" files in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP in NP"
    },
    {
      "task": "Add new event to personal calendar",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "List locks producing a raw output (no columns), and without column headers",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "change owner and group of the file uid_demo to user and group root",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Print common lines in file \"a\" and \"b\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Output a list of words generated according to the given pattern and a maximum number of duplicate letters",
      "F_verb": "output",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP of NP"
    },
    {
      "task": "Start a container from an image and execute the internal runscript",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP from NP"
    },
    {
      "task": "Search \"whatyousearchfor\" in history and print 3 lines before and 4 lines after",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP before NP"
    },
    {
      "task": "find all the directories in the different folders excluding search in the sub directories and create these folders in the current directory",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all directories in 1 level down the /home directory that have two consecutive vowels in their names and count them",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP"
    },
    {
      "task": "Execute commands from standard input in 5 minutes (press `Ctrl + D` when done)",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP in NP"
    },
    {
      "task": "Find all directories under $FOLDER, take the first fields (dot (.) as the delimiter) from their timestamps and reverse sort them numerically",
      "F_verb": "reverse",
      "source": "nl",
      "cate": "flip/rotate/permute/swap/transpose/reverse/shuffle",
      "pat": "V NP"
    },
    {
      "task": "Run a local web server",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Update the last commit by adding the currently staged changes, changing the commit's hash",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP by S_ING"
    },
    {
      "task": "Show an absolute timestamp in UTC",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Analyse the current directory",
      "F_verb": "analyse",
      "reason": "noCate",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "Apply default optimizations and write to a given file",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V to NP"
    },
    {
      "task": "List all files and directories (including hidden) in the current working directory in a long list format sorted by the oldest modification time",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP in NP by NP"
    },
    {
      "task": "Find files whose names match the pattern given by the 2nd argument $2 of the Bash script and replace string $3 with $4 in them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Remount \"/dev/block/mtdblock3\" on \"/system\" with read and write permission",
      "F_verb": "remount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP on NP with NP"
    },
    {
      "task": "Open a file or directory in the currently open VS Code window",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP in NP"
    },
    {
      "task": "Send local changes in a given branch to its remote counterpart",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Search *.x files from the current directory tree for string \"fred\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP for NP"
    },
    {
      "task": "Dump \"file\" as ASCII characters",
      "F_verb": "dump",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP as NP"
    },
    {
      "task": "Make directories in \"/TARGET_FOLDER_ROOT/\" for each \".mov\" file in the current directory tree",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP in NP for NP in NP"
    },
    {
      "task": "display all the .sh scripts and perl files in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the html files in the current folder which have been modified in the last 7 days",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Use the Massif tool to profile and log heap memory and stack usage of `program`",
      "F_verb": "use",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP S_INF"
    },
    {
      "task": "Format the date represented by time string @1267619929 according to default format and print it",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "find all the pdf files in a folder which start with a specific name and display them in the sorted order of their time stamps",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP of NP"
    },
    {
      "task": "Print all lines of \"seq 10\" except the last 3",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Find the files in the current directory that match pattern '*.ISOLATE.quantifier.txt' and move them to folder ISOLATE/",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP to NP"
    },
    {
      "task": "display long listing of top ten biggest regular/normal files in the folder /usr/share/man (discard errors during search)",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Find all the files whose permissions are 777 in the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Open a new window showing the user's home directory",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP"
    },
    {
      "task": "Refresh the output every 2 seconds",
      "F_verb": "refresh",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP"
    },
    {
      "task": "find all .pm, .pl files in /users/tom and search for multiple pattern in same files and display the matched file names",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "change owner and group  of all files and directory into current directory to user and group apache",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP into NP to NP"
    },
    {
      "task": "Display memory in Bytes/KB/MB/GB",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "find all text files in current folder and display all files that have the alphabet a in their name",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Save number of processors in system to 'NP' variable",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "List network interfaces and their associated IP addresses",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "List all regular files in the current directory tree",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Access a service named my_service exposed via a node port and get the url",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Send uncompressed contents of \"large_file.gz\" to \"largesplitter\"",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Remove all applied patches",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Print heap summary information",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Start a web server instance on the specified port",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP on NP"
    },
    {
      "task": "Show status of all jobs",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "display a long list of the files in the current folder which have the word fuddel in all the files in the current folder and then search for the word fiddel in the previously matched files",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP which S"
    },
    {
      "task": "Disassemble an assembly to textual CIL",
      "F_verb": "disassemble",
      "reason": "noCate",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP to NP"
    },
    {
      "task": "Take a picture",
      "F_verb": "take",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Send the output to a remote syslog server running at a given port. Default port is 514",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP at NP"
    },
    {
      "task": "list names of bind functions containing \"/\"",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP"
    },
    {
      "task": "Display a notification even when you put it after the command to watch",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP when S"
    },
    {
      "task": "Print numbers from 1 to 10 with padded leading zeros",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP to NP with NP"
    },
    {
      "task": "search for bash and rsync files in the entire file system excluding search in /usr folder and discard all the errors",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP in NP"
    },
    {
      "task": "Print action can be used to print any file on default run-mailcap tool",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP on NP"
    },
    {
      "task": "Find all directories under current directory and set their permission to 755",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under S"
    },
    {
      "task": "find *.txt files in the current directory and sub-directories",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Replace all URLs in \"MyHTMLFile.html\" with \"$pub_url\" and create a backup with suffix \".bak\"",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "search for the file foo.txt in the current folder and open it in vi editor",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Compare files 'file1' and 'file2' and print in three columns strings unique for first file, second file, and common ones",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V in NP for NP"
    },
    {
      "task": "List information continuously",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Search the current directory tree for regular files whose names match regular expression \".+-[0-9]+x[0-9]+\\.jpg\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP whose S"
    },
    {
      "task": "Print the fifth column (a.k.a. field) in a space-separated file",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "View security context of a file",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "find all the directories in current folder which start with test",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Register the Git hooks",
      "F_verb": "register",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Run a collection (from a URL)",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "List files opened by the given command or process",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "handle/process/preprocess",
      "pat": "V NP by NP"
    },
    {
      "task": "Find all files/directories greater than 100MB and print their list along with their size in /root/big.txt file",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Simulate running a specific command",
      "F_verb": "simulate",
      "source": "tl",
      "cate": "simulate",
      "pat": "V NP"
    },
    {
      "task": "find all case-insensitive php or pthml files, which whole path does not contain /some/directory case-insensitivily , and excute xgettext which whole name as   parameter",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "Specify the first/start page for extraction",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Check the validity of manual pages",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all files/directories under current directory tree whose names start with '(test)' followed by two digits and end with '.txt' extension",
      "F_verb": "end",
      "source": "nl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V with NP"
    },
    {
      "task": "find all the jpg files in a directory.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "List all available licenses",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Log messages with a given priority. Default is `user.notice`. See `man logger` for all priority options",
      "F_verb": "log",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "display the name of all directories in the current folder and do not search in sub directories",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "List (in long list format with inode number) the file under the current directory that has the oldest modification time",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V in NP with NP under NP that S" ////括号内怎么处理
    },
    {
      "task": "List all supported input formats",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "find all files with pattern` '*song*abc2009*.jpg' and replace \"abc2009\" with \"def2010\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Change the line endings of a file",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP"
    },
    {
      "task": "Copy text files to another location, in interactive mode (prompts user before overwriting)",
      "F_verb": "copy",
      "reason": "noCate",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "Print 3 lines of [C]ontext around, [B]efore, or [A]fter each match",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Reverse and save an audio file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP"
    },
    {
      "task": "List the contents of the tree on a commit, recursing into subtrees",
      "F_verb": "list",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP on NP"
    },
    {
      "task": "Find all empty files under a certain path",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Set variable PacketLoss to first digit of percentage of packet loss occurring when pinging host specified by TestIP",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP of NP when S"
    },
    {
      "task": "Print continuous lines of 100 random characters either \".\" or \" \"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Run \"./configure\" with a new environment variable CC set to the full path of the command 'gcc'",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP to NP of NP"
    },
    {
      "task": "Find all files excluding files ending with 'gz', 'tmp' and 'xftp' in their names in the current directory tree and compress them with gzip not preserving timestamp and original name",
      "F_verb": "compress",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP with NP"
    },
    {
      "task": "Remove a directory from `zoxide`'s database",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "find setuid files and directories writing the details to /root/suid.txt , and find large files writing the details to /root/big.txt, traversing the filesystem just once",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP S_ING to NP"
    },
    {
      "task": "List all files in /home/bozo/projects directory tree that were modified within the last day",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Get the disk space used by all *.txt (case insensitive) files under /home/d directory",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP under S"
    },
    {
      "task": "find all text files in the current folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Copy all files in current directory that do not match */exlude-path/* in their paths to /destination/ preserving directory structure",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP in NP that S"
    },
    {
      "task": "List environment virtual machines",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Compress $file file using gzip",
      "F_verb": "compress",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP using NP"
    },
    {
      "task": "Create filesystem with a volume-name",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Go to a directory that contains \"foo\" in the name",
      "F_verb": "go",
      "source": "tl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V to NP that S"
    },
    {
      "task": "For each commit that `git bisect` selects, mark it as \"bad\" or \"good\" after testing it for the issue",
      "F_verb": "mark",
      "source": "tl",
      "cate": "mark",
      "pat": "V NP as NP after S_ING for NP"
    },
    {
      "task": "get the count of all the files that have been accessed in the last 30 days",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP that S"
    },
    {
      "task": "Calculate expression and force number of decimal places to 10",
      "F_verb": "force",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Save the list of .log files in the current directory tree to sas_log_list.txt",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "display all the files in the current folder and do not search in sub directories and move them to the directory /directory1/directory2.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Remove duplicate lines in \"file_name\" and print the output on stdout",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP on NP"
    },
    {
      "task": "search for the file \"program.c\" in the entire file system and save the errors to the file errors.txt",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "find all the files in the current folder which are modified after /bin/sh.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "display all directories in the entire file system",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Print \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" and append to file \"/etc/apt/sources.list\"",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V to NP"
    },
    {
      "task": "Ping the web server on `host` and `port`",
      "F_verb": "ping",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP"
    },
    {
      "task": "Clone a repository up to a specific revision without any newer history",
      "F_verb": "clone",
      "reason": "noVerb",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP without NP"
    },
    {
      "task": "Find files matching `.ssh*' and append their anmes to file `ssh-stuff'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Toggle the current state",
      "F_verb": "toggle",
      "source": "tl",
      "cate": "toggle",
      "pat": "V NP"
    },
    {
      "task": "Start screenfetch",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Login to Google account",
      "F_verb": "login",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V to NP"
    },
    {
      "task": "Rotate third page by 90 degrees clockwise and leave others unchanged",
      "F_verb": "rotate",
      "source": "tl",
      "cate": "flip/rotate/permute/swap/transpose/reverse/shuffle",
      "pat": "V NP by NP"
    },
    {
      "task": "Find lines in a CSV file where the second column ends with 'Baz' and then extract the third and sixth columns",
      "F_verb": "find",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP where S"
    },
    {
      "task": "Detect embedded data in a PNG image",
      "F_verb": "detect",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP in NP"
    },
    {
      "task": "set MyVariable to the value of VARIABLE_NAME",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP of NP"
    },
    {
      "task": "Find all files under current directory and set read permission for group and other for these files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    }
  ],
  "1": [
    {
      "task": "List all files/directories under current directory with their inode numbers, disk space, permission, number of hard links, user name, group name, size, status change time in Y-m-d format and name filed,  then write the outptut to /tmp/files.txt",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP with NP"
    },
    {
      "task": "Remove unused imports from multiple files and display the diffs",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Output line number and lines 200000000 through 200000005 from the infinite input of \"y\"",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP through NP from NP of NP"
    },
    {
      "task": "Output lines 16224 to 16482 of 'file', and stop reading 'file' after line 16482.",
      "F_verb": "stop",
      "source": "nl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V S_ING after NP"
    },
    {
      "task": "Find all directories on the system whose size is greater than 50k",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP whose S"
    },
    {
      "task": "Read the contents of \"${some_variable}\" until a null character is found and save the result in variable \"content\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP in NP"
    },
    {
      "task": "Open irssi and connect to a server with a nickname",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP with NP"
    },
    {
      "task": "Generate a binding between C++ and Go",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP between NP"
    },
    {
      "task": "Split \"/etc/gconf/schemas/gnome-terminal.schemas\" into 1000000 files of about equal size",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP"
    },
    {
      "task": "Let the user choose between multiple items and save the selected one to a file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Replay a typescript at half the original speed",
      "F_verb": "replay",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP at NP"
    },
    {
      "task": "Display a list of open pull requests",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Create a cryptographic key and save it to file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Find and show all files in the current directory tree that are exactly 2000 kB",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Export an SVG document to PDF, converting all texts to paths",
      "F_verb": "export",
      "source": "tl",
      "cate": "export",
      "pat": "V NP to NP to NP"
    },
    {
      "task": "Find all files/directories under '/usr' directory tree that have not been modified in the last 356 days counting days from today",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Find all files that have the SUID bit set",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "set alias \"mkcd\" for command \"_(){ mkdir -pv $1; cd $1; }; _\"",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Compare, rendering commit hashes, file names, and line numbers as hyperlinks, according to the hyperlink spec for terminal emulators",
      "F_verb": "compare",
      "source": "tl",
      "cate": "compare",
      "pat": "V NP as NP to NP for NP"
    },
    {
      "task": "Create and authenticate a user with Google OIDC",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Creates temporary folder and save path to that in a TMPDIR variable.",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "display long listing of all the files in the folder \"/myfiles\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Search the current directory tree for all files except SVN ones",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP except NP"
    },
    {
      "task": "Set Wacom area to specific screen. Get name of the screen with `xrandr`",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "search for all xml files in some directory",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Change permissions to 755 for all subdirectories of the current directory",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP of NP"
    },
    {
      "task": "Start a proxy and save all output to a file",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Find all files with '.txt' (case insensitive) extension under $dir directory non-recursively and sort them numerically",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP under NP"
    },
    {
      "task": "Remove a module from the kernel",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Find all files under current directory excluding the $OUTPUT file, calculate their md5sum with $MD5SUM_OPTIONS options and redirect the result to $OUTPUT",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all files under and below the current working directory with the word California in the file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP with NP in NP"
    },
    {
      "task": "List all functions that you could run",
      "F_verb": "list",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP that S"
    },
    {
      "task": "Set up local port forwards in the background with no terminal or command execution from port 4431 to host \"www1\" port 443 and port 4432 to host \"www2\" port 443 via the host \"colocatedserver\"",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V up NP in NP with NP from NP to NP via NP"
    },
    {
      "task": "Print the sizes of all files from the current directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "add read,write permissions to all the files in the current folder which have the permission 600",
      "F_verb": "add",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP in NP which S"
    },
    {
      "task": "Archive \"directory\" preserving hard links from host \"remote\" to the current local directory and keep partial files, handle sparse files efficiently, and itemize changes made",
      "F_verb": "keep",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP"
    },
    {
      "task": "List all broken symlinks including cyclic links under current directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under S"
    },
    {
      "task": "Search the /myfiles directory tree for regular files with read and write permissions set for `others'",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP with NP for NP"
    },
    {
      "task": "change user and group of the file /usr/bin/aws to user amzadm and group root",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Set variable \"finalName\" to the second-to-last slash-separated path component of variable \"path\"",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP of NP"
    },
    {
      "task": "find all text files in user/directory/ which have been modified today and display the last line of these files",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all .gz archives in the current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Reset an environment variable's value",
      "F_verb": "reset",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP"
    },
    {
      "task": "Retrieve the key fingerprint from a host (useful for confirming the authenticity of the host when first connecting to it via SSH)",
      "F_verb": "retrieve",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP for NP of NP when S"
    },
    {
      "task": "Create a dump of a given database",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP of NP"
    },
    {
      "task": "List usernames from a given host",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP from NP"
    },
    {
      "task": "Copy a compressed image file into sdb",
      "F_verb": "copy",
      "reason": "noCate",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP into NP"
    },
    {
      "task": "Execute 'echo -e \"\\033[31mHello World\\033[0m\"' every without color support 2 seconds",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP without NP"
    },
    {
      "task": "Use a specific version of Ruby across the whole system",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP across NP"
    },
    {
      "task": "find all the normal/regular files in the folder main-directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find the passwd file under root and two levels down",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "List all regular files in the current directory tree that were modified less than 60 minutes ago",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Find a single file called tecmint.txt and remove it",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument, then search for ExpectedResult in the output",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "find regular files under the current directory, whose name ends in .mbox, piping the output to a while loop that renames each file, to the same name without .mbox at the end",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP whose S"
    },
    {
      "task": "Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor",
      "F_verb": "view",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Write the output of \"input_prog\" to standard output and error on console and as input to command \"my_editor\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP on NP"
    },
    {
      "task": "Search the current directory tree for files whose names end in \"rb\" or \"js\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP whose S"
    },
    {
      "task": "Finds all user session in system, and shows sorted user names with number of sessions of each user.",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP of NP of NP"
    },
    {
      "task": "Uninstall a package",
      "F_verb": "uninstall",
      "reason": "noVerb",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Find and delete all files with a used disk size of 0",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP with NP of NP"
    },
    {
      "task": "Find all files recursively starting from / that have been modified in the past 30 minutes and list them",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "List the unique second \"/\" delimited field of every line from standard input prefixed by the number of occurrences",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP from NP by NP of NP"
    },
    {
      "task": "List all files under and below the directory given as variable $FULFILLMENT",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP as NP"
    },
    {
      "task": "Find all files on smbfs mounts and print its information and file type",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP"
    },
    {
      "task": "Open a private (incognito) window",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP"
    },
    {
      "task": "Find and show all files on the system that are larger than 900 MB",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP on NP that S"
    },
    {
      "task": "display the base name(name without extension) of all the \".flac\" files in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Find all *.dbf files/directories in entire file system",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "search all html files in the current folder and remove all the empty lines",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Apply changes to the kernel configuration before compiling and installing",
      "F_verb": "apply",
      "source": "tl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP to NP before S_ING"
    },
    {
      "task": "find all files in the current folder which are bigger than 10bytes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Search the *.c files residing in the current directory tree for string \"blash\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP for NP"
    },
    {
      "task": "set alias \"vv\" for command \"$(date)\"",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Send the contents of a file (`data.txt`), by reading from `stdin` and send the entire input as a message and publish it to `sensors/temperature` topic",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP of NP by S_ING from NP"
    },
    {
      "task": "Change permissions to 755 recursively only for directories",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP"
    },
    {
      "task": "Run a Chisel server",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Search for all files in the current directory recursively whose names begin with \"Linkin Park\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP whose S"
    },
    {
      "task": "Detach all loop devices",
      "F_verb": "detach",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Print a minimal set of differences between files in directories \"a\" and \"b\", ignore differences in whitespace, and print 0 lines of unified context",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP between NP"
    },
    {
      "task": "find all the files in the current directory that have the word \"bash\" in their name",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Specify a configuration file to use",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF"
    },
    {
      "task": "Find all files/directories excluding paths that match '.git' or '.gitignore'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Print variable \"$opt\" with double quotes deleted",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "Calculate md5 checksum of theDirname",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP"
    },
    {
      "task": "Create a copy of the current working directory structure in the usr/project directory,",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files in the /home/ directory tree that were last modified less than 7 days ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Transfer remote file to the local system",
      "F_verb": "transfer",
      "reason": "noVerb",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Continue a rebase that was interrupted by a merge failure, after editing conflicting files",
      "F_verb": "continue",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP that S"
    },
    {
      "task": "Specify a minimum number of identical lines (defaults to 5)",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP"
    },
    {
      "task": "Print the pathnames of all files from the /tmp/dir1 directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Remove one or more images given their names",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "display all the text files in the current folder and discard all the errors.",
      "F_verb": "discard",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Print an octal dump of \"file\" with named characters, no addresses, and no suppressed duplicate lines with sections starting with \"esc\", \"fs\", \"gs\", or \"us\"",
      "F_verb": "duplicate",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP with NP with NP"
    },
    {
      "task": "Execute a package command using the Wasmer runtime",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP using NP"
    },
    {
      "task": "List all files with their modification time in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time and sort them according to file modification time",
      "F_verb": "list",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP with NP that S"
    },
    {
      "task": "Find all sample* files/directories under current directory and print 'program {}-out {}' where {} will expand to file paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Show only octal file permissions",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Recursively change ownership of \"~/.npm\" to the current user",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Force create a symbolic link named \"currentDir\" to \"newDir\" without dereferencing \"currentDir\"",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP without S_ING"
    },
    {
      "task": "Search the current directory tree for .log files containing the string \"The SAS System\", and save their names to sas_log_list.txt",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Display a list of issues for a specific repository",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "Specify a username (user will be prompted for a password)",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Print only common strings in sorted content of files 'file1' and 'file2'",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP of NP"
    },
    {
      "task": "Print the column and offset indexes of a Parquet file",
      "F_verb": "offset",
      "source": "tl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP of NP"
    },
    {
      "task": "Create an archive from files",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "List access keys for a specific user",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP for NP"
    },
    {
      "task": "Send an email that contains file content",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP that S"
    },
    {
      "task": "Find all files larger than 100M and delete them",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Output a list of all permutations of the given strings (lengths are not processed)",
      "F_verb": "output",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Reduce PDF file size to 150 dpi images for reading on a ebook device",
      "F_verb": "reduce",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP to NP for S_ING on NP"
    },
    {
      "task": "Copy \"file\" from \"REMOTE\" into local clipboard",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP from NP into NP"
    },
    {
      "task": "Create a new Python `virtualenv` in `$WORKON_HOME`",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP"
    },
    {
      "task": "Display parameters and options for a croc command",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Rename all files in current directory to lowerase, overwriting any existing files.",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Print \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" and append to file \"/etc/apt/sources.list\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Change permissions to 755 for all directories in the /path/to/dir directory tree",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP in NP"
    },
    {
      "task": "Find the empty directories and files under current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    }, 
    {
      "task": "Print 'bla.txt' if at least one file with such name is present below the current directory.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP if S"
    },
    {
      "task": "Download and install a package, specified by its import path",
      "F_verb": "download",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Find all files under current directory whose file type description contains \"image\", display the paths to files and file type descriptions.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP whose S"
    },
    {
      "task": "Run a pipeline, use cached results from previous runs",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Convert tabs to spaces, reading from standard input",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP from NP"
    },
    {
      "task": "find all the regular/normal files in the folder /travelphotos which are bigger than 200KB and which do not have the word \"2015\" in their name",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Execute \"ps aux | grep php\" every second",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "List any line in \"f1\" or \"f2\" which does not appear in the other and delete all tab characters in the output",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Process a directory with a specific level",
      "F_verb": "process",
      "reason": "noVerb",
      "source": "tl",
      "cate": "handle/process/preprocess",
      "pat": "V NP with NP"
    },
    {
      "task": "Execute a Julia program that takes arguments",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP that S"
    },
    {
      "task": "View SMART health summary",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find files that are 100k",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Show table partitions",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "search for regular/normal file with the name \"myfile\" in the entire file system and discard all the errors",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP with NP in NP"
    },
    {
      "task": "Set the 'xtrace' shell variable",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Print the nodename (hostname) of the system",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "List files opened by the given user",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP by NP"
    },
    {
      "task": "Archive a file keeping the input file",
      "F_verb": "archive",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Execute the ls program literally, even if an ls alias exists",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP if S"
    },
    {
      "task": "find all png images in the current folder and convert the to jpg images.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Search the current directory tree for regular files that contain \"string\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP that S"
    },
    {
      "task": "Compile several .java files",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP"
    },
    {
      "task": "search for files cart1 or cart2 or cart3 or ...cart6 in the folder junk which is in home folder and display all its details. Discard all the errors and do not display them.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Finds all files in $LOCATION, prints file names, overwrite files with random content $TIMES times, and finally remove them.",
      "F_verb": "overwrite",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP with NP"
    },
    {
      "task": "Create a wordlist file from the given URL up to 2 links depth",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "List active traps for the current shell",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP for NP"
    },
    {
      "task": "Extract the contents of the file(s) to `stdout` alongside the extracted file names",
      "F_verb": "extract",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP to NP alongside NP"
    },
    {
      "task": "Print the names of all hidden regular files from the current directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Find files/directories named 'foo.bar' in the root filesystem partition",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Show the list of files larger than 100 MB",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Extract, sort and print only group names from /etc/group.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP"
    },
    {
      "task": "Find all files/directories under mnt/naspath that were modified in last 24 hours, calculate the total size and redirect the result to /tmp/size.log file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Change permissions to 644 for all regular files under the /path/to/dir/ tree",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP under NP"
    },
    {
      "task": "Compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in \".log\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP on NP that S"
    },
    {
      "task": "Repair package or upgrade it without modifying main dependencies",
      "F_verb": "upgrade",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP without S_ING"
    },
    {
      "task": "Find \".c\" and \".h\" files in the current directory tree and print lines containing \"#include\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Compress a PNG file",
      "F_verb": "compress",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP"
    },
    {
      "task": "Set and export environmental variables that persist across restarts",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP that S"
    },
    {
      "task": "Execute a login attempt against a HTTP server using the username, password and user-agent specified",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP using NP"
    },
    {
      "task": "Generate tags for all files in the current directory, and output them to a specific file, overwriting the file if it exists",
      "F_verb": "output",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP if S"
    },
    {
      "task": "Display CPU statistics every 2 seconds",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "find all files under the /etc directory and display any IP address patterns in them",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find every vim undo file under current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Scan directories recursively and move them into quarantine",
      "F_verb": "scan",
      "source": "tl",
      "cate": "visit/rescan/scan/walk/iterate/access/descend/traverse",
      "pat": "V NP"
    },
    {
      "task": "delete all the \".bak\" or swap files in kat folder",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Build a docker image using a specific Dockerfile",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP using NP"
    },
    {
      "task": "Install one or more packages to the bower_components directory",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Set the 'xtrace' shell option",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Convert a CoffeeScript, allowing named exports",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Add a new application to a project",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Remove all \"CVS\" directories from the current directory tree, ignoring the case",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Remove torrent 1 and 2, and also delete local data for torrent 2",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP for NP"
    },
    {
      "task": "Measure the disk space taken up by all TXT files in the current directory tree",
      "F_verb": "measure",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP by NP in NP"
    },
    {
      "task": "Append the current user to the server access control list for X",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP for NP"
    },
    {
      "task": "Find all files in the /home/ directory tree that are owned by bob",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "list files in /usr modified after the time which /tmp/stamp$$ modified",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP after NP which S"
    },
    {
      "task": "Tail all pods within a current namespace",
      "F_verb": "tail",
      "reason": "noCate",
      "source": "tl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V NP within NP"
    },
    {
      "task": "Find all files that have either a .php or a .js extension",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Change the owner and group of \"it\" to \"root\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Find a single file called FindCommandExamples.txt under current directory and remove it",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Print git branch currently checked out in a working directory.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Recursively changes group ownership on every file in the ${WP_ROOT}/wp-content directory to ${WS_GROUP} group.",
      "F_verb": "change",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP on NP in NP to NP"
    },
    {
      "task": "Run an iperf3 server on a specific port",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP"
    },
    {
      "task": "List the sizes of a directory and any subdirectories, in the given unit (B/KB/MB)",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Execute \"1\" and write standard output and error to standard output and file \"${LOG_FILE}\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Evaluate the output of recursively changing the owner and group of \"/data/*\" to \"mongodb\"",
      "F_verb": "evaluate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP S_ING of NP to NP"
    },
    {
      "task": "Edit the cheat sheet for a command",
      "F_verb": "edit",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP for NP"
    },
    {
      "task": "List imported keys",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "List all available plugins",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "find the md5 sum of all the regular files in multiple folders and display them in sorted order",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Print how long the current user has been connected in hours",
      "F_verb": "print",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files in the /myfiles directory tree following symbolic links",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Counts the number of lines in each *.hpp or *.cpp file in a git repository.",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP in NP"
    },
    {
      "task": "search for all the files in the current directory which have the group staff and have write permission enabled to the user and display them.",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Print current shell settings",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Check the status of a repository's pull requests",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP"
    },
    {
      "task": "Display list of files ending with '.txt' in the current folder to the terminal twice and output it to the text file \"txtlist.txt\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP with NP in NP to NP"
    },
    {
      "task": "List all hidden regular files from the current directory separating them with zeroes",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP from NP with NP"
    },
    {
      "task": "Clean a CSV file",
      "F_verb": "clean",
      "reason": "noVerb",
      "source": "tl",
      "cate": "clear/clean/empty/eliminate/unpin/cleanup/unpublish",
      "pat": "V NP"
    },
    {
      "task": "Print a count of all unique entries in \"ips.txt\" with the most frequent results at the top",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP with NP at NP"
    },
    {
      "task": "Find all files on your system that are world writable",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP that S"
    },
    {
      "task": "Search the /path/to/directory tree for regular files modified 61 days ago and then remove them",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Print the output of history without line numbers",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP without NP"
    },
    {
      "task": "Create a table containing all information from S43.txt and S44.txt, merging lines where the first field of both files matches, and keeping the line that starts with \"Gene\" at the start of the file.",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "Use a specified configuration file",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Search for a given package",
      "F_verb": "search",
      "reason": "noCate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Run tests and generate a coverage report in HTML",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree and show them by paging through one screenful at a time",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Find all .sh files in the current directory tree and remove them",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it)",
      "F_verb": "copy",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP if S"
    },
    {
      "task": "change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP which S"
    },
    {
      "task": "Find all of the distinct file extensions in current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Like above, but also run a default 1000-port TCP scan if host seems up",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP if S"
    },
    {
      "task": "find all the files in the current folder which have been accessed in the last 24 hours",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "find al the files which have been accesed in the last 6 days and display their details",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "Display a forecast showing symbols and daylight data for your current location",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Enable Winbind (Active Directory) authentication",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Perform simulation of syncronization, without any action",
      "F_verb": "perform",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP without NP"
    },
    {
      "task": "Search case insensitively for 'facebook', 'xing', 'linkedin', ''googleplus' in file 'access-log.txt', extract the matched part, sort them and print them by sorting them in asending order of the number of repeated lines",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP in NP"
    },
    {
      "task": "Add user to htpasswd file in batch mode without an interactive password prompt (for script usage)",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP in NP without NP for NP"
    },
    {
      "task": "Report all files starting in the directories /mydir1 and /mydir2 larger than 2,000 blocks that have not been accessed in over 30 days",
      "F_verb": "report",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Update the package cache after adding a repository",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP after S_ING"
    },
    {
      "task": "Set the first and maximum TTL",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "display all the directories in the current folder which are atleast one level deep",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Interactively stage parts of a given file",
      "F_verb": "stage",
      "reason": "noCate",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP"
    },
    {
      "task": "Count the number of lines in the current git repository",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Display the diff that will be sent to Review Board",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP that S"
    },
    {
      "task": "List commands",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Calculate md5 checksum of the list of all files/dirs in /path recursively including dot files and excluding the patterns 'run', 'sys', 'tmp' and 'proc', then check the checksum against the checksum saved in /tmp/file",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP of NP in NP"
    },
    {
      "task": "Find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Remove trailing white spaces from all files under current directory ignoring directories wtih *.git* (case insensitive) in their paths and keep backups of the originals",
      "F_verb": "keep",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP"
    },
    {
      "task": "Search the current directory tree for files whose names are not \"a.txt\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP whose S"
    },
    {
      "task": "Report I/O and transfer rate issued to physical devices, one per second (press CTRL+C to quit)",
      "F_verb": "report",
      "source": "tl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP to NP"
    },
    {
      "task": "Force create a symbolic link named \"$pdir\" to \"$pluginpath\" with verbose output",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP with NP"
    },
    {
      "task": "Run a command and record its profile into \"perf.data\"",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP into NP"
    },
    {
      "task": "Open a menu of available flashcard decks for selection",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "Strip all '\\' and newlines from $output and save the result to variable 'output'",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Guess MySQL credentials using a username and a passwords list, exiting when a username/password pair is found",
      "F_verb": "guess",
      "reason": "noCate",
      "source": "tl",
      "cate": "assert/assume/guess",
      "pat": "V NP using NP"
    },
    {
      "task": "find all files in the folder \"myfiles\" which are exactly 5 bytes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Check if a directory is a mountpoint without showing any output",
      "F_verb": "check",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "List installed packages",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Remove a logical volume in a volume group",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "search the entire file system for the file \"jan92.rpt\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Convert a video file to MKV (AAC 160kbit audio and x264 CRF20 video)",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "find all the xml files in current folder and which are present in the pattern list file \"/tmp/a\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Search for a pattern within a file",
      "F_verb": "search",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP within NP"
    },
    {
      "task": "display all the files in the file system which belong to no group",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Print name of user with current EUID.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP with NP"
    },
    {
      "task": "split the file hugefile.txt into pieces per 100000 lines named as partNNN with digital prefixes",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP as NP with NP"
    },
    {
      "task": "find all the direcories in the current folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "search all the files in the current folder excluding those that are present in the folder test and using regex",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP those S"
    },
    {
      "task": "Create a new Lumen application",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "take all the files in the current folder and pass them as argument to a program",
      "F_verb": "pass",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP as NP to NP"
    },
    {
      "task": "Spawn a background screen session running myCommand",
      "F_verb": "spawn",
      "source": "nl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Produce three tab-separated columns: lines only in first file, lines only in second file and common lines",
      "F_verb": "produce",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Find every vim undo file in the current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Output commands to set LS_COLOR using default colors",
      "F_verb": "output",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP S_INF using NP"
    },
    {
      "task": "find all the foo.txt files in the current folder and move them to another directory",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all *.rb (regular) files under current directory and change their mode to 600",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "display all the files in the home folder excluding directories which have been modified in the last 24 hours",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "search for the file \".user.log\" and display its parent directory",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Catch output from a script printing to /dev/tty",
      "F_verb": "catch",
      "source": "nl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Print only digits in variable \"$name\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Assign the alias rmc to a find command that deletes all core dump files in the currenty directory and below.",
      "F_verb": "assign",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP that S"
    },
    {
      "task": "Open the front page",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP"
    },
    {
      "task": "Print the current working directory without a trailing newline",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP without NP"
    },
    {
      "task": "Start a web server instance using the specified SSL certificate bundle",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP using NP"
    },
    {
      "task": "List files smaller than 9kB residing in the current directory and below",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Report a bug about a specific process",
      "F_verb": "report",
      "source": "tl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP about NP"
    },
    {
      "task": "Play the given audio in reverse",
      "F_verb": "play",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Apply the reverse of a patch",
      "F_verb": "apply",
      "source": "tl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP of NP"
    },
    {
      "task": "find all the files in the file system which have been modified in the last 60 minutes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Search /var/tmp for files larger than 30 MB modified 31 days ago",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "create and list filenames in the archive",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "display all the files in the current folder which have the word \"bills\" in their name",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "show all the files in the folder /etc which have been modified in the last 24 hours",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "List all mix commands",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directores under /etc and run the file command on each of them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Test if file exists",
      "F_verb": "test",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Split \"$SOURCE_FILE\" into files of at most 100 lines each",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP of NP"
    },
    {
      "task": "Send a message to a given user on a given terminal id",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP on NP"
    },
    {
      "task": "Run on server",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V on NP"
    },
    {
      "task": "Remove a theme or package",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Returns unsuccessful exit code on each found file like '*tests*' within current directory.",
      "F_verb": "exit",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP on NP within NP"
    },
    {
      "task": "View line 500 to line 1000 in gzipped file \"bigfile.z\"",
      "F_verb": "view",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "On host \"server_b\", connect as ssh user \"user\" and copy \"/my_folder/my_file.xml\" to directory \"/my_new_folder/\", with all transfer data relayed through local host.",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP with NP through NP"
    },
    {
      "task": "Open a Konsole in the background and bring to the front when Ctrl+Shift+F12 (by default) is pressed",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files in current directory and execute multiple commands for each file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Change permissions of all directories residing under and below ./debian to 755",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Create a temporary directory and return the absolute path to it",
      "F_verb": "return",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP to NP"
    },
    {
      "task": "Execute a command",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Find all regular files in the current directory tree that are not readable by anyone",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Specify owner password for PDF file to bypass security restrictions",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP to NP"
    },
    {
      "task": "Search for files that are at least 1.1GB",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP that S"
    },
    {
      "task": "Format the time string $timestamp according to the format string \"%Y-%m-%d %H:%M:%S\" and save the output to variable 'CDATE'",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Search for \"mpirun\" in all processes owned by the current user",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP by NP"
    },
    {
      "task": "Create a temporary file with a specified suffix",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Remove all files named 'foo' from the trash",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Search the system for 'dead' symbolic links",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Remove a specific package",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Find all files in $dir directory (non-recursive) and count them",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP"
    },
    {
      "task": "Set an environment variable to a value",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "Disable a service",
      "F_verb": "disable",
      "source": "tl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP"
    },
    {
      "task": "Print the login time and user of the first person who logged in",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP who S"
    },
    {
      "task": "Replace all non-punctuation characters with newlines from standard input",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP with NP from NP"
    },
    {
      "task": "Reboot the machine",
      "F_verb": "reboot",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Find all *.ogg and *.mp3 (case insensitive) files/directories under your home directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "In case a package has multiple binaries, specify the package name along with the binary",
      "F_verb": "specify",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP with NP"
    },
    {
      "task": "Convert a CoffeeScript v2 file to JavaScript",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Initialize and decrypt a fresh clone of a configured repository",
      "F_verb": "initialize",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP of NP"
    },
    {
      "task": "Print 1000 astarisk ('*')",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Specify the device to use (defaults to `video0`)",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF"
    },
    {
      "task": "Copy \"src/prog.js\" and \"images/icon.jpg\" to \"/tmp/package/\" keeping relative path names",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Uninstall a particular version of Gradle",
      "F_verb": "uninstall",
      "reason": "noVerb",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP of NP"
    },
    {
      "task": "Recursively finds in all folders but \"./output/*\" all files but *.o, *.swp and prints strings with 'soc_attach' text pattern and number of matched string.",
      "F_verb": "number",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V of NP"
    },
    {
      "task": "Find all the .mp3 files in the music folder and pass to the ls command, -print0 is required if any filenames contain whitespace",
      "F_verb": "pass",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V to NP"
    },
    {
      "task": "Copy all files ending in \".a\" in directory trees matching \"folder*\" to \"/path/to/dest\" preserving directory hierarchy",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Find all regular files under current directory (no subdirectories) and replace every occurrences of 'toreplace' with 'replace' in those files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all regular files that start with stat",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Uncompress file \"dbdump.sql.gz\" through standard input and pass to \"mysql\"",
      "F_verb": "uncompress",
      "source": "nl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP through NP"
    },
    {
      "task": "Find the file whose inode number is 1316256",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Translate a word (language is detected automatically)",
      "F_verb": "translate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Set the operating mode of the specified interface",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP"
    },
    {
      "task": "Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]=\"1\" [1]=\"2\")",
      "F_verb": "exit",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Specify the initial zoom",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "List generations",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Convert all .txt files under and below the current directory from the DOS format to Unix",
      "F_verb": "convert",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Run a single test based on its name, or filter on a regular expression",
      "F_verb": "filter",
      "source": "tl",
      "cate": "filter",
      "pat": "V on NP"
    },
    {
      "task": "Let the user page through 'filename.csv' with long lines chopped so they fit within the width of the screen/window.",
      "F_verb": "fit",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V within NP of NP"
    },
    {
      "task": "Mount \"device_name\" on \"mount_point\"",
      "F_verb": "mount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP on NP"
    },
    {
      "task": "List all regular files from the current directory tree that were modified less than 60 minutes ago",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP from NP that S"
    },
    {
      "task": "Replace \"foo\" with \"bar\" in all PHP files in the current directory tree",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP with NP in NP in NP"
    },
    {
      "task": "Read a single character from standard input into variable \"ans\"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP into NP"
    },
    {
      "task": "Print $d if $d is empty",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP if S"
    },
    {
      "task": "Manage booleans. Booleans allow the administrator to modify the confinement of processes based on the current configuration",
      "F_verb": "manage",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "save all aliases to the variable $oldalias",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "display all the files in the current folder which have been modified between two dates",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Display information about a serverless project",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Decompress ${set1[@]} files with gzip",
      "F_verb": "decompress",
      "source": "nl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP with NP"
    },
    {
      "task": "remove all core dump files from user's home directory",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Change permissions of all directories from the current directory tree to 644",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP from NP to NP"
    },
    {
      "task": "Locate all the hard links of file `passwd'",
      "F_verb": "locate",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP"
    },
    {
      "task": "Join a protected wireless network",
      "F_verb": "join",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP"
    },
    {
      "task": "Find all directories under current directory and make them read, write, and executable for owner & group and remove read-write-execute permission for other",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Unset the project's default remote",
      "F_verb": "unset",
      "reason": "noVerb",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP"
    },
    {
      "task": "Calculate the md5 sum of \"a\"",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP"
    },
    {
      "task": "search for all html files in current folder folder and create a zip file of all these files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Change the owner to \"user\" and group to \"group\" of files \"file ...\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Read a line from standard input with prompt \"Is this a good question (y/n)? \" and save the response to variable \"answer\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "find all text files in the current folder excluding those that are presenti n the folder \"/svn\" and search for a pattern.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Print the MD5 message digest of \"/path/to/destination/file\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Ignore the MD5 sum when making a package",
      "F_verb": "ignore",
      "reason": "noCate",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP when S"
    },
    {
      "task": "Capture a specific window, given its ID as displayed by `xwininfo`, into the JPEG format",
      "F_verb": "capture",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP into NP"
    },
    {
      "task": "Copy \"6.3.3/6.3.3/macosx/bin/mybinary\" to \"~/work/binaries/macosx/6.3.3/\" and create directory \"~/work/binaries/macosx/6.3.3/\" if \"~/work/binaries/macosx/\" exists",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Create a ROM filesystem with a volume-name",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Burn a file to the disc in an optical drive, potentially writing to multiple discs in succession",
      "F_verb": "burn",
      "reason": "noCate",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "Remove regular files whose names match Perl regular expression '\\w+-\\d+x\\d+\\.\\w+$' from the current directory tree",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP whose S"
    },
    {
      "task": "Search for files/directories with the case insensitive pattern anaconda.* in /var/log",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP with NP in NP"
    },
    {
      "task": "Revert changes made to the host by 'kubeadm init' or 'kubeadm join'",
      "F_verb": "revert",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP to NP by NP"
    },
    {
      "task": "Numerically sort file \"table\" by the fourth character of the second field, ignoring leading spaces",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP by NP of NP"
    },
    {
      "task": "Recursively set all permissions under \"/folder\" to 755",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP under NP to NP"
    },
    {
      "task": "Find x* files/directories under current directory whose status was changed less than 1 day ago and move them to /tmp/other",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP whose S"
    },
    {
      "task": "Find all files whose names contain 'patch-' in the /usr/ports directory tree and count the number of lines with ^M in them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Copy all *.data files under /source_path to /target_path by appending the parent directory names in the source paths to the beginning of each of the target file names",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP under NP to NP by S_ING in NP to NP of NP of NP"
    },
    {
      "task": "Remove files modified at least five days ago in directory trees /path/to/files*",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP at NP in NP"
    },
    {
      "task": "find all directories that names are 'project.images' and display details",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Separate the output with a space instead of a newline",
      "F_verb": "separate",
      "reason": "noCate",
      "source": "tl",
      "cate": "cut/slash/separate/clip/crop",
      "pat": "V NP with NP instead-of NP"
    },
    {
      "task": "Find all files/directories named 'articles.jpg' under '/home/username/public_html/images' directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Execute \"your_script.sh\" passing all \"sqlite.db\" files from the current directory tree as arguments to it",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP as NP to NP"
    },
    {
      "task": "search for the word hello in all the text files in the temp folder and delete them",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP in NP"
    },
    {
      "task": "Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex provided by first positional argument and show the output by paging through one screenful at a time",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP under NP"
    },
    {
      "task": "Search the /usr/ directory tree for files newer than file /tmp/stamp",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "find all the text files in the temp folder and search for the word hello in all these files and display the matched files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Append to an existing file",
      "F_verb": "append",
      "reason": "noCate",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V to NP"
    },
    {
      "task": "Generate scaffolding for a new project based on a template",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP for NP on NP"
    },
    {
      "task": "Replace all occurrence of \"subdomainA.example.com\" with \"subdomainB.example.com\" in all files under /home/www and below",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP of NP with NP in NP under NP"
    },
    {
      "task": "Decompress and unpack a directory and its contents",
      "F_verb": "unpack",
      "reason": "noCate",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "Connect to a specific X server",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP"
    },
    {
      "task": "Save standard input to variable 'stdin' until the first character encoded as '\\004' is read",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP until NP as NP"
    },
    {
      "task": "Counts the number of lines in each *.swift or *.mm file in a git repository, escaping any space in filename.",
      "F_verb": "number",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V of NP in NP in NP"
    },
    {
      "task": "Rotate an image 90, 180 or 270 degrees clockwise",
      "F_verb": "rotate",
      "source": "tl",
      "cate": "flip/rotate/permute/swap/transpose/reverse/shuffle",
      "pat": "V NP"
    },
    {
      "task": "Remount \"/home/evgeny\" with the \"suid\" flag set",
      "F_verb": "remount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP with NP"
    },
    {
      "task": "Find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP with NP that S"
    },
    {
      "task": "Train the bayesian filter to recognise an email as spam",
      "F_verb": "train",
      "reason": "noCate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP S_INF as NP"
    },
    {
      "task": "Print \"echo ping -c 2\" on each string in file 'ips'",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP on NP in NP"
    }
  ],
  "2": [
    {
      "task": "Create an ext3 filesystem in partition 1 of device b (`sdb1`)",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP of NP"
    },
    {
      "task": "Reset primary group membership to user's default group in /etc/passwd",
      "F_verb": "reset",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "Copy all files in \"/var/spool/mail\" to \"/home/username/mail\" preserving the directory hierarchy and modification times",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Search directory recursively and let user choose files to preserve",
      "F_verb": "choose",
      "source": "tl",
      "cate": "choose/select",
      "pat": "V NP S_INF"
    },
    {
      "task": "Find all *fink* files/directories in entire file system",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Make a new recording and save it to a local file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Display inserted, deleted and modified changes as a table",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP as NP"
    },
    {
      "task": "Make a package (run in the same directory as a PKGBUILD)",
      "F_verb": "make",
      "source": "tl",
      "cate": "make/cause/instruct",
      "pat": "V NP in NP as NP"
    },
    {
      "task": "find all the java script files in a folder and give them as input to a jar",
      "F_verb": "give",
      "source": "nl",
      "cate": "provide/give/supply",
      "pat": "V NP as NP to NP"
    },
    {
      "task": "Find all regular files under current directory (excluding hidden directories) and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all 2*.data files/directories under jcho directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Receive and connect over a custom relay",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V over NP"
    },
    {
      "task": "Output the value of a given key to a string (and disable JSON output)",
      "F_verb": "output",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "display all empty files(files with sisze 0 bytes) in home folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Write output and error of \"command\" to standard output and to \"/path/to/logfile\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Find files whose name starts with \"MyFile\", ignoring the case",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "change the permissions of all the directories to 755 in the folder \"/home/nobody/public_html\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP in NP"
    },
    {
      "task": "Connect as ssh user specified by variable USER to host whose IP address or host name is specified by HOST, and copy remote file specified by variable SRC to location on local host specified by variable DEST, disabling progress info but enabling debug info.",
      "F_verb": "connect",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V as NP by NP to NP whose S"
    },
    {
      "task": "Specify the format of the output report (e.g. `full`, `xml`, `json`, `summary`)",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP"
    },
    {
      "task": "Display raw hex information with no decoding",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP to NP with NP"
    },
    {
      "task": "Find sqlite3 databases in the current directory tree, execute query 'SELECT * FROM table WHERE column1=\"value\"' on all of them, and search the result for \"value\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Remount \"/dev/shm\" with a maximum size of \"40G\"",
      "F_verb": "remount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP with NP of NP"
    },
    {
      "task": "Display the current date in UTC and ISO 8601 format",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Grant a set of authorities to a user",
      "F_verb": "grant",
      "reason": "noCate",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "create directory \".hiddendir\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Report file systems inode usage.",
      "F_verb": "report",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP"
    },
    {
      "task": "Mount the \"linprocfs\" filesystem on \"/proc\"",
      "F_verb": "mount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP on NP"
    },
    {
      "task": "Encrypt a directory into archive.gpg using a passphrase",
      "F_verb": "encrypt",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP into NP using NP"
    },
    {
      "task": "Decompress to `stdout`",
      "F_verb": "decompress",
      "reason": "noCate",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V to NP"
    },
    {
      "task": "find all the configuration files in the file system",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Open a file and jump to a specific line number",
      "F_verb": "jump",
      "source": "tl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V to NP"
    },
    {
      "task": "Start an interactive IPython session",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Display the last space-separated field of each line in file.txt",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Connect an application to a service",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP to NP"
    },
    {
      "task": "Check if the file \"somelink\" links to exists",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Start Redis server, using the default port (6379), and write logs to `stdout`",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP S_INF"
    },
    {
      "task": "Select multiple files with `Shift + Tab` and write to a file",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V to NP"
    },
    {
      "task": "Find all directories in maximum 2 levels down the /tmp/test directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "display the contents of all the regular/normal files in the entire file system with the name dummy and discard all the errors and save the output to the files tesst.txt",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Print files to a specific printer",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Check if process ID 1 exists (init or systemd) and current user has permission to send it signals.",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Add a safe target",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Remove all *.swp files under current directory ensuring white space safety",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP udner NP"
    },
    {
      "task": "Send a command to all players",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all *~ files/directories under dir and  print an rm command for each of them for deletion",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP for NP"
    },
    {
      "task": "Run the p5 manager server",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Delete resource",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Optimize all SVG files within a directory (overwrites the original files)",
      "F_verb": "optimize",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP within NP"
    },
    {
      "task": "Run a JavaScript file",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Output the system host name and date to the console",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Search all .pdf files  from directory tree ~/.personal/tips for \"hot\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP for NP"
    },
    {
      "task": "Update the list of available packages and versions (it's recommended to run this before other `apt` commands)",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP before NP"
    },
    {
      "task": "Display the section headers of a given binary",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Change directory to the real path of the current working directory of process \"$PID\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP of NP of NP"
    },
    {
      "task": "Find all *.gz files under asia and emea directory and print their names and line counts to file_count.txt",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all the SGID bit files whose permissions set to 644 in the file system",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Display a boolean choice, returning the result through the exit code",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Start collectd",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Revert a plaintext hexdump back into binary, and save it as a binary file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP as NP"
    },
    {
      "task": "Suppress heading line",
      "F_verb": "suppress",
      "reason": "noCate",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP"
    },
    {
      "task": "Force a drive to immediately enter standby mode (usually causes a drive to spin down)",
      "F_verb": "force",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP S_INF"
    },
    {
      "task": "Compile a source code file into an executable binary",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP into NP"
    },
    {
      "task": "beginning at the end of the file, prints lines matching /2012/ and exits after first non-matching line",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Create a new volume group called vg1 using the `/dev/sda1` device",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP using NP"
    },
    {
      "task": "Run a command with custom I/O scheduling class and priority",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP"
    },
    {
      "task": "delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V without S_ING NP under that S"
    },
    {
      "task": "Find all files under current directory tree named 'filename_regex' excluding '.svn' and '.pdv' directories and files then search for the case insensitive pattern 'your search string' in those files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "resize all the jpg images in the current folder to the size 300x300",
      "F_verb": "resize",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Install one or more plugins",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Switch the default toolchain to nightly so that the `cargo` and `rustc` commands will use it",
      "F_verb": "switch",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP that S"
    },
    {
      "task": "Use a specific user profile directory",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Run your serverless application locally",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directories under /var/www/some/subset and change their owner and group to www-data",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Raise an error for using uninitialized variables",
      "F_verb": "raise",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP for S_ING"
    },
    {
      "task": "Find every file/directory under /var/spool that was modified more than 60 days ago.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Find all PHP files in the current directory recursively and search them for string \"$test\" with 8 simultaneous processes",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP with NP"
    },
    {
      "task": "Get current directory name without full path, ie. the part after the last /",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP without NP"
    },
    {
      "task": "display all the normal/regular files in the directory FOLDER1",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "search for the file \".user.log\" in a folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Recursively search for all files whose name contains 'foo', and change the 'foo' in the filenames to 'bar'.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP whose S"
    },
    {
      "task": "Report total file systems disk usage.",
      "F_verb": "report",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP"
    },
    {
      "task": "Perform the default task in the \"build.xml\" file",
      "F_verb": "perform",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP"
    },
    {
      "task": "Check the local Linuxbrew installation for potential problems",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP for NP"
    },
    {
      "task": "Find all files/directories with 'my key phrase' in their names under current directory, search for 'my key phrase' in all files under current directory and print a sorted and unique list of output",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Search the /path directory tree for files having permissions 777",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Start a service",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Find List of directory  with non-zero file count",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP with NP"
    },
    {
      "task": "Output the specified path removing all containing directories and the .txt suffix, in this case \"filename\".",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Lint multiple CSS files",
      "F_verb": "lint",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Set the mask (using octal) to restrict no permissions for the file's owner, and restrict all permissions for everyone else",
      "F_verb": "restrict",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP for NP"
    },
    {
      "task": "Apply and add the patched files to the index",
      "F_verb": "apply",
      "source": "tl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP to NP"
    },
    {
      "task": "List the files in the /etc directory tree containing text '128.200.34.'",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Run command in existing processes network namespace",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP"
    },
    {
      "task": "Recognize text in an image and save it to `output.txt` (the '.txt' extension is added automatically)",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Create a copy of index.html in all directories in current directory whose name contains Va, pausing for confirmation before overwriting any existing files - names may not contain spaces.",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP of NP in NP in NP whose S"
    },
    {
      "task": "Copy a file to another location",
      "F_verb": "copy",
      "reason": "noVerb",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Show the history of a particular file or directory, including differences",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Create a new issue",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Delete all files with a `.backup` extension (`-print0` uses a null character to split file names, and `-0` uses it as delimiter)",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP with NP"
    },
    {
      "task": "Find all *.jpg files in Cam2/2013* paths and send the contents to a ffmpeg command to create a video file",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP S_INF"
    },
    {
      "task": "Kill an instance of VNC Server running on a specific display",
      "F_verb": "kill",
      "reason": "noCate",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP of NP on NP"
    },
    {
      "task": "Display the partition table with an additional column for the partition size",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP for NP"
    },
    {
      "task": "Search the current directory tree for files whose names contain \"bills\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP whose S"
    },
    {
      "task": "Strip nondeterministic information from a file",
      "F_verb": "strip",
      "reason": "noCate",
      "source": "tl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP from NP"
    },
    {
      "task": "Create and switch to a new branch",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V to NP"
    },
    {
      "task": "Print \"new.txt\" with line numbers prepended and lines 3 and 4 deleted",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "Uninstall a given Node.js version",
      "F_verb": "uninstall",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Export the current wallet information",
      "F_verb": "export",
      "source": "tl",
      "cate": "export",
      "pat": "V NP"
    },
    {
      "task": "List .c files in the current directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Display information about commands executed on a given terminal",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP on NP"
    },
    {
      "task": "Save Java home in variable \"JAVA_HOME\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP in NP"
    },
    {
      "task": "find files which full path name like '*/*config' at current directory and print",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V"
    },
    {
      "task": "Remove leading and trailing space from lines in file 'in.txt', interactively page through a hexdump of the result.",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP in NP"
    },
    {
      "task": "Check sudoers file for errors",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP for NP"
    },
    {
      "task": "Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP into NP"
    },
    {
      "task": "Find all files/directories that start with 'readme' (case insensitive) in their names under '/usr/share/doc' directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Display filesystems but exclude the specified type",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all directories under /path/to/base/cache, /path/to/base/tmp, /path/to/base/logs  and change their permission to 755",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Remove an existing mapping",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Find all *$VERSION* files/directories under current directory where $VERSION is a variable",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP where S"
    },
    {
      "task": "Find all files with the SUID bit set beginning with the root directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "dispaly a list of all the files in the file system which belong to a specific user  and exclude searching in the folder proc",
      "F_verb": "exclude",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V S_ING in NP"
    },
    {
      "task": "Merge PDF files",
      "F_verb": "merge",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP"
    },
    {
      "task": "Print the last line of \"$file1\" to the console and append to \"$file2\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "find all the files ending with emlx in a folder and save the output to a list file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Display help information about a bower command",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Find all files/directories containing the case insensitive string something' in their names under current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP under NP"
    },
    {
      "task": "search for directories in the folder \"test\" which end with 5 digits using regular expressions",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP which S"
    },
    {
      "task": "Look for files with the name 'search' under current directory",
      "F_verb": "look",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP with NP under NP"
    },
    {
      "task": "Find files and directories newer than CompareFile under current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Connect to a server, reading options from a config file",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP from NP"
    },
    {
      "task": "Invoke a trusted X11 forwarding SSH connection with server \"192.168.0.14\" on port 222 as user \"phil\"",
      "F_verb": "invoke",
      "source": "nl",
      "cate": "call/invoke/indicate/occur",
      "pat": "V NP with NP on NP as NP"
    },
    {
      "task": "Find all *.java files under current directory and change their encoding to utf-8 from cp1252",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Search multiple directories and follow subdirectores under directory2, not directory1",
      "F_verb": "search",
      "reason": "noCate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "search for all the files in current folder which start with \"file2015-0\" and move them to another folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP which S"
    },
    {
      "task": "Convert to PNG with 200ppi resolution",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP with NP"
    },
    {
      "task": "find all the files in the current folder which have been modified after a specific timestamp and save the output to a file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "display all the normal/regular files in the current folder which are empty",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Connect to a server, forking into the background",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP into NP"
    },
    {
      "task": "Create or edit changelist description",
      "F_verb": "edit",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "search for the file in the entire file system which has the words \"filename\" in its name",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP which S"
    },
    {
      "task": "Hide obsolete members",
      "F_verb": "hide",
      "source": "tl",
      "cate": "hide/collapse",
      "pat": "V NP"
    },
    {
      "task": "find all files in the current folder which have been modified in the last 24 hours",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Apply a patch to the current directory",
      "F_verb": "apply",
      "source": "tl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP to NP"
    },
    {
      "task": "Cut out the first sixteen characters of each line of `stdin`",
      "F_verb": "cut",
      "source": "tl",
      "cate": "cut/slash/separate/clip/crop",
      "pat": "V NP of NP"
    },
    {
      "task": "Search for occurrences of string \"main(\" in the .c files from the current directory tree",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP of NP in NP from NP"
    },
    {
      "task": "Show the current VPN status",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all *.ogg (case insensitive) files under your home directory that are less than 100MB in size",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Continuously send \"a\" then \"b\" to \"script.py\"",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP"
    },
    {
      "task": "Start a REPL and enable a language option",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "find all the javascript files in current folder using regular expressions",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP using NP"
    },
    {
      "task": "Find all files/directories under current directory tree that are newer than backup.tar.gz by modification time",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Move all files/directories under current directory to destDir",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP under NP to NP"
    },
    {
      "task": "Unset the executable bit of all regular files from directory trees arch, etc, lib, module, usr, xpic",
      "F_verb": "unset",
      "source": "nl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Use big dots instead of small ones in charts",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP instead-of NP in NP"
    },
    {
      "task": "Look in the current directory and below for all files whose names begin with either \"my\" or \"qu\"",
      "F_verb": "look",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP for NP whose S"
    },
    {
      "task": "find all the files in the folder .home/calvin which have been modified in th last 45 minutes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.",
      "F_verb": "number",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Get help",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Find files that have been modified within the last month and copy them somewhere",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP"
    },
    {
      "task": "display the count of number html files in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Execute script 'truncate.sh' on all regular files in the current directory tree",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP in NP"
    },
    {
      "task": "Change the permission to 644 for all files under current directory",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP under NP"
    },
    {
      "task": "Fetch a script from the web and interpert (run) it in the current shell, without writing the script to disk.",
      "F_verb": "fetch",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP in NP without S_ING"
    },
    {
      "task": "Locates 'gcc' executable file, strips last two parts of the full path, adds '/lib' to the end and saves result in 'libdir' variable.",
      "F_verb": "end",
      "source": "nl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP in NP"
    },
    {
      "task": "check if the file pointed by the symbolic exists or not and display those which are broken",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V those S"
    },
    {
      "task": "Detect file(s) encoding according to the system's locale",
      "F_verb": "detect",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP S_ING to NP"
    },
    {
      "task": "Compress a file",
      "F_verb": "compress",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP"
    },
    {
      "task": "Change permissions to 600 for all regular .rb files in the current directory tree",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP in NP"
    },
    {
      "task": "Find all files in the current directory tree whose names are \".DS_STORE\" and delete them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "find all files in home folder which have been modified exactly 1 day before",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Find all files and directories last modified less than a day ago and copy to \"../changeset\" creating directories as needed",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP to NP"
    },
    {
      "task": "Format a file and display the result to the console",
      "F_verb": "format",
      "source": "tl",
      "cate": "format",
      "pat": "V NP to NP"
    },
    {
      "task": "Connect to a remote host on a domain without a password",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP on NP without NP"
    },
    {
      "task": "Find all files starting from the current directory which are smaller than 100MB",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP which S"
    },
    {
      "task": "Compile a package",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP"
    },
    {
      "task": "Find all files with '.conf' extension under '/etc' directory going into at most 2 level deep and show the last 10 of them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP under NP"
    },
    {
      "task": "Checkout all Git LFS objects",
      "F_verb": "checkout",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Initialize and lock an empty tomb using a key made with `forge`",
      "F_verb": "initialize",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP using NP with NP"
    },
    {
      "task": "Enable receiving messages from the write command",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP from NP"
    },
    {
      "task": "Start tunnel from a specific port",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP from NP"
    },
    {
      "task": "Print \"yes\" 4 times followed by 1 \"no\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP by NP"
    },
    {
      "task": "find all jpg images starting with image in the folder \"dir\" and give them as input to the script, script.ksh",
      "F_verb": "give",
      "source": "nl",
      "cate": "provide/give/supply",
      "pat": "V NP as NP to NP"
    },
    {
      "task": "Find all *.txt files under current directory and print their timestamps and paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Print the absolute path of \"$path\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "convert all the png images in the current folder to jpg images",
      "F_verb": "convert",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Reports count of characters in the value of ${FOO_NO_WHITESPACE} variable as follows: \"length(FOO_NO_WHITESPACE)==<counted number of characters>\"",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all 777 permission directories under current directory and  set permissions to 755",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Write \"foo\" to the real path of the current command's standard output",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP of NP"
    },
    {
      "task": "List all files in maximum 2 levels down the current directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Build a singularity image from a recipe file",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "Search for files/directories that are readable for everybody, have at least one write bit set but are not executable for anybody",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP that S"
    },
    {
      "task": "Check if an IP address is up, and guess the remote host's operating system",
      "F_verb": "guess",
      "reason": "noCate",
      "source": "tl",
      "cate": "assert/assume/guess",
      "pat": "V NP"
    },
    {
      "task": "Undo the last commit, keeping its changes (and any further uncommitted changes) in the filesystem",
      "F_verb": "undo",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directories named 'file_name' under current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Get cluster status",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Load a new kernel",
      "F_verb": "load",
      "reason": "noVerb",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP"
    },
    {
      "task": "Find recursively all regular files in directory tree b that were changed within the last 5 minutes and copy them to directory c",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Add route rule",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Find all *.php (case insensitive) and *.js files (case insensitive) under /home/jul/here excluding  /home/jul/here/exclude/* paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Convert an image from JPG to PNG",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "find all the links that have been modified on a specific day and copy them to another directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Generate java code using the library retrofit2 and the option useRxJava2",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP using NP"
    },
    {
      "task": "create a compressed archive with files newer than 1st of January 2014, 18:00:00.",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "search for all Scala files under the current directory that contain the string null",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP under NP that S"
    },
    {
      "task": "Find all regular files under and below /root that match pattern \"*linux*\", case insensitive",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "find all the files ending with \"mkv\" in current folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Print a single line of numbers from \"001\" to \"100\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP to NP"
    },
    {
      "task": "Build the project",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Show backup snapshots currently stored in the repository",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find symbolic links in lpi104-6 and research/lpi104-6 to files whose pathnames end in \"file1\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP to NP whose S"
    },
    {
      "task": "Render a diagram in given format (e.g. `png`, `pdf`, `svg`, `txt`)",
      "F_verb": "render",
      "source": "tl",
      "cate": "draw/render/paint/redraw/plot",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the \".mov\" files in the current folder and give it as an input to the myffmpeg.sh script file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Ignore any \"copiousoutput\" directive and forward output to standard output",
      "F_verb": "ignore",
      "reason": "noCate",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP to NP"
    },
    {
      "task": "List the unique parent directories of all .class files found in the entire filesystem",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Format C/C++ source according to the GNU style, saving the indented version to a different file",
      "F_verb": "format",
      "reason": "noCate",
      "source": "tl",
      "cate": "format",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all 755 permission regular files under current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all files/directories under current directory which have read-write permission for owner and only read permission for group and others",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP which S"
    },
    {
      "task": "Open a URL in monochrome mode",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the files in the current folder (handles files which contain newlines or only spaces in their names)",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Find all files/directories owned by user 'joebob' under '/some/directory' directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP by NP under NP"
    },
    {
      "task": "display all the regular/normal files in the entire file system",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Enable Network Time Protocol (NTP) synchronization",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Upgrade to the latest development release",
      "F_verb": "upgrade",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V to NP"
    },
    {
      "task": "Print the common third whitespace separated fields in \"file1\" and \"file2\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "search the word \"MySearchStr\" in all the regular/normal files in the current folder and display the line number and the file name",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "display all the regular files in the current folder that are modified after the file \"file.log\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Calculate md5 checksum of '/etc/localtime' and save the first space separated part in variable 'checksum'",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP"
    },
    {
      "task": "Silently download contents from https://raw.github.com/Homebrew/homebrew/go/install and show an error if failed, execute with ruby after the download is completed",
      "F_verb": "download",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    },
    {
      "task": "Replace all instances of \"STRING_TO_REPLACE\" with \"REPLACE_WITH\" in file \"index.html\" and make a backup with suffix \"bak\"",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP of NP with NP in NP"
    },
    {
      "task": "display all the statistics of the files in the current folder and discard the errors",
      "F_verb": "discard",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Upgrade all installed packages to their newest available versions",
      "F_verb": "upgrade",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP"
    },
    {
      "task": "Display system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "recursively change user of the direct public_html and all files into it to user owner",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP into NP to NP"
    },
    {
      "task": "Read a file of MD5SUMs and verify all files have matching checksums",
      "F_verb": "read",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP of NP"
    },
    {
      "task": "Sum the values in the first column of a file and print the total",
      "F_verb": "sum",
      "source": "tl",
      "cate": "cumulate/sum",
      "pat": "V NP in NP"
    },
    {
      "task": "Recursively change the owner and group of \"/home/el/svnworkspace\" and \"775\" to \"your_user_name\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Take input from standard input and save it in a log file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the error, access, ssl_engine and rewrite logs which are bigger than 300MB and are less then 5GB in the folder /opt",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "Apply battery settings (ignoring the actual power source)",
      "F_verb": "apply",
      "source": "tl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP"
    },
    {
      "task": "Print history with the first field removed",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "Search for regular file foo ignoring case",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Print the first 24 alphanumeric characters from \"/dev/urandom\", determining C locale for all categories",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP"
    },
    {
      "task": "Print a sorted list of directories from the ~/Music tree containing files whose names begin with \"cover.\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP whose S"
    },
    {
      "task": "Shrink the filesystem to its minimum possible size",
      "F_verb": "shrink",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP"
    },
    {
      "task": "Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP at NP of NP in NP"
    },
    {
      "task": "Display only packages whose support has ended",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP whose S"
    },
    {
      "task": "change the group of all regular/normal files in the current directory",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Replace all instances of \"STRING_TO_REPLACE\" with \"STRING_TO_REPLACE_IT\" in \"index.html\" and write the output to standard output and \"index.html\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Use a comma separated list of explicit tab positions",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP"
    },
    {
      "task": "Trace calls to malloc and free, omit those done by libc",
      "F_verb": "omit",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V those S"
    },
    {
      "task": "Merge 10 already sorted files and display the result, pausing at each page of output.",
      "F_verb": "merge",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP"
    },
    {
      "task": "Convert require and module.exports to import and export",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Display a search prompt and play the selected video in 720p",
      "F_verb": "play",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the files in the entire file system excluding the folder proc, which do not belong to any user or any group",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "search for a word in all the files in the entire filesystem and display the matched fline along with the file name",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "find all the files in the current folder which have execute permission",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Change to parent directory and resolve any symlinks in the resulting path, making the physical path the current one.",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP"
    },
    {
      "task": "Count the number of regular files with 755 permission under current directory tree",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP with NP under NP"
    },
    {
      "task": "Counts number of *.php files in a current folder and subfolders.",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "find regular files whose filename is \"your_pattern\", suppressing all error messages.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Find all directories under var/ directory and change their permission to 700",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Display file type information for all instances of \"file\" in the current PATH.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP of NP in NP"
    },
    {
      "task": "Resize all images starting with \"DSC\" to 800x600",
      "F_verb": "resize",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP with NP to NP"
    },
    {
      "task": "force delete all the core files in the home folder",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP"
    },
    {
      "task": "display all the files in the current folder which have been modified in the last 24 hours",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "find all the files with the name september ( case insensitive )",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "delete all text files in the home folder after user confirmation",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP after NP"
    },
    {
      "task": "Find all files/directories in current directory and execute myscript for each of them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Receive input and print it to terminal",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP S_INF"
    },
    {
      "task": "search for files in the current folder which start with \"myfile\" ( case insensitive search )",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for in NP which S"
    },
    {
      "task": "Convert dates in filenames from \"M-D-Y\" format to \"D-M-Y\" format",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP from NP to NP"
    },
    {
      "task": "search for the files \"foo.txt\" in the current folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Create directory dir2",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full_backup_dir variable",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Delete all contents (including new lines) form the files that contain the regex 'string' in maximum 1 level down the / directory excluding other partitions",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP that S"
    },
    {
      "task": "Make directories \"Labs/lab4a/folder1\", \"Labs/lab4a/myfolder\", and \"Labs/lab4a/foofolder\"",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Pick up a list of variable:value pairs from msgs.config and add them to the current shell or script's environment.",
      "F_verb": "add",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Update the package cache after adding a repository",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP after S_ING"
    },
    {
      "task": "search for all the files excluding directories ending with old or sccs or core or orig in the project folder and save the output to the file exclude",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP with NP in NP"
    },
    {
      "task": "Find all 400 permission files under /data directory and change their permission to 755",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all directories under 'A' directory tree excluding paths containing the directory 'a'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "display all files in the directory \"dir\" which have been accessed in the last 60 minutes",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Run a command and only trace descendants of this command",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Reset to default text editor",
      "F_verb": "reset",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP"
    },
    {
      "task": "update the permission of all the php files in current directory and save the output to a file",
      "F_verb": "update",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "Locate all files in the current directory and below that have \"testfile\" in their names regardless of the case",
      "F_verb": "locate",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "wait 2 seconds and then print \"hello\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Display the current time as reported by the hardware clock",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP as NP by NP"
    },
    {
      "task": "Find all configration files in Home directory & Subtitute permanently in files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "List and remove all regular files named \"core\" under /prog that are larger than 500k",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Execute script /tmp/echoargs on all files from the /tmp/foo directory tree",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP from NP"
    },
    {
      "task": "Print a count of each unique line from standard input",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Crack password hashes, using a custom wordlist",
      "F_verb": "crack",
      "reason": "noCate",
      "source": "tl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP using NP"
    },
    {
      "task": "Search the /root directory recursively for the regular file named \"myfile\" ignoring \"work\" directories",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "list all CSS files (and directories ending with \u201c.css\u201d) under the current directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "Reduce a volume's size by 40GB as well as the underlying filesystem",
      "F_verb": "reduce",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP by NP as NP"
    },
    {
      "task": "Print variable \"$module\" in formatted rows",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Write \"error\" to standard output",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Find a directory named 'project.images' in the entire filesystem and show it in long listing format",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Analyze a VHDL source file and produce an object file",
      "F_verb": "produce",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Find all files under /path/to/base/dir and change their permission to 644",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Redirects time output to file.",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V to NP"
    },
    {
      "task": "List all streamable files contained in a torrent (given as a magnet link)",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Archive key.pub to directory .ssh in user's home directory on host specified by first parameter to function or script, using ssh to connect on port specified by second parameter to function or script, compress data during transmission.",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP in NP on NP by NP to NP"
    },
    {
      "task": "search for the file \"dok.txt\" in the kat folder and if it sis present then print the echo statement",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Get list of all services",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Open a text file with a specific encoding",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP with NP"
    },
    {
      "task": "Decrease or increase playback speed by 10 %",
      "F_verb": "decrease",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP by NP"
    },
    {
      "task": "Find all files in the current directory tree and replace string $1 with string $2 in them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP in NP"
    },
    {
      "task": "find  files which  full path name is /tmp/foo/bar under foo directory and print",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "display all the \".c\" files in the folder \"/home/david\" which have been accessed in the last 48 hours",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Dump the character output of 'echo `echo \"Ho ho ho\"`'",
      "F_verb": "dump",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP"
    },
    {
      "task": "Search the current directory tree for the files with extension \"trc\" and remove them if they are more than three days old",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP with NP"
    },
    {
      "task": "find all normal/regular files in current folder which end with \"~\" or which begin and end with \"#\" and and move them to  temp folder",
      "F_verb": "end",
      "source": "nl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP in NP which S"
    },
    {
      "task": "display all normal/regular files in current  folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "split file \"$file into pieces named with 5 character suffix",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP with NP"
    },
    {
      "task": "Force a rebuild of all font cache files, without checking if cache is up-to-date",
      "F_verb": "force",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP without S_ING"
    },
    {
      "task": "Disable all swap areas",
      "F_verb": "disable",
      "source": "tl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP"
    },
    {
      "task": "Go to the previous tab",
      "F_verb": "go",
      "source": "tl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V to NP"
    },
    {
      "task": "Recursively change the owner to \"user\" and group to \"www-data\" of \"yourprojectfoldername\"",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP of NP"
    },
    {
      "task": "Print with numbered lines and a custom date format",
      "F_verb": "format",
      "reason": "noCate",
      "source": "tl",
      "cate": "format",
      "pat": "V"
    },
    {
      "task": "Roll 2 5-sided dice 3 times and show the total sum",
      "F_verb": "roll",
      "source": "tl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V NP"
    },
    {
      "task": "Analyze the current working directory",
      "F_verb": "analyze",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "Describe authorities of a role",
      "F_verb": "describe",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP"
    },
    {
      "task": "Copy a file from a remote host to a local directory",
      "F_verb": "copy",
      "reason": "noVerb",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP"
    },
    {
      "task": "Add a custom registry",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Save the directory name of the current bash script to variable \"path\" if it is found in one of the directories specified by PATH.",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP to NP if S"
    },
    {
      "task": "Copy \"/home/username/path/on/server/\" to \"username@your.ip.address.here:/Users/username/path/on/machine/\" and convert encoding from UTF-8 to UTF-8-MAC",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all file which have more the 2 hard link",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "Display all help options",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file \"files.secure\".",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V of NP of NP with NP"
    },
    {
      "task": "Find all files/directories under /path/to/files/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks, stat them and apply the sed replacement \"s/(.*\\|)([0-9]{4})\\-([0-9]{2})\\-([0-9]{2}) ([0-9]{2})\\:([0-9]{2})\\:([0-9]{2}\\.[0-9]{9}).*/\\1\\2\\3\\4\\5\\6\\7/g\" on the output",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Show thermal information",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all directories in maximum 1 level down the $front_element directory, sort them according to modification time and list them excluding the $front_element path from the list",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Check the current system clock time",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Store data that you type from the keyboard",
      "F_verb": "store",
      "reason": "noVerb",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP that S"
    },
    {
      "task": "Specify a custom page segmentation mode (default is 3)",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Replace the first occurrence of \"string1\" on each line with \"string2\" in all regular files in the current directory tree",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP of NP on NP with NP in NP"
    },
    {
      "task": "Recursively change the owner of all files in \"/usr/local/lib/node_modules\" to the current user",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "Specify a given file to serve",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF"
    },
    {
      "task": "Find all files named 'test' in the current directory tree, not descending into \"test\" directories",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP S_ING into NP"
    },
    {
      "task": "Search the package database for a keyword",
      "F_verb": "search",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Copy file linked to by \"file\" to \"file\"",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP by NP"
    },
    {
      "task": "Unset IFS and read a single character from standard input  with timeout of 0.01 seconds and save the response in variable \"keypress\"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP with NP of NP"
    },
    {
      "task": "Start a PHP built-in web server in the current directory",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP in NP"
    },
    {
      "task": "Set the setgid bit on all directories in the repository \"/git/our_repos\"",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP on NP in NP"
    },
    {
      "task": "Remind to leave at noon",
      "F_verb": "remind",
      "reason": "noCate",
      "source": "tl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V S_INF at NP"
    },
    {
      "task": "Print the line with most consecutive repeats prefixed with its count from standard input",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP with NP from NP"
    },
    {
      "task": "Get ephemerides for Paris, France, in the UTC+2 timezone",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP for NP in NP"
    },
    {
      "task": "optimize all the png images in the current folder to level 5 and save the log to the file optipng.log",
      "F_verb": "optimize",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Get the PID of rsync for the user that owns the process matching the pattern expanded by CID$client_id",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP for NP that S"
    },
    {
      "task": "start from current directory, skip the directory src/emacs and all files and directories under it, and print the names of the other files found",
      "F_verb": "start",
      "source": "nl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V from NP"
    },
    {
      "task": "Execute a Lua script",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Find all files under ./lib/app and sort them, then print their contents to myFile",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP"
    },
    {
      "task": "Encode from `stdin`",
      "F_verb": "encode",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V from NP"
    },
    {
      "task": "Build and serve the site using a local server (default is `127.0.0.1:1111`)",
      "F_verb": "serve",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP using NP"
    },
    {
      "task": "Find all files/directories named 'document' in the entire filesystem",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "List manually started services",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Add space-separated files or directories to a Phar file",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "search for all html files in current folder and replace a pattern in all the files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Create a new site",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "display all the text and pdf files in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Read `stdin` and perform an action on every line",
      "F_verb": "perform",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP"
    },
    {
      "task": "Monitor Clockwork logs for a specific project",
      "F_verb": "monitor",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Format the output of \"...\" as a tab separated table",
      "F_verb": "format",
      "source": "nl",
      "cate": "format",
      "pat": "V NP of NP as NP"
    },
    {
      "task": "Print canonical filename of \"/path/there/../../\" even if it does not exist",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP if S"
    },
    {
      "task": "Show all previously typed shell commands, waiting for user interaction after each page of output.",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP after NP"
    },
    {
      "task": "Create a new pipeline skeleton",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "display all the files in the kat folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Decompress a file and silently overwrite files if they exist",
      "F_verb": "decompress",
      "reason": "noCate",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP if S"
    },
    {
      "task": "Specify a label for the file (to allow `swapon` to use the label)",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP S_INF"
    },
    {
      "task": "Find files that have been modified within the last month and copy them somewhere",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Change XDG's DESKTOP directory to the specified directory (must be absolute)",
      "F_verb": "change",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Copy \"*.cc\", \"*.h\", and \"SConstruct\" to \"rsync://localhost:40001/bledge_ce\" using blocking IO",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP using NP"
    },
    {
      "task": "delete all the mp3 files in the current folder.",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Check every versioned file",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "run a script in 1000 seconds",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP"
    },
    {
      "task": "find all foo.bar files in the entire file system and which are present in the same partition as root.",
      "F_verb": "present",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V in NP as NP"
    },
    {
      "task": "find files which full path name is /tmp/foo/bar under /tmp/foo directory and print",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    }
  ],
  "3": [
    {
      "task": "Find all files with extension .aac in the /home directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Use multiple -exec command in find . Find all .txt files & grep banna in .txt files .",
      "F_verb": "use",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP"
    },
    {
      "task": "Display statistics every 5 seconds and 4 updates only",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "display all regular files in the folder image-folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Show all lines as they are executed and stop at the first command returning nonzero",
      "F_verb": "stop",
      "source": "nl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V at NP S_ING"
    },
    {
      "task": "Uninstall specific version of a gem",
      "F_verb": "uninstall",
      "reason": "noVerb",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP of NP"
    },
    {
      "task": "List dynos (Heroku virtual machines) for an app",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP for NP"
    },
    {
      "task": "Specify distribution logo",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Start mytop",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "List installed packages and versions",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Find and list all regular files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "List all available commands",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Print appended data in \"/var/log/syslog\" as the file grows",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP as NP"
    },
    {
      "task": "Delete all lines matching \"pattern to match\" in \"./infile\" and make a backup with suffix \".bak\"",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "display all files in current folder using regular expression",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP using NP"
    },
    {
      "task": "find all the normal/regular files in current folder excluding sub directories and hidden folders and display the count",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Make \"file.sh\" executable",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Execute a brute force against a MySQL server using a file cointaining usernames and a hash",
      "F_verb": "hash",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V"
    },
    {
      "task": "find all the files which have size 0 bytes in temp folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "Sync two directories (creates log first time these two directories are synchronised)",
      "F_verb": "sync",
      "reason": "noCate",
      "source": "tl",
      "cate": "synchronize/sync/synchronise",
      "pat": "V NP"
    },
    {
      "task": "Analyse a directory using a configuration file",
      "F_verb": "analyse",
      "reason": "noCate",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP using NP"
    },
    {
      "task": "find all the files in the file system which belong to the user \"pat\" and with the name \"dateiname\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Run the specified git command, paging through the output with raw characters written to the terminal, without initializing the terminal capabilities, and automatically exiting when the end of the output is reached.",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Set Python version to be used globally in the current machine",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF in NP"
    },
    {
      "task": "Print multiple pages per sheet",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Print the average round trip time of 5 pings to \"google.com\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Search /usr/local recursively for directories whose names end with a number 0-9",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP whose S"
    },
    {
      "task": "Prints a process tree for each process of user 'username'.",
      "F_verb": "process",
      "source": "nl",
      "cate": "handle/process/preprocess",
      "pat": "V NP for NP of NP"
    },
    {
      "task": "Find all *.sh files owned by user vivek",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP by NP"
    },
    {
      "task": "Create new group with a specific groupid",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Treat warnings as errors",
      "F_verb": "treat",
      "reason": "noCate",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP as NP"
    },
    {
      "task": "Launch a VNC client with a specific screen geometry",
      "F_verb": "launch",
      "reason": "noVerb",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP with NP"
    },
    {
      "task": "Execute \"ls\" every 2 seconds",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Append something to the PATH variable",
      "F_verb": "append",
      "reason": "noVerb",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Write the current document to a new file (the filename can be omitted if `ed` was called with an existing file)",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Replace \"string1\" with \"string2\" in all regular files in the current directory tree",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Recursively removes all empty folders under current folder.",
      "F_verb": "empty",
      "source": "nl",
      "cate": "clear/clean/empty/eliminate/unpin/cleanup/unpublish",
      "pat": "V NP under NP"
    },
    {
      "task": "Fork before executing ssh (runs in the background) and don't open a remote shell",
      "F_verb": "fork",
      "source": "tl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V before NP"
    },
    {
      "task": "display all the regular/normal files in the home folder that have been modified in the last 1 day (from the start of day ie, from 00:00 )",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Print the icmp sequence number and ping time of each request to \"127.0.0.1\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Print the list of all regular files from the current directory tree that contain \"confirm\", case insensitive",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP that S"
    },
    {
      "task": "Open an image in fullscreen mode",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP in NP"
    },
    {
      "task": "Search for an exact string",
      "F_verb": "search",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Specify user and group (ID or name) to use",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF"
    },
    {
      "task": "Synchronize \"xxx-files\" to \"different-stuff/xxx-files\" recursively preserving metadata with a bandwidth limit of 2000 KiB/s",
      "F_verb": "synchronize",
      "source": "nl",
      "cate": "synchronize/sync/synchronise",
      "pat": "V NP to NP with NP"
    },
    {
      "task": "Show ASCII table in octal",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Clean database objects before creating them",
      "F_verb": "clean",
      "reason": "noCate",
      "source": "tl",
      "cate": "clear/clean/empty/eliminate/unpin/cleanup/unpublish",
      "pat": "V NP before S_ING"
    },
    {
      "task": "Synchronize and update all packages from the repos and AUR",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP from NP"
    },
    {
      "task": "Search for files that were accessed less than 5 days ago.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP that S"
    },
    {
      "task": "List a specific secret as a base64-encoded string",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP as NP"
    },
    {
      "task": "Find all the files in file system which are changed in last 1 hour",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "display a long list of all regular/normal files in the file system which belong to the root and with suid bit set",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V"
    },
    {
      "task": "find all the normal/regular files in the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Run a program and pass an argument to it",
      "F_verb": "pass",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP"
    },
    {
      "task": "Recursively copy \"dir_b\" to \"dir_a\" and delete any new files in \"dir_a\"",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Output two lines of \"-tcp\"",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Display the user running each process",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Count the number of unique file extensions in the current directory tree",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Calculate SHA224 checksums for multiple files",
      "F_verb": "calculate",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP for NP"
    },
    {
      "task": "Change the owner and group of \"testfile.txt\" to \"root\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Remove all directories in and below the current directory",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Create a symbolic link in target directory \"~/newlinks\" to \"$source\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Remove all files in the $backup_path directory recursively that were last modified more than 30 days ago",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Create a new Ember addon",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Print the I/O scheduling class and priority of a running process",
      "F_verb": "process",
      "source": "tl",
      "cate": "handle/process/preprocess",
      "pat": "V"
    },
    {
      "task": "Scan a web server using the `HEAD` HTTP method",
      "F_verb": "scan",
      "source": "tl",
      "cate": "visit/rescan/scan/walk/iterate/access/descend/traverse",
      "pat": "V NP using NP"
    },
    {
      "task": "Print yesterday's date information in \"%a %d/%m/%Y\" format",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the files which have been accessed after modifying the file /etc/hosts",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "Remove all staged files, excluding those that match a specified pattern",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V those S"
    },
    {
      "task": "Search through the /usr directory for all files that begin with the letters Chapter, followed by anything else.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V throught NP for NP that S"
    },
    {
      "task": "print all lines after the last match of 'string match'",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP after NP of NP"
    },
    {
      "task": "Start calc in interactive mode",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all image.pdf files/directories under ./polkadots with null character as the delimiter",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP with NP as NP"
    },
    {
      "task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "List all routes in an expanded format",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the files in the entire file system that have been changed exactly  60 days  and display ten files",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "View the queue and refresh every 5 seconds",
      "F_verb": "view",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Search non-recursively directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP whose S"
    },
    {
      "task": "List all processes with detailed information",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP with NP"
    },
    {
      "task": "Show files in /home owned by group `test'",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP by NP"
    },
    {
      "task": "Find all files/directories with '.bar' extension in maximum 2 levels down the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Search the current directory recursively for files containing \"string\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Find all Executable files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Calculate the number of bytes of all the files listed in \"files.txt\"",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Split \"your_file\" into files with at most 9 lines each",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP with NP"
    },
    {
      "task": "Read a file of SHA224 sums and verify all files have matching checksums",
      "F_verb": "verify",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Synchronize list of packages and versions available. This should be run first, before running subsequent aptitude commands",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Search for files greater than 20MB in the entire file system, sort them according to size in descending order and display the path and file size",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "find all the text files in current folder and force delete them",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Renew all Let's Encrypt certificates that expire in 30 days or less (don't forget to restart any servers that use them afterwards)",
      "F_verb": "restart",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP that S"
    },
    {
      "task": "List all \".txt\" files with a unique md5 hash",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP with NP"
    },
    {
      "task": "Delete all directories in minimum 2 levels down the root directory",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP whose S"
    },
    {
      "task": "Find all files under ./lib/app and sort them",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP"
    },
    {
      "task": "find all the text files in the current folder and display the results pagewise",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Scan a file for vulnerabilities",
      "F_verb": "scan",
      "source": "tl",
      "cate": "visit/rescan/scan/walk/iterate/access/descend/traverse",
      "pat": "V NP for NP"
    },
    {
      "task": "Search package via keyword",
      "F_verb": "search",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP via NP"
    },
    {
      "task": "Show commits made since 1 week ago",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Print a file to a named printer (see `lpstat` command)",
      "F_verb": "print",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Count the number of files/directories with '.php' extension under current directory tree and change the permissions to 755",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Display the default device",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Extract pages 1-3, 5 and 6-10 from a PDF file and save them as another one",
      "F_verb": "extract",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP as NP"
    },
    {
      "task": "Search using a keyword",
      "F_verb": "search",
      "reason": "noCate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V using NP"
    },
    {
      "task": "Use a custom ESLint plugin when linting",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP when S"
    },
    {
      "task": "Show metadata in a file without removing it",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP without S_ING"
    },
    {
      "task": "display all the directories in the folder /path/to/dest except tmp and cache directories",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Specify Debian branch, stable is used by default",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP by NP"
    },
    {
      "task": "Search the /root directory recursively for files named \"FindCommandExamples.txt\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "replace a word in all the regular/normal files in the current folder",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Write output of \"whatever\" to standard output and to \"logfile.txt\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Format contents of \"file\" as a table",
      "F_verb": "format",
      "source": "nl",
      "cate": "format",
      "pat": "V NP of NP as NP"
    },
    {
      "task": "Print each line in \"file1.txt\" that is not found in \"file2.txt\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Find all regular files in <path> and execute process with all of them as arguments",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Force encryption for peer connections",
      "F_verb": "force",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP for NP"
    },
    {
      "task": "Print content of /etc/passwd and /etc/group files",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "change permission of all the files in the entire file system which have permissions 777.",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP which S"
    },
    {
      "task": "Find all regular files under $DIR/tmp/daily/, sort them in reverse numerical order and copy the first two files to $DIR/tmp/weekly/",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all files with 644 permission and change the permission to 664",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Find all *.htm files under current directory and change their names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format",
      "F_verb": "format",
      "source": "nl",
      "cate": "format",
      "pat": "V"
    },
    {
      "task": "Look up a control character",
      "F_verb": "look",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Find all files named \"MyCProgam.c\" (ignoring the case) and calculate each file's md5sum.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Find all regular files under /home/www and replace every occurrences of 'subdomainA' with 'subdomainB' in those files (may produce 'agument too long' error)",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP of NP with NP in NP"
    },
    {
      "task": "List the sizes of a directory and any subdirectories, in human-readable form (i.e. auto-selecting the appropriate unit for each size)",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Find all directories and for each of them, print an mv command to move it to /new/location",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP S_INF"
    },
    {
      "task": "Show 10 random entries",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Concatenate several files into the target file",
      "F_verb": "concatenate",
      "reason": "noVerb",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP into NP"
    },
    {
      "task": "Find all directories named $1 under $HOME directory tree and remove them",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Report file system inodes usage in human readable format",
      "F_verb": "report",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP in NP"
    },
    {
      "task": "show all the \".flac\" files in the current folder and do not search in the sub directories",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Sparsify an image in-place",
      "F_verb": "sparsify",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "find all the files in the current directory which have the inode number 31246 and remove them.",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Remove with prompting all files starting in /mydir that have not been accessed in over 100 days",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V with NP in NP that S"
    },
    {
      "task": "Start finder on all files from arbitrary locations",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP on NP from NP"
    },
    {
      "task": "Get domain \"$domain\" IP address",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Add a git repository as a submodule",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP as NP"
    },
    {
      "task": "Set variable \"fname\" to the basename of path specified in variable \"f\", that is remove everything up to the last slash if present.",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP of NP in NP that S"
    },
    {
      "task": "Extract and print hostname and protocol part from URL like \"http://www.suepearson.co.uk/product/174/71/3816/\".",
      "F_verb": "extract",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    },
    {
      "task": "Get all types of records for a given domain name",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "Find files/directories under current directory that matches './projects/insanewebproject' in their paths and show the first one",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Display recommended readings",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Fork and detach physlock (useful for suspend or hibernate scripts)",
      "F_verb": "fork",
      "source": "tl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V"
    },
    {
      "task": "Query an LDAP server with a no-newline password file for all items that are a member of the given group and return the object's displayName value",
      "F_verb": "return",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Print all '-' separated digits in file 'infile' as dot ('.') separated digits",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP as NP"
    },
    {
      "task": "find all files in the current folder with the permission 777 and modify the permissions as 755.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Report the run queue length and load averages, one per second",
      "F_verb": "load",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP"
    },
    {
      "task": "Guess POP3 credentials on a list of hosts using usernames and passwords lists, exiting when a username/password pair is found",
      "F_verb": "pair",
      "reason": "noCate",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Start mosquitto",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Find all *.gz files in the current directory and decompress them using gunzip",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "find a file in current folder and discard the errors",
      "F_verb": "discard",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Do not include debug symbols in the output",
      "F_verb": "include",
      "reason": "noCate",
      "source": "tl",
      "cate": "import/include",
      "pat": "V NP in NP"
    },
    {
      "task": "display the directory name along with the modified time  for all the files /var",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP for NP"
    },
    {
      "task": "Filter a saved traffic file to just POST requests",
      "F_verb": "filter",
      "source": "tl",
      "cate": "filter",
      "pat": "V NP to NP"
    },
    {
      "task": "find all of the executable files on your computer",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP on NP"
    },
    {
      "task": "Edit quota for a group",
      "F_verb": "edit",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP for NP"
    },
    {
      "task": "List all the methods in an assembly",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Create a symbolc link named \"public_html\" to \"current/app/webroot\" under the current working directory",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP to NP under NP"
    },
    {
      "task": "search for all text files in current folder and delete them",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "display all the files in the current directory excluding the paths \"targert\", \"tools\", \"git\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Initialise a new Behat project",
      "F_verb": "initialise",
      "reason": "noCate",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP"
    },
    {
      "task": "List all regular files under current directory (not white space sage)",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "find all files and directories under the current directory and display the inode of each one, using the stat command on FreeBSD/OSX",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Initialize the `/dev/sda1` volume for use by LVM",
      "F_verb": "initialize",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP for NP by NP"
    },
    {
      "task": "Print out every command that is executed in the script",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP that S"
    },
    {
      "task": "List level 2 subdirectories of the current directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP"
    },
    {
      "task": "Delete a bookmark",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Create a new branch with the contents of a pull request and switch to it",
      "F_verb": "switch",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP"
    },
    {
      "task": "Make all the bugzilla subdirectories permission 775",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP for NP"
    },
    {
      "task": "find all the files in the current directory and sub-directories whose status was changed after /etc/fstab was modified",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Interactively create a new wapm.toml file",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Recursively check a given directory, and don't print progress messages",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Create a new branch with the contents of a pull request and switch to it",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP of NP"
    },
    {
      "task": "List the z* links in the /usr/bin directory and the file to which it points to",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Compile a file and all dependencies to a single executable",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP to NP"
    },
    {
      "task": "Calculate the SHA1 checksum for a file",
      "F_verb": "calculate",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP for NP"
    },
    {
      "task": "Switch to a given user (requires the user's password)",
      "F_verb": "switch",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP"
    },
    {
      "task": "display a long listing of all the normal/regular files in the current folder and do not search in the sub folders",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP"
    },
    {
      "task": "Find all \"G*.html\" files modified more than 7 days ago in the current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "View current configuration",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Prints server name from SOA record for domain yahoo.com",
      "F_verb": "record",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V for NP"
    },
    {
      "task": "Send mail with content passed from another command",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP with NP from NP"
    },
    {
      "task": "Find all files under current directory whose status was changed less than 3 days ago, sort them and show last 5 lines of output with only their paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP whose S"
    },
    {
      "task": "Read the default configuration file `/etc/named.conf`, read any initial data and listen for queries",
      "F_verb": "read",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP for NP"
    },
    {
      "task": "List supported file formats",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Find all level 1 subdirectories of the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP"
    },
    {
      "task": "Specify a specific branch to pull",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF"
    },
    {
      "task": "convert all the normal files in the current folder from dos format to unix format (remove extra characters at the end etc.)",
      "F_verb": "convert",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP from NP to NP"
    },
    {
      "task": "Installs 'php-mssql' package with enabling repository 'remi'.",
      "F_verb": "package",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V with NP"
    },
    {
      "task": "compare each C header file in or below the current directory with the file /tmp/master",
      "F_verb": "compare",
      "source": "nl",
      "cate": "compare",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Recursively search for all regular files below directory \"dir1\" in currentd directory, and output the name of each, without any containing directories.",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP without NP"
    },
    {
      "task": "delete all the files in the file system which belong to the user edwarda",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Locate python interpreter and show its human-readable file type description, resolving any symlinks.",
      "F_verb": "locate",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Search all the regular files from the current directory tree for \"search string\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Export the public key of a specified email address to the standard output",
      "F_verb": "export",
      "source": "tl",
      "cate": "export",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Disable ufw",
      "F_verb": "disable",
      "source": "tl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP"
    },
    {
      "task": "Sort file1 and file2 then display differences between them.",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP and NP"
    },
    {
      "task": "Mount an encrypted filesystem. The initialization wizard will be started on the first execution",
      "F_verb": "mount",
      "reason": "noCate",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP"
    },
    {
      "task": "show the disk use of all the regular/normal files in the current folder which are bigger than 50MB",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP which S"
    },
    {
      "task": "Report on quotas for groups only",
      "F_verb": "report",
      "reason": "noVerb",
      "source": "tl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP for NP"
    },
    {
      "task": "Search \"inputfile\" for lines starting with \"t:\" and group the results in files with at most 200 lines each",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP with NP"
    },
    {
      "task": "Create an EXE binary with a reverse TCP handler",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "search for all the files in the current folder which have the word \"-GHBAG-\" and display the move command for replacing the word \"GHBAG\" in the file names to \"stream-agg\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP which S"
    },
    {
      "task": "Display the current verson of `vipw`",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Check if *RBENV* variable is defined in global environment",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Show find's version",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V"
    },
    {
      "task": "Create filesystem with specific UUID",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Start the cluster",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "create a tar.gz compress file with all the jpg files in the entire file system",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "List \".java\" files that have the same contents",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP that S"
    },
    {
      "task": "Write the current date and time followed by \" 1\" to the console and append to \"log.csv\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP by NP to NP"
    },
    {
      "task": "Store a new secret in the vault, using the generic back-end called \"secret\"",
      "F_verb": "store",
      "reason": "noCate",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP in NP using NP"
    },
    {
      "task": "List all files, including hidden files",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Compile for a specific target",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V for NP"
    },
    {
      "task": "Copy /my/configfile to all empty directories of the $somedir directory tree",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP of NP"
    },
    {
      "task": "Convert file(s) to a specific encoding",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.",
      "F_verb": "collect",
      "source": "nl",
      "cate": "collect/recycle/sample",
      "pat": "V NP with NP"
    },
    {
      "task": "Find all executable files under current directory and show a few lines of output from the beginning",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Return output in a specific format",
      "F_verb": "return",
      "reason": "noVerb",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP in NP"
    },
    {
      "task": "Compress a file, but don't delete the original",
      "F_verb": "compress",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP"
    },
    {
      "task": "Edit the crontab file for the current user",
      "F_verb": "edit",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP for NP"
    },
    {
      "task": "find all the \".jpg\" files in current folder and display their count",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "find all files in current folder having the name pattern \"some_pattern\" and move them to folder target_location (GNU VERSION)",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP to NP"
    },
    {
      "task": "find all the text files in current folder and move all these to another folder appending \".bar\" at the end of these files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the cpp files in the current folder and move them to another folder(plus takes the bulk output of the find command and gives it as input to the move command in exec)",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP in NP"
    },
    {
      "task": "Run one or more specific space-separated task(s)",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Add a new site to Oh Dear",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "find all the files in the /usr folder which have modification date less than or equal to the file \"/FirstFile\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "change the permissions of all the normal files in a directory",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Print the current directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "find files in home directory that names are game",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Report a bug about the whole system",
      "F_verb": "report",
      "source": "tl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP about NP"
    },
    {
      "task": "Create a unique name for the current commit (the name contains the most recent annotated tag, the number of additional commits, and the abbreviated commit hash)",
      "F_verb": "commit",
      "source": "tl",
      "cate": "commit/submit/upload",
      "pat": "V NP"
    },
    {
      "task": "Same as above, customize username",
      "F_verb": "customize",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "Open a PDF file",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP"
    },
    {
      "task": "Fill the current database with data defined in db/seeds.rb",
      "F_verb": "fill",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Find all PNG and JPG files and append them to archive `images.tar'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP to NP"
    },
    {
      "task": "Write output of specified file to the specified host on the specified port",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP on NP"
    },
    {
      "task": "Find the top 5 biggest files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Execute 100 HTTP POST requests to a given URL, using a JSON payload from a file",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP to NP using NP"
    },
    {
      "task": "Delete all the files found in the current directory tree whose names begin with \"heapdump\"",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Launch a VNC server on a specific display and screen (both starting at index zero)",
      "F_verb": "index",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "Display all filesystems including pseudo, duplicate and inaccessible filesystems",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP including NP"
    },
    {
      "task": "Find all directories in directory tree `httpdocs'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Run a command as the superuser",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP as NP"
    },
    {
      "task": "Print a summary of the image Exif metadata",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Find and remove all .mp3 regular files under the current directory and below",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Login to the director",
      "F_verb": "login",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V to NP"
    },
    {
      "task": "Get more help",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Create a connection to a host and port, transfer data in STDIO to connected host",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP to NP"
    },
    {
      "task": "Display basic performance counter stats for a command",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "display all the html files in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Undo the last operation",
      "F_verb": "undo",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP"
    },
    {
      "task": "list the regular files in your home directory that were modified yesterday",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Set 644 permission to all regular files under /home/my/special/folder directory",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP under NP"
    },
    {
      "task": "Find all files under and below /dir that were accessed less than 60 minutes ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "split compressed content of the file www into pieces per 1073741824 bytes named as \"backup.tar.NNN\"",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP of NP as NP"
    },
    {
      "task": "Find all files/directories under mnt/naspath without descending into .snapshot directory, calculate the total size and redirect the result to /tmp/size.log file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP without S_ING"
    },
    {
      "task": "Detect embedded data in a BMP image, using all known methods",
      "F_verb": "detect",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP in NP using NP"
    },
    {
      "task": "Time stamp every ping request to 8.8.8.8 in Unix epoch format",
      "F_verb": "ping",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "Build a Nix expression",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "List all files in the /hometest directory tree whose names are \"Trash\", and their sizes",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP whoseS"
    },
    {
      "task": "Find all files in /home/user/ that were created or changed 10 minutes ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Print the names of all regular files in the current directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Find all directories named 'files' under current directory and set read-write-execute permission for owner and group and no permission for other for those directories",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Make directory \"/etc/cron.5minute\"",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Write out the entire directory hierarchy from the current directory",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP"
    },
    {
      "task": "Set the variable \"me\" to the name of the running script, or shell, login shells have a hyphen appended to the beginning of the name, such as \"-bash\".",
      "F_verb": "login",
      "source": "nl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP to NP of NP as NP"
    },
    {
      "task": "Print each line in \"file1\" whose first word does not exist as the first word of any line in \"file2\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Find all the regular files in $DIR directory tree which have not been modified in the last 15 days and delete them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Stop all running stopwatches",
      "F_verb": "stop",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP"
    },
    {
      "task": "Build the artifacts",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Force create a hard link in \"/usr/local/bin\" to \"findpdftext\"",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "List all supported subcommands (\"verbs\")",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "find all the html, javascript and text files in the current folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Check if a specific module is installed",
      "F_verb": "check",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Trigger a key event",
      "F_verb": "trigger",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Remove all \"work\" directories residing in /usr/ports and below",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files under current directory and search for 'something' in those files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "set alias \"cleanup\" for command 'rm -Rf `pwd`/{foo,bar,baz}'",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Print lines of code in the target directory",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Copy and don't print a 2FA code using the OTP token in a pass file",
      "F_verb": "copy",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP using NP in NP"
    },
    {
      "task": "Find all files with '.db' extension (case insensitive) that belong to user 'exampleuser' and were modified exactly 7 days ago under '/home' directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP that S"
    },
    {
      "task": "Search for all files that end in \".conf\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP that S"
    },
    {
      "task": "Find files that were modified second last week and archive them",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Run a shell in a named screen session",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP"
    },
    {
      "task": "Print the names and sizes of all regular files from the current directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Display total apparent size of a file",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "List alive hosts within a subnet generated from an IP range",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP within NP from NP"
    },
    {
      "task": "Read standard input until a null character is found and save the result in variable \"line\"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP until NP"
    },
    {
      "task": "Print the sizes and file names of all files in the current directory tree that are between 700k and 1000k",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP that S"
    },
    {
      "task": "This will remove all files (type f) modified longer than 14 days ago under /root/Maildir/ recursively from there and deeper (mindepth 1",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP from NP"
    },
    {
      "task": "Parse and transform a CSS file and output to a specific directory",
      "F_verb": "transform",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Compile a shell script and set a message to display upon expiration",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP"
    },
    {
      "task": "Set up SSH connection forwarding in the background with no terminal or command execution from localhost port 8888 to \"proxyhost\" port 8888 and a reverse connection from \"officefirewall\" port 22222 to \"localhost\" port 22",
      "F_verb": "reverse",
      "source": "nl",
      "cate": "flip/rotate/permute/swap/transpose/reverse/shuffle",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Find all files/directories under current directory tree without descending into './src/emacs' directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP without S_ING"
    },
    {
      "task": "Suspend pulseaudio while running `jackd`",
      "F_verb": "suspend",
      "reason": "noCate",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP while S"
    },
    {
      "task": "Find recursively the latest modified file in the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Recursively make an entire directory and contents immutable",
      "F_verb": "make",
      "source": "tl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Let the user exit (CTRL + C)",
      "F_verb": "exit",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Print a file to the default printer",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "List the USB hierarchy as a tree",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP as NP"
    },
    {
      "task": "Apply script rename.sh to all files from the current directory tree whose names match regular expression \"xxx-xxx_[a-zA-Z]+_[0-9]+_[0-9]+\\.jpg$\"",
      "F_verb": "apply",
      "source": "nl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP to NP from NP whose S"
    },
    {
      "task": "Create a new Ember application",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Execute \"du -s path\" every 300 seconds",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "create directory /data/db",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Preserve the entire environment of root (only if `--login` is not specified)",
      "F_verb": "preserve",
      "reason": "noCate",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP if S"
    },
    {
      "task": "Display a list of available rulesets and formats",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Install Cradle's components (User will be prompted for further details)",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Print a count of files and directories in the current directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Run a program. Often used in scripts after the shebang (#!) for looking up the path to the program",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "List all .gif files in the current directory tree",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "find the md5 sum of all the regular files in multiple folders and display them in sorted order",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Kill all processes which match",
      "F_verb": "kill",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP which S"
    },
    {
      "task": "Find all files in /tmp whose names begin with the current user's name followed by \".\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "find the top 25 files in the current directory and its subdirectories",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Toggle mute on the default sink (using the special name `@DEFAULT_SINK@`)",
      "F_verb": "toggle",
      "reason": "noCate",
      "source": "tl",
      "cate": "toggle",
      "pat": "V NP on NP using NP"
    },
    {
      "task": "Find .log files in the /var/log directory tree and copy them to a bzip2 archive",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the files in the present directory which have the group staff and check if is a symbolic link and display it.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all 1US* files/directories under current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Print only common strings in content of files 'file1.sorted' and 'file2.sorted'",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP of NP"
    },
    {
      "task": "Remove the first 13 characters of each \".txt\" filename in the \"/tmp\" directory tree and number the output",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "List all environment variables",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Scan a web server for user-defined paths with common extensions",
      "F_verb": "scan",
      "source": "tl",
      "cate": "visit/rescan/scan/walk/iterate/access/descend/traverse",
      "pat": "V NP for NP with NP"
    },
    {
      "task": "Find all .core files on the system starting from / and delete them",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Recursively unzip files to stdout in \"/some/dir/here\" and search for \"blah\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "download contents from \"http://www.example.com\" using a proxy server",
      "F_verb": "download",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP using NP"
    },
    {
      "task": "Copy current working directory to clipboard",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP S_INF"
    },
    {
      "task": "Change permissions of all files ending \".php\" under the current directory to 755 and print a count of modified files",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Display top 500 mp4 and flv files under current directory along with their timestamps in the sorted order of time",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP under NP with NP in NP of NP"
    },
    {
      "task": "Find all files in current directory and search for 'searchName' in those files and show errors for files that are not directly on the current directory",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "List all *.jpg files/directories in entire file system",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Set up a remote port forward from port 10022 on host \"server\" to port 22 on localhost",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V up NP from NP on NP to NP on NP"
    },
    {
      "task": "Initialize the bottle (run once, at start)",
      "F_verb": "initialize",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP"
    },
    {
      "task": "Compile Go program in the current directory for all operating systems and architecture combinations",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP in NP for NP"
    },
    {
      "task": "Find all 664 permission files/drectories under current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "find all files read less than 1 minute ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Run the default task",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Show the public key of the private key that was used to sign an assembly",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP that S"
    },
    {
      "task": "List a specific namespace and include lots of additional information",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Record a new session to a custom filepath",
      "F_verb": "record",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Find files/directories containing 'test' in their names and display the directory contents before the directories themselves",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "reverse input with comma deliminators",
      "F_verb": "reverse",
      "source": "nl",
      "cate": "flip/rotate/permute/swap/transpose/reverse/shuffle",
      "pat": "V NP with NP"
    },
    {
      "task": "Display a name/password form and output the data separated by \";\"",
      "F_verb": "output",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP by NP"
    },
    {
      "task": "Delete files containing whitespaces without recursion",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP without NP"
    },
    {
      "task": "Save the system host name to variable \"myHostName\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all TXT files in the current directory and copy them to directory \"$HOME/newdir\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Convert a WRL file to a OFF file, including the vertex and face normals in the output mesh",
      "F_verb": "output",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Convert stereo audio at the highest quality level",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP at NP"
    },
    {
      "task": "Test if given variable is equal to given string",
      "F_verb": "test",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "List all Docker images including intermediates",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP including NP"
    },
    {
      "task": "Prune unreachable objects while showing progress",
      "F_verb": "prune",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP while S"
    },
    {
      "task": "Find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with \"autumn\".",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP by NP in NP"
    },
    {
      "task": "Copy the entire contents of the current directory preserving ownership, permissions, and times",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP of NP"
    },
    {
      "task": "Extract frames from an animation",
      "F_verb": "extract",
      "reason": "noVerb",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    },
    {
      "task": "Update virus definitions",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directories named file in minimum 4 levels down the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Query for ANY available records using TCP protocol",
      "F_verb": "query",
      "reason": "noCate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP using NP"
    },
    {
      "task": "Render all frames of an animation in the background, without loading the UI (output is saved to `/tmp`)",
      "F_verb": "render",
      "source": "tl",
      "cate": "draw/render/paint/redraw/plot",
      "pat": "V NP of NP in NP without S_ING"
    },
    {
      "task": "Update the vulnerability database",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "Search the system for directories named \"needle\" suppressing error messages",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Remove a symbolic link",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Check all .txt files whose names may contain spaces whether they contain \"needle\"",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP whose S"
    },
    {
      "task": "List shares",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Display variable 'var' without leading and trailing whitespace.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP without NP"
    },
    {
      "task": "Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding $EXCLUDE/* paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Specify how many of the last logins to show",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP S_INF"
    },
    {
      "task": "Raise an error if there is a reference to a non-existent environment variable and exit the shell immediately if there is any error",
      "F_verb": "raise",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP if S"
    },
    {
      "task": "Set an image in the kustomization file",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP in NP"
    },
    {
      "task": "Search the current directory tree for regular files whose names begin with \"orapw\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP whose S"
    },
    {
      "task": "Compile a source file with release optimizations enabled",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP with NP"
    },
    {
      "task": "Build the static output by updating only the specified repository",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP by S_ING"
    },
    {
      "task": "Remove all files from the system whose path names contain \"GUI\"",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP whose S"
    },
    {
      "task": "Connect to a remote server with a specific identity (private key)",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP with NP"
    },
    {
      "task": "Copy an image file into sdb",
      "F_verb": "copy",
      "reason": "noVerb",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP into NP"
    },
    {
      "task": "Load a PowerShell script from the `--scripts` folder",
      "F_verb": "load",
      "reason": "noVerb",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP"
    },
    {
      "task": "Find all files in directory tree /tmp/foo and pass them as arguments to script /tmp/echoargs",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Search all files in the current directory tree that are named \"whatever\" for \"whatever\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "display all the header files  and cpp files in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all build* directories under /var/www/html/ and reverse sort them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Tell the Erlang shell to load modules from a directory",
      "F_verb": "tell",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP S_INF from NP"
    },
    {
      "task": "Join columns in \"file1\" and \"file2\" if their first field matches and format the output as a table",
      "F_verb": "join",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP in NP if S"
    },
    {
      "task": "Find and print the names of all files found in the current directory and all of its sub-directories.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP of NP"
    },
    {
      "task": "Stream a torrent to a Digital Living Network Alliance (DLNA) device",
      "F_verb": "stream",
      "reason": "noCate",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP to NP"
    }
  ],
  "4": [
    {
      "task": "Display help about a specific command",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Search for \" 840\" in history",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Make a playlist out of all the mp3 and ogg files in the home directory",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Find blabla* files under current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "search for all the log files in the folder \"/var/log\" and create a tar ball and compress it to bz2.",
      "F_verb": "compress",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP to NP"
    },
    {
      "task": "find all the files in the current directory and print them excluding those that have the name SCCS.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP those S"
    },
    {
      "task": "Display the image name of the container",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Execute \"${MD5}\" on all files found under \"${1}\", numerically sort the results, and save to variable \"DATA\"",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP under NP"
    },
    {
      "task": "Initialize a `.fossa.yml` configuration file",
      "F_verb": "initialize",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP"
    },
    {
      "task": "find all the directories  with the name \"c\" in the current folder which are at least 3 levels deep and which are not present in the path \"/p/\".",
      "F_verb": "present",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V in NP"
    },
    {
      "task": "Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2', also outputting unmatched lines from 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.",
      "F_verb": "merge",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP whose S"
    },
    {
      "task": "Run command \"program\" as the current user",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP as NP"
    },
    {
      "task": "Recursively search the current directory for a regex pattern",
      "F_verb": "search",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Display dmenu at the bottom of the screen",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP at NP of NP"
    },
    {
      "task": "Rename .jpg files to .jpeg in all subdirectories of the current directory",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP in NP of NP"
    },
    {
      "task": "find all the files in current folder which have been updated in the last 60 minutes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Print the last line of \"$file1\" to the console and append to \"$file2\"",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V to NP"
    },
    {
      "task": "Make an encrypted snapshot of a plain directory",
      "F_verb": "make",
      "source": "tl",
      "cate": "make/cause/instruct",
      "pat": "V NP of NP"
    },
    {
      "task": "List all files/directories under current directory ensuring white space safety",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "Show commits (and their messages) with equivalent commits upstream",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Print lines 2960 to 2966 from the output of \"history\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP from NP of NP"
    },
    {
      "task": "Find recursively all regular files in the current directory whose names contain \".\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Search for 'example' in all regular files under current directory tree and also print the filenames",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Reset the repository to a given commit, discarding committed, staged and uncommitted changes since then",
      "F_verb": "reset",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP to NP"
    },
    {
      "task": "Search the .c files residing in the Lib/ directory tree for lines beginning with \"PyErr\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP for NP with NP"
    },
    {
      "task": "Print appended data in \"file\" and search for \"my_pattern\" without buffering",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP without S_ING"
    },
    {
      "task": "split all files in directory \"/dev/shm/split/\" into pieces per 1000 lines",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP in NP into NP"
    },
    {
      "task": "find and delete all the empty directories in the current folder and all its sub directories too",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Display pinned files",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Get all types of records for a given domain name",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "Upgrade to the latest release",
      "F_verb": "upgrade",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V to NP"
    },
    {
      "task": "Find and initialise the next free zram device to a 2GB virtual drive using LZ4 compression",
      "F_verb": "find",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP to NP using NP"
    },
    {
      "task": "Delimit standard input with \":\" and display as a table",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V as NP"
    },
    {
      "task": "Print the file names along with their sizes under current directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP under NP"
    },
    {
      "task": "Convert the first 16 characters in \"/dev/random\" to a single hexadecimal value",
      "F_verb": "convert",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "remove top-level domain (.com, .org) from URL's in urllist.txt",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP in NP"
    },
    {
      "task": "find all the files in the current folder and display them in the sorted order of their name",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP in NP of NP"
    },
    {
      "task": "Search the system for files and directories owned by group `managers'",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP"
    },
    {
      "task": "Remove all files in and below the current directory whose names begin with \"not\"",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Hold a package at its current version and prevent updates to it",
      "F_verb": "hold",
      "reason": "noCate",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP at NP"
    },
    {
      "task": "Find all directories under current directory and replace all null delimiters with : in the output then remove the last :",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension",
      "F_verb": "end",
      "source": "nl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V with NP"
    },
    {
      "task": "Print 1 byte from \"/dev/urandom\" as a signed decimal value and no address radix",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP as NP"
    },
    {
      "task": "Find all directories whose status were changed $FTIME days ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Read some simple JSON and calculate a value",
      "F_verb": "calculate",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directories under mnt/naspath that were modified in last 24 hours, calculate the total size and redirect the result to /tmp/size.log file",
      "F_verb": "redirect",
      "source": "nl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V NP to NP"
    },
    {
      "task": "ask user confirmation and delete all the files in the directory /mydir which have not been accessed in the last 100*24 hours",
      "F_verb": "ask",
      "source": "nl",
      "cate": "request/ask/allow",
      "pat": "V NP"
    },
    {
      "task": "Switch to the previous namespace",
      "F_verb": "switch",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP"
    },
    {
      "task": "Find files that were modified more than 7 days ago and archive them",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "F_verb": "report",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP that S"
    },
    {
      "task": "View the filesystem stats in debugfs console",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "find all png images in the current folder and convert the to jpg images.",
      "F_verb": "convert",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "search for all regular/normal files in the current folder and display the number of lines in the file",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Switch first and second directories on the stack",
      "F_verb": "switch",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP on NP"
    },
    {
      "task": "Search the current directory tree for directories that can be opened by noone",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP that S"
    },
    {
      "task": "Mount \"cpuset\" filesystem on \"/cpuset/\"",
      "F_verb": "mount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP on NP"
    },
    {
      "task": "Scan file and output strings to `messages.po`",
      "F_verb": "output",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Create a new empty file(s) or change the times for existing file(s) to current time",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP for NP to NP"
    },
    {
      "task": "Apply a function that performs autocompletion to a command",
      "F_verb": "apply",
      "source": "tl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP that S"
    },
    {
      "task": "Print a tree of locally-installed dependencies",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "display all the files in the file system which belong to the user \"wnj\" and which are modified after the file \"ttt\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "find all normal/regular files in current folder which end with \"~\" or which begin and end with \"#\" and and move them to  temp folder",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP to NP"
    },
    {
      "task": "Publish tags that aren't yet in the remote repository",
      "F_verb": "publish",
      "source": "tl",
      "cate": "publish",
      "pat": "V NP that S"
    },
    {
      "task": "Displays details about package 'zsh'.",
      "F_verb": "package",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP"
    },
    {
      "task": "Recurse into subdirectories",
      "F_verb": "recurse",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V into NP"
    },
    {
      "task": "Find files modified within the past 24 hours",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP within NP"
    },
    {
      "task": "Print the contents of \"${SPOOL_FILE}\" file to the console and append to \"${LOG_FILE}\" file",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V to NP"
    },
    {
      "task": "Evaluate and print result, useful to see node's dependencies versions",
      "F_verb": "evaluate",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP S_INF"
    },
    {
      "task": "find files which do not have all permissions to all the users in the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "display the contents of all the files ending with \".fq\" and perform a control check on this raw sequence of data and display the output to the screen",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP to NP"
    },
    {
      "task": "Delete all files named 'sample' (case insensitive) under '/home/user/Series' directory tree with superuser privilege",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP with NP"
    },
    {
      "task": "Find all files/directories under current directory tree that have modified in the last 2 days and contain 'blah' (case insensitive) in their names",
      "F_verb": "contain",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP in NP"
    },
    {
      "task": "Include libraries from a different path",
      "F_verb": "include",
      "reason": "noCate",
      "source": "tl",
      "cate": "import/include",
      "pat": "V NP from NP"
    },
    {
      "task": "find all the python files in the current folder and save the list to the file output.txt",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Send a command to a specific player",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all PHP files in the current directory recursively",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find rows in which columns 3 or 4 match a certain regex pattern",
      "F_verb": "find",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in which S"
    },
    {
      "task": "Search for 'It took' in all $srch1* (case insensitive) files under current directory and run the sed script 'N;s/(.*)\\n(.*)/\\2 \\1/' on the output and redirect the final output to temp1 file",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP under NP"
    },
    {
      "task": "Print last 10 commands in history with the first 7 characters removed",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Write standard input to standard output and to \"foobar.txt\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP to NP"
    },
    {
      "task": "Search the package database for a keyword (includes AUR)",
      "F_verb": "search",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Display the root location of the current repository",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Forward search for a string (press `n`/`N` to go to next/previous match)",
      "F_verb": "forward",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP for NP"
    },
    {
      "task": "Generate certificate and private key for multiple domains",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP for NP"
    },
    {
      "task": "Find all files/directories named file in 2 and 3 levels down the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Open a specific file",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP"
    },
    {
      "task": "Parse output from \"script.sh\" in the current directory which is expected to generate \"variable: value\" formatted data, and add the resulting variables to the current shell's environment.",
      "F_verb": "add",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Show a list of existing remotes, their names and URL",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Describe a pod",
      "F_verb": "describe",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Rename files from the current directory tree to the ASCII standard",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "search for a function in all python files in the current folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP in NP"
    },
    {
      "task": "search for all the directories in the current directory and do not search in sub directories",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP"
    },
    {
      "task": "create symbolic links in current directory to all files located in \"dir\" directory and have filename extension \"jpg\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP to NP in NP"
    },
    {
      "task": "Count all the mp3 files in the music user's home and subdirs.",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP in NP"
    },
    {
      "task": "List all messages in a queue",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all $2 files in $1 path and search for the regex expanded by $3 in those files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all *.c files in /usr/src bigger than 100k",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Calculate the total disk usage for each \".jpg\" file on the system and prepend the system host name to the output",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP for NP on NP to NP"
    },
    {
      "task": "Find every directory under \"0001\" and make new directories replacing \"0001\" with \"0002\" at the beginning of their names.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Display information about a formula (version, installation path, dependencies, etc.)",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Use a given file as swap area",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP as NP"
    },
    {
      "task": "find all the files in the current folder which have been modified in the last 60 minutes, which are atleast 1 level deep and display a long listing of these files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "(GNU specific) Display process information (batch mode, display once) with full command lines.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "find all the text files in current folder and force delete them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all directories under minimum 1 level down the  $GIVEN_DIR directory with null character as the delimiter",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP with NP as NP"
    },
    {
      "task": "Set a new environment variable",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Find all *.ext files/directories under current directory and print their path and parent directory path",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Show current arp table",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find *.java files in the current directory and replace foo with bar in those files",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Find empty regular files in /dir and its subdirectories",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Download a specific file from a competition dataset",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    },
    {
      "task": "Install a package and all of its dependencies",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP of NP"
    },
    {
      "task": "Search for 'Processed Files' in all $srch* (case insensitive) files under current directory",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP under NP"
    },
    {
      "task": "Unpublish an extension",
      "F_verb": "unpublish",
      "reason": "noCate",
      "source": "tl",
      "cate": "clear/clean/empty/eliminate/unpin/cleanup/unpublish",
      "pat": "V NP"
    },
    {
      "task": "Execute command \"tssh MYBOXES N\" where N ranges from 0 to 20",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP where S"
    },
    {
      "task": "Set new line code to CRLF and overwrite (windows type)",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "List all *.gif files found in the current directory tree",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Search for directory foo ignoring case",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Display a tree of processes",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "find files in a directory and exit the command if the syntax is correct or display invalid command if the syntax is wrong.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP if S"
    },
    {
      "task": "Preview multiple SVGs (use arrow keys to navigate)",
      "F_verb": "preview",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Retrieve the fingerprint of a key in MD5 Hex",
      "F_verb": "retrieve",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Render a HTML file to PNG, including an additional user stylesheet",
      "F_verb": "render",
      "source": "tl",
      "cate": "draw/render/paint/redraw/plot",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all *.zip files under current directory and unzip them in the same directory as the files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "List database objects included in the archive",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "search for the word \"redeem reward\" in all the regular/normal files in the current folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP in NP"
    },
    {
      "task": "Dereference symbolic links before copying",
      "F_verb": "dereference",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP before S_ING"
    },
    {
      "task": "Look for *log files in directories at most three levels down the directory tree",
      "F_verb": "look",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP at NP"
    },
    {
      "task": "Extract files matching a pattern",
      "F_verb": "extract",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Change the value of the \"Artist\" tag to John Smith and save to new.jpg",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Change the password",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "display all the files in the current folder along with the modification time and display file names of the last 10 modified files",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Set the default profile",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "set alias \"s\" for command 'it=$($(history | tail -2 | head -1 | cut -d\" \" -f4-))'",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Execute \"awk -F, '$1 ~ /F$/'\" on contents of \"file.gz\"",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP of NP"
    },
    {
      "task": "Write to file instead of terminal",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V to NP instead-of NP"
    },
    {
      "task": "Measure power with the default of 10 samples with an interval of 10 seconds",
      "F_verb": "measure",
      "reason": "noVerb",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP with NP of NP with NP of NP"
    },
    {
      "task": "Find all regular files that reside in the current directory tree and were last modified more than 5 days ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "List contents of a directory on an rclone remote",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP on NP"
    },
    {
      "task": "Compare each file in \"repos1/\" and \"repos2/\", treat absent files as empty, ignore differences in whitespace and tab expansions, and print 3 lines of unified context",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "find all txt files under the current folder except ./misc folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Open the project manager even if the current directory contains a `project.godot` file",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP if S"
    },
    {
      "task": "Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path.",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP on NP"
    },
    {
      "task": "Split \"list.txt\" into files with at most 600 lines each",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP with NP"
    },
    {
      "task": "Get typical usages of a command (hint: this is how you got here!)",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all empty files (zero byte files) in your home directory and its sub-directories.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Delete all .svn files/directories under current directory",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP"
    },
    {
      "task": "Restore all deleted files inside partition N on device X",
      "F_verb": "restore",
      "source": "tl",
      "cate": "restore/recover/resume",
      "pat": "V NP inside NP on NP"
    },
    {
      "task": "Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Remove all .sh files in the current directory tree whose names begin with \"t\"",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Print \"*Checking Partition Permission* Hostname=$(hostname) LastChecked=\" followed by the current date",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP by NP"
    },
    {
      "task": "Download URIs from a file",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    },
    {
      "task": "Find all files/directories in maximum 1 level down the current directory which do not have only read permission for 'other'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "find all files that have been used more than two days since their status was last changed",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Resolve the location of a service definition on disk",
      "F_verb": "resolve",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP of NP on NP"
    },
    {
      "task": "replace the word foo to bar in all the regular/normal files in the current folder (does not update the file)",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP to NP in NP in NP"
    },
    {
      "task": "Search for 'invalidTemplateName' in all regular files in directories/files taken from the glob pattern './online_admin/*/UTF-8/*' and show the matched lines with the filenames",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "display the count of all the normal/ regular files in the current directory",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "find all the files in the current folder which end with \"ext1\" or \"ext2\" or \"ext3\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Pass numbers 1 to 100000 as arguments to \"/bin/true\"",
      "F_verb": "pass",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP as NP to NP"
    },
    {
      "task": "Find all files and directories containing \"disc\" in their names",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find files that match the executable bit for owner or group",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Show the number of regular files in the current directory tree",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Run on multiple machines via SSH",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V on NP via NP"
    },
    {
      "task": "Get the current branch name",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Set the initial title",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Connect with a different workgroup",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V with NP"
    },
    {
      "task": "Synchronize and update only AUR packages",
      "F_verb": "synchronize",
      "source": "tl",
      "cate": "synchronize/sync/synchronise",
      "pat": "V NP"
    },
    {
      "task": "List all IPV4 addresses found in all files under /etc directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP under NP"
    },
    {
      "task": "List all files/directories under $dir_name with size $sizeFile and print them according to the format string  '%M %n %u %g %s %Tb %Td %Tk:%TM %p\\n'",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP S_ING to NP"
    },
    {
      "task": "Create a copy with macOS-style line endings",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Create a sparsified compressed image without snapshots from an unsparsified one",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP without NP from NP"
    },
    {
      "task": "Search everywhere for a file called `httpd.conf' that is newer than /etc/apache-perl/httpd.conf",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP that S"
    },
    {
      "task": "List all nfs mount points on the system",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP on NP"
    },
    {
      "task": "Specify a custom PID file location",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Install a Python version under the ${PYENV_ROOT}/versions directory",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP under NP"
    },
    {
      "task": "make a copy of file file1 named file2",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP of NP"
    },
    {
      "task": "Connect to a worker node with a job running",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP with NP"
    },
    {
      "task": "display the manual page of find",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Force create a hard link named \"non_secret_file.txt\" to \"secret_file.txt\"",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Count total number of lines in all files below current directory.",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP below NP"
    },
    {
      "task": "find all the directories in the current folder and change to these directories and run a command",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the instances of the file \"foo.txt\" in the current folder and move them to another folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "Archive \"/home/path\" to \"path\" on host \"server\" showing progress and statistics and remove files in the destination not found in the source",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "search for all the links in a folder and display all the broken links",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Create a new virtual machine or update an existing one (if available)",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Dump a list of all the available processing filters into a file",
      "F_verb": "dump",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP into NP"
    },
    {
      "task": "Remove obsolete packages from the cache",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Search for .zip files that are larger than 100M found anywhere in the file system and delete those files.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP that S"
    },
    {
      "task": "Display reports every 2 seconds for 5 times",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Print the time to ping \"8.8.8.8\" followed by a time stamp if the ping is greater than 58",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP by NP if S"
    },
    {
      "task": "Show a specific environment variable",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all directories under current directory and set read-write-execute permission for owner and group and no permission for other for those directories",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Print the time to ping \"8.8.8.8\" followed by a time stamp if the ping is greater than 50",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP S_INF by NP if S"
    },
    {
      "task": "find all files in the current folder whose size is less than 50KB",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Compress and display the original filename of every file on the system that is greater than 100000 bytes and ends in \".log\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP on NP with NP in NP"
    },
    {
      "task": "Set read, write and execute permission for all (owner, group, other) for the files/directories in foldername directory tree",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP for NP for NP in NP"
    },
    {
      "task": "Look [B]ack, showing events for the previous 7 days",
      "F_verb": "look",
      "reason": "noCate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Compare two directories excluding files with a name matching a specified pattern",
      "F_verb": "compare",
      "source": "tl",
      "cate": "compare",
      "pat": "V NP with NP"
    },
    {
      "task": "Search for files which have read and write permission for their owner, and group, but which other users can read but not write to.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP which S"
    },
    {
      "task": "Find all the .mp3 files in the music folder recursively and pass them to the ls command",
      "F_verb": "pass",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP"
    },
    {
      "task": "Remove file from bucket",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Display differences between a and b side-by-side",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP between NP"
    },
    {
      "task": "Find all files whose names contain the string 'xpilot' which exist within '/usr/local/games'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "this will recursively grep all the files, compressed or uncompressed.2 If you want to grep only the compressed files then find + zgrep would be a better option.",
      "F_verb": "grep",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Print pathnames of all files in the current directory and below skipping directories named SCCS and files in them",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Remove all files whose names begin with \"no-such-thing\" in the /home/peter directory tree",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP whose S"
    },
    {
      "task": "Run with live config reload enabled (can also be enabled by default in alacritty.yml)",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V with NP"
    },
    {
      "task": "Keep the last 4 ASCII characters (bytes) of a string.",
      "F_verb": "keep",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP"
    },
    {
      "task": "Locate files whose status was changed less than 1 day ago",
      "F_verb": "locate",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Save system information appended with the current date in 'filename' variable",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Search for the regex expanded by the variable $SEARCH in all regular files under $DIR directory tree",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP by NP in NP under NP"
    },
    {
      "task": "Find all *.html files under current directory and for each file replace the first occurrence of STRING and previous lines with the content of common_header file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "find files in current folder using name patterns and sort the display the file names in the sorted order",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP using NP"
    },
    {
      "task": "Use a specific tool (opendiff) to show changes since a given commit",
      "F_verb": "use",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP S_INF"
    },
    {
      "task": "find all the .jpg files in / and copy them to the current folder.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Reformat date \"Sat Aug 09 13:37:14 2014 +1100\" according to format string \"%a %b %d %H:%M:%S %Y %z\"",
      "F_verb": "reformat",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "(Mac OSX specific) Collect process information and display only lines containing pattern specified by variable \"app_name\".",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP by NP"
    },
    {
      "task": "Save a file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP"
    },
    {
      "task": "Copy file 'src' to 'dest', except if 'dest' already exists.",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP if S"
    },
    {
      "task": "Show installed package info",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directories under  current directory and rename them by replacing all blank spaces with _ in their paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all files owned by group `root' in the current directory tree and change their user to `temp'",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Find directories in the current directory recursively that are not \"executable\" by all",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Search the PATH environment variable and display the location of any matching executables",
      "F_verb": "search",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Make directory \"/etc/cron.minute\"",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Upload table specifying field and record delimiters",
      "F_verb": "record",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Remount \"/system\" as read only",
      "F_verb": "remount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP as NP"
    },
    {
      "task": "Find all files named 'text.txt' under current directory tree and display their contents",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Display your browser history",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Upgrade Kubernetes cluster to a specified version",
      "F_verb": "upgrade",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP"
    },
    {
      "task": "Display the first 10 lines of the byte hex dump with no file offset data for \"/bin/ls\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP with NP for NP"
    },
    {
      "task": "find all the files in the file system whcih have been modified in the last 1 day",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "List all regular files under current directory ensuring white space safety",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "Specify a game to use",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF"
    },
    {
      "task": "Find all regular files that were modified more than 60 days ago under '/path-to-directory' directory tree, sort them according to timestamp and print the filenames preceded with the timestamps",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "Assemble the output to a given file",
      "F_verb": "assemble",
      "reason": "noCate",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP to NP"
    },
    {
      "task": "List recent commands from history",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP from NP"
    },
    {
      "task": "Make directories \"~/foo/bar/baz\", \"~/foo/bar/bif\", and \"~/foo/boo/bang\" as needed",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP as NP"
    },
    {
      "task": "Download and specify filename",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Run a bash command on file creation, update or deletion",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP"
    },
    {
      "task": "Reboot immediately without gracefully shutting down",
      "F_verb": "reboot",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V without S_ING"
    },
    {
      "task": "Check syntax on (i.e. lint) a PHP script",
      "F_verb": "check",
      "reason": "noVerb",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP on NP"
    },
    {
      "task": "search for directories in the folder \"test\" which end have 5 digits as their name",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP which S"
    },
    {
      "task": "List currently running docker machines",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Take a snapshot of a container",
      "F_verb": "take",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Trash files and directories",
      "F_verb": "trash",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Revert all runtime permissions to their default",
      "F_verb": "revert",
      "reason": "noCate",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP to NP"
    },
    {
      "task": "Print the contents of all file* files under current directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP under NP"
    },
    {
      "task": "Disable a previously set alarm",
      "F_verb": "disable",
      "source": "tl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP"
    },
    {
      "task": "Find all *.jpg files in */201111/* paths and numerically sort them according to the second field in the file name with a delimiter '_'",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP to NP in NP with NP"
    },
    {
      "task": "Publish the current branch to a remote repository, setting the remote branch name",
      "F_verb": "publish",
      "source": "tl",
      "cate": "publish",
      "pat": "V NP to NP"
    },
    {
      "task": "Execute Mercurial command",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Scan a specific namespace",
      "F_verb": "scan",
      "source": "tl",
      "cate": "visit/rescan/scan/walk/iterate/access/descend/traverse",
      "pat": "V NP"
    },
    {
      "task": "Print the number of packets sent, received, and the percentage lost for each ping request to \"google.com\"",
      "F_verb": "ping",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP to NP"
    },
    {
      "task": "Compress all PNGs and output to directory",
      "F_verb": "compress",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP to NP"
    },
    {
      "task": "Print the list of files from the \"/zu/durchsuchender/Ordner\" directory tree whose names begin with \"beispieldatei\" and which contain string \"Beispielinhalt\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP whose S"
    },
    {
      "task": "Search for all the directories in directories taken from the glob pattern '/path/to/folders/*' and add the extension \".mbox\" to all and create directories named 'Messages' inside them",
      "F_verb": "add",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "create a backup of all the files in the current folder excluding those that are present in the .snapshot sub directory and excluding the swap files (files ending with  ~)",
      "F_verb": "swap",
      "source": "nl",
      "cate": "flip/rotate/permute/swap/transpose/reverse/shuffle",
      "pat": "V NP"
    },
    {
      "task": "Show information about the currently playing song",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Find all regular files under $DIRECTORY_TO_PROCESS matching the case insensitive regex \".*\\.$FILES_TO_PROCES\" where $FILES_TO_PROCES is a variable and not matching the name pattern '$find_excludes' where $find_excludes is another variable, then print the files with null delimiter instead of newline",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP where S"
    },
    {
      "task": "Take a screenshot of a region of the screen (select using the mouse)",
      "F_verb": "take",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "find all the regular/normal files in the current folder which belong to the users with the user id's between 500 and 1000",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "find and delete all the files in the entire file system whose size is greater than 100MB.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Prefix all files and directories in the current directory with \"Unix_\" if the files contain no whitespace or subdirectories",
      "F_verb": "prefix",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP in NP with NP if S"
    },
    {
      "task": "find all the files in the current folder which end with .o or with the name a.out and display them.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Show the metadata associated with an extension",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Merge (concatenate) all the pages of a list of PDF files and save the result as a new PDF",
      "F_verb": "merge",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP of NP"
    },
    {
      "task": "Display the information contained in the ELF header at the start of the file",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP at NP of NP"
    },
    {
      "task": "Delete all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Write the standard output and error of \"ls\" to standard output and \"/tmp/ls.txt\"",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Build a sandboxed Nix expression (on non-nixOS)",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP on NP"
    },
    {
      "task": "Scan a project using configuration file other than `sonar-project.properties`",
      "F_verb": "scan",
      "source": "tl",
      "cate": "visit/rescan/scan/walk/iterate/access/descend/traverse",
      "pat": "V NP using NP"
    },
    {
      "task": "Find all files/directories with '.txt' extension under '/home' directory tree that are exactly 100KB in size",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP under NP that S"
    },
    {
      "task": "Unzip all files matching \"test1/*/*.gz\"",
      "F_verb": "unzip",
      "source": "nl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "display all the files ending with .c in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "split the file \"file\" into pieces per 2 lines",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP"
    },
    {
      "task": "list all active jobs and its IDs",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "search for a word in all the .C files in the current directory",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP in NP"
    },
    {
      "task": "Verify that a bundle file is valid and can be applied to the current repository",
      "F_verb": "verify",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V that S"
    },
    {
      "task": "Execute the 'echo' command on each file from the current directory tree individually",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP from NP"
    },
    {
      "task": "Print login name and full name of all users currently logged in",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Remove \"\\n\" from \"test1\\ntest2\\ntest3\" and search for \"test1.*test3\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Print the empty directories and files under current directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP under NP"
    },
    {
      "task": "Connect to a database, user will be prompted for a password",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP"
    },
    {
      "task": "Search a file for the specified regex pattern",
      "F_verb": "search",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Decompress an lzma file",
      "F_verb": "decompress",
      "reason": "noCate",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "Recursively copy local file/directory \"/copy/from/path\" to remote location \"/copy/to/path\" on host \"server\", connecting as ssh user \"user\" and using identity key file \"/path/to/your/.pemkey\" instead of the default in ~/.ssh/",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP on NP"
    },
    {
      "task": "Generate file from a plugin",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "display all files in the file system which are bigger than 50MB and having size \"filename\" in them",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "search for all the files in the current folder and sort them in the order of their depth and display the file names",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP in NP of NP"
    },
    {
      "task": "Find all files/directories with inode number 16187430 and move them to 'new-test-file-name'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Unset IFS and read a single character of standard input with no echo and save the response in variable \"SELECT\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP in NP"
    },
    {
      "task": "Print fourth column of data from text file text.txt where columns separated by one or more whitespaces.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP where S"
    },
    {
      "task": "Parse and transform a CSS file in-place",
      "F_verb": "parse",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "Open a new window showing the current directory",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP"
    },
    {
      "task": "Remount \"/\" with read and write permission",
      "F_verb": "remount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP with NP"
    },
    {
      "task": "Inspect the headers of a file",
      "F_verb": "inspect",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP"
    },
    {
      "task": "Install a new package",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Find all directories in the current directory tree that are not accessible by all",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Find all *.jpg (case-insensitive) files under maximum 2 levels down the temp/large/* paths and run `mogrify -resize 428x270\">\" -quality 80 -compress JPEG -monitor -strip` with the file paths as arguments",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP down NP"
    },
    {
      "task": "Get the value of a given configuration entry",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Print the names of the subdirectories of /usr/local/svn/repos/ prepending \"/usr/local/backup\" to them",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP of NP to NP"
    },
    {
      "task": "Search the system for the file \u201ctestfile.txt\u201d ignoring the case",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Find all OGG files in the home directory larger than 20 megabytes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Run Windows-like Package Manager",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "find md5sum of an empty string",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP"
    },
    {
      "task": "Search the XML files from directories /res/values-en-rUS and /res/xml for string \"hovering_msg\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP for NP"
    },
    {
      "task": "find all the config(.conf files) files in the folder /home/pat",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Report paging statistics, one per 5 seconds",
      "F_verb": "report",
      "reason": "noVerb",
      "source": "tl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP"
    },
    {
      "task": "Start one or more stopped containers",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Change permissions to 644 for *.html files under /usr/local",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP under NP"
    },
    {
      "task": "Read a line from standard input in an interactive shell into variable \"input\" with prompt \"Do that? [Y,n]\" and suggestion \"Y\"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP in NP into NP with NP"
    },
    {
      "task": "Append \"deb blah ... blah\" to \"/etc/apt/sources.list\" as root",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP S_INF as NP"
    },
    {
      "task": "Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP from NP with NP"
    },
    {
      "task": "Specify connection parameters if they are not detected correctly",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP if S"
    },
    {
      "task": "Find the .groovy files outside the \"./target\" directory path",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP outside NP"
    },
    {
      "task": "Start Sails",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Elaborate a design (where `{{design}}` is the name of a configuration unit, entity unit or architecture unit)",
      "F_verb": "elaborate",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP where S"
    },
    {
      "task": "find all files that names are filename and open in nano text editor",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Capture traffic from or to a host",
      "F_verb": "capture",
      "reason": "noVerb",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Move multiple directories",
      "F_verb": "move",
      "source": "tl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP"
    },
    {
      "task": "Find files and directories in the /tmp/ tree that contain spaces in their names and replace those spaces with underscores",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Exclude results from search",
      "F_verb": "exclude",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "list all files under the current directory, writing the output to the file files_and_folders",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "Create symbolic links in current directory for all files located in \"dir\" directory and have filename extension \"jpg\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP for NP in NP"
    },
    {
      "task": "find all the pdf files in current folder and create a tar ball of all these files",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP of NP"
    },
    {
      "task": "Search for \"ifconfig\" in the output of \"history\" and print 5 lines that precede and follow",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP of NP"
    },
    {
      "task": "Open a new window and connect to a group of servers predefined in `~/.mssh_clusters`",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP of NP in NP"
    },
    {
      "task": "Find all the files in entire file system  which are modified more than 50 days back and less than 100 days and show a few lines of output from the beginning",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Add the execute and read permission for all and the write permission for the user to the dir_data directory and all of its sub-directories.",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP for NP to NP"
    },
    {
      "task": "Compress all files in directory \"$PATH_TO_LOGS\" that were last modified more than \"$SOME_NUMBER_OF_DAYS\" days ago",
      "F_verb": "compress",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Make directory \"tata\"",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Find all directories under maximum 1 level down the /parent  directory and set their permission to 700 recursively",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP down NP"
    },
    {
      "task": "Build Caddy with a specific module",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Install a new package",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Quit without saving",
      "F_verb": "quit",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V without S_ING"
    },
    {
      "task": "Generate Sails API",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V"
    },
    {
      "task": "Search for files/directories which are writable by either their owner or their group",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V"
    },
    {
      "task": "Compare directories, only showing the names of files that differ",
      "F_verb": "compare",
      "source": "tl",
      "cate": "compare",
      "pat": "V NP S_ING of NP that S"
    },
    {
      "task": "find md5sum of a string \"password\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP"
    },
    {
      "task": "Check for breaking changes and output to markdown",
      "F_verb": "output",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V to NP"
    },
    {
      "task": "Copy all files and directories in \"/home/\" to \"/newhome\" preserving directory hierarchy and modification time",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Display suggestions for a given file",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Search for files whose size is between 100 kilobytes and 500 kilobytes",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP whose S"
    },
    {
      "task": "Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "List the human-readable sizes of a directory and any subdirectories, up to N levels deep",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Execute the commands and email the result using a local mailing program such as sendmail",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP`"
    },
    {
      "task": "Transpile a specified input file and output to `stdout`",
      "F_verb": "transpile",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Use a custom configuration file and write the result to stdout",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Recursively copy directory or file /something on host \"myServer\" to current directory on local host, connecting as ssh user matching username on local host.",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP on NP to NP on NP"
    },
    {
      "task": "Run a specific directory of tests",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP"
    },
    {
      "task": "Finds binaries names in a list of running processes and prints containing folder of each binary.",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V of NP"
    },
    {
      "task": "Find symbolic links under /etc/",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Print the list of .txt files under and below the current directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP under NP"
    },
    {
      "task": "Dump \"/dev/ttySomething\" in both hex and text",
      "F_verb": "dump",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V S_ING in NP"
    },
    {
      "task": "Find all strings matching pattern \"^${KEY}${DELIMITER}\" in $FILE file and print rest of string after $DELIMITER",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Specify a different upstream and topic branch",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Use the default diff tool to show staged changes",
      "F_verb": "use",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP S_INF"
    },
    {
      "task": "Search the /tmp directory tree for files owned by user `ian'",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP by NP"
    },
    {
      "task": "Find all files and directories that do not match the pattern given as the $controlchars variable",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Transfer a directory and all its children from a remote to local",
      "F_verb": "transfer",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Find all the files which are changed in last 1 hour in entire file system and show a few lines of output from the beginning",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Scan a domain, using a dictionary of subdomains and hostnames for bruteforcing",
      "F_verb": "scan",
      "source": "tl",
      "cate": "visit/rescan/scan/walk/iterate/access/descend/traverse",
      "pat": "V NP using NP of NP for S_ING"
    },
    {
      "task": "look for the largest 200 files over 1,000,000 bytes in the filesystem mounted at \"/usr/pcapps\"",
      "F_verb": "look",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP over NP in NP at NP"
    },
    {
      "task": "Reverse an entire file and print to `stdout`",
      "F_verb": "reverse",
      "source": "tl",
      "cate": "flip/rotate/permute/swap/transpose/reverse/shuffle",
      "pat": "V NP"
    },
    {
      "task": "Parse using a specific encoding",
      "F_verb": "parse",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V using NP"
    },
    {
      "task": "Edit the `.envrc` file in the default text editor and reload the environment on exit",
      "F_verb": "edit",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the files starting with \"config\" in the folder Symfony ( case insensitive search)",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Delete versions older than 1 year from a backup stored on a WebDAV share",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP on NP"
    },
    {
      "task": "find all the files in the file system which belong to the groep \"users\" and with the name \"dateiname\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Show pipeline configuration",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Extract tables from page 1 of a PDF, guessing which portion of the page to examine",
      "F_verb": "extract",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP of NP"
    },
    {
      "task": "Gets domain name from dig reverse lookup.",
      "F_verb": "reverse",
      "source": "nl",
      "cate": "flip/rotate/permute/swap/transpose/reverse/shuffle",
      "pat": "V NP"
    },
    {
      "task": "Search for first match of the regex 're' in all *.coffee files under current directory",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP of NP in NP under NP"
    },
    {
      "task": "Set variable MYPROGRAMNAME_KERNEL_VERSION to current kernel release name, making this variable visible by subprocesses of current shell.",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all files/directories whose names start with 'readme' (case insensitive) under '/usr/share/doc' directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S under NP"
    },
    {
      "task": "create directory aaa",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Delete all 'restore.php' files in /var/www and 3 levels below",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Login to your LastPass account, by entering your master password when prompted",
      "F_verb": "login",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V to NP by S_ING when S"
    },
    {
      "task": "Calculate the md5sum of the executable file of command 'c++'",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Write the lines appended to \"xxxx\" as it appears to the console and append to \"yyyy\" in the background",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP as S"
    },
    {
      "task": "Recursively finds all files older than 7 minutes under the current directory, saves list of found files, and compresses them, executing at most 10 compress process at a time.",
      "F_verb": "compress",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP at NP"
    }
  ],
  "5": [
    {
      "task": "Do not mark variables and function which are modified or created for export to the environment of subsequent commands",
      "F_verb": "mark",
      "source": "nl",
      "cate": "mark",
      "pat": "V NP which S"
    },
    {
      "task": "Print process tree, adjusting output width with a screen size.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "List snapshots",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Find all .rpm files and change their permissions to 755",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Edit the git configuration for the current repository in the default editor",
      "F_verb": "edit",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP for NP in NP"
    },
    {
      "task": "Find all *.txt files/directories under current directory and execute the python script hello.py with all their paths as arguments",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP as NP"
    },
    {
      "task": "find the type of all the regular/normal files in the current folder (plus takes bulk of files as input to the file command)",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Open a file or directory",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP"
    },
    {
      "task": "find all the files in the current folder and replace old string with new string",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V in NP for NP"
    },
    {
      "task": "Convert all PNG images in the directory to JPEG",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "View the queue with expected start times",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Display a text input box",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find files named 'core' in or below the directory /tmp and delete them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Print the first 2 lines of tree's help message by redirecting it from standard error to standard output",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP by S_ING from NP to NP"
    },
    {
      "task": "Add a URL for a feed to follow",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP for NP S_INF"
    },
    {
      "task": "Split \"$ORIGINAL_FILE\" into files of at most \"$MAX_LINES_PER_CHUNK\" lines each with a prefix \"$CHUNK_FILE_PREFIX\"",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP of NP with NP"
    },
    {
      "task": "find all the html files in current folder and replace old string with new string",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Mount a read only ntfs filesystem",
      "F_verb": "mount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V"
    },
    {
      "task": "Wrap each line in \"file.txt\" to fit in 76 characters breaking only at spaces and indent the output",
      "F_verb": "wrap",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP in NP S_INF at NP"
    },
    {
      "task": "Display information for all CPUs",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Show private members",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all first occurrences of directories named '.texturedata' under '/path/to/look/in' directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP under NP"
    },
    {
      "task": "Specify a file index from the torrent to download",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP from NP S_INF"
    },
    {
      "task": "find all the text files in the folder /tmp/1 and display only those files which have spaces in their names",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP which S"
    },
    {
      "task": "Update to the specified revision",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V to NP"
    },
    {
      "task": "find all the symbolic links in the current folder and check the file type and display the output of those files which are broken",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Display the last 20 commands",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Compress a file, while specifing the compression level. 0 = Worst, 9 = Best (Default level is 3)",
      "F_verb": "compress",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP while S"
    },
    {
      "task": "Copy files to destination, setting their group ownership",
      "F_verb": "copy",
      "reason": "noCate",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "display all the files in the folder a",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Upload a profiler file to the Blackfire web service",
      "F_verb": "upload",
      "reason": "noCate",
      "source": "tl",
      "cate": "commit/submit/upload",
      "pat": "V NP to NP"
    },
    {
      "task": "List installed roles",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Remove trailing white spaces from all files under current directory ignoring *.jpg, *.png and *.ttf files",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP under NP"
    },
    {
      "task": "Create archive \"backup1.tar\" of all subdirectories of the current directory",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Find all .zip files in the current directory tree and unzip them deleting the archives on success",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "display all the C, CPP, Header files in the kat folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Assign permissions 755 to directories in the current directory tree",
      "F_verb": "assign",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y/N]} \"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP into NP"
    },
    {
      "task": "List all *.txt files/directories under /etc",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "find files in /tmp directory that named are core and deletes them, single or double quotes, spaces or newlines are correctly handled",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Print the list of all regular files on the system using \"echo\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP on NP using NP"
    },
    {
      "task": "Compress a file named '{}' in the current directory",
      "F_verb": "compress",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP in NP"
    },
    {
      "task": "Find broken symlinks in current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Go to directory named \"~\" (not home directory)",
      "F_verb": "go",
      "source": "nl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V to NP"
    },
    {
      "task": "Find all test2.h files under current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Set one or more semicolon-separated targets to build",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V"
    },
    {
      "task": "Print name of the block device containing the file system containing $path.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Set a timeout",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Download the best quality audio and video and merge them",
      "F_verb": "merge",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP"
    },
    {
      "task": "find all symbolic links in the current folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Truncate the ElasticSearch index for a specific package",
      "F_verb": "truncate",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP for NP"
    },
    {
      "task": "Find all files under current directory, calculate their md5sum and print each of the hash and file name to filename-hash.md5 files",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QTDIR'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Write \"some output\" to standard output and to \"/some/path/some_file\" as user \"some_user\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Make directories to \"/tmp/boostinst\" as needed and print a message for each created directory",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP to NP"
    },
    {
      "task": "find all the directories in the entire file system whose size is greater than 50KB",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Add a target file with a custom `.dvc` filename",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP with NP"
    },
    {
      "task": "Set up RBTool to talk to a repository",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V up NP S_INF to NP"
    },
    {
      "task": "List existing streams for the specified group",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP for NP"
    },
    {
      "task": "Read a file of SHA512 sums and verify all files have matching checksums",
      "F_verb": "read",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP of NP"
    },
    {
      "task": "List all your files including everything in sub-directories",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Install a package, or update it to the latest available version",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Set the local PHP version, which overrides the global version",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP which S"
    },
    {
      "task": "View the current and permanent MAC addresses of a interface",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Format printing byte counts",
      "F_verb": "format",
      "reason": "noVerb",
      "source": "tl",
      "cate": "format",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directories starting with 'app-' and ending with '.log' in their names and have been modified in the last 5 minutes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Force create a symbolic link in \"/usr/bin/\" for each file matching \"$javaUsrLib/jdk1*/bin/*\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP for NP"
    },
    {
      "task": "Create a password that doesn't appear in a dictionary (the dictionary file has to be provided)",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP that S"
    },
    {
      "task": "Stash current changes, except new (untracked) files",
      "F_verb": "stash",
      "reason": "noVerb",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP"
    },
    {
      "task": "Print the path composed of the current working directory and the directory containing \"$0\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Change the permission to 0644 for all files under current directory",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP under NP"
    },
    {
      "task": "Find all files in the /usr directory tree that are owned by group `staff'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Show information about the current connection",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "You can also edit animations by replacing, deleting, or inserting frames",
      "F_verb": "edit",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP by S_ING"
    },
    {
      "task": "Find all regular .mp3 files larger than 10M and delete them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Find directories in /home/vmail that match pathname \"*/*/Maildir/.LearnAsHam/new\", and move them to folder .Inbox/new",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "extract \"filename.tar.xz\" with verbose output",
      "F_verb": "extract",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP with NP"
    },
    {
      "task": "Stop and remove all containers, networks, images, and volumes",
      "F_verb": "stop",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directories under current directory and print only 2nd field from output delimited by '/'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "find the file with inode $inum under the current directory and delete it",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Display full usage information and available hashing/compression algorithms",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP as NP using NP"
    },
    {
      "task": "Consume messages as a Kafka consumer group",
      "F_verb": "consume",
      "reason": "noCate",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP as NP"
    },
    {
      "task": "Add a directory and its files recursively from local to the filesystem and print the relative hash",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Make directories \"project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}\" as needed and do not cause an error if it exists",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP as NP"
    },
    {
      "task": "change owner and group of the file it to user and group root",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "run somecommand with one argument for each file recursively in /path that matches 'pattern'",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP for NP in NP that S"
    },
    {
      "task": "Read a line from standard input with a timeout of 0.1 seconds and prompt \"This will be sent to stderr\"",
      "F_verb": "prompt",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP"
    },
    {
      "task": "Display a long listing of all 0777 permission directories under current directory tree",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP under NP"
    },
    {
      "task": "Displays the count of of each unique line read from standard input",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V of NP from NP"
    },
    {
      "task": "Automatically recompile on changes to project files",
      "F_verb": "recompile",
      "reason": "noCate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V on NP to NP"
    },
    {
      "task": "Rename a file on the remote server",
      "F_verb": "rename",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP on NP"
    },
    {
      "task": "Find all SGID files in entire file system",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Print a list of all files/directories under current directory in myfile.sh file",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP under NP in NP"
    },
    {
      "task": "search for all the mp3 files in the current folder and change the character encoding of them to <source-encoding>",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Generate a hexdump from a binary file and save it as a text file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP as NP"
    },
    {
      "task": "Consume messages starting with the newest offset",
      "F_verb": "consume",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP with NP"
    },
    {
      "task": "Store each of the next lines you enter as values of an array",
      "F_verb": "store",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP as NP of NP"
    },
    {
      "task": "Print an ASCII dragon saying \"Hello!\"",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "find files in root directory that names are game",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Mount \"tmpfs\" filesystem to \"/path/to/dir\"",
      "F_verb": "mount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP to NP"
    },
    {
      "task": "Find the first file/directory under current directory and quit",
      "F_verb": "quit",
      "source": "nl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V"
    },
    {
      "task": "Find files in the current directory and its sub-directories that begin with 'f'.",
      "F_verb": "begin",
      "source": "nl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V with NP"
    },
    {
      "task": "Replay a terminal recording from a local file",
      "F_verb": "replay",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP from NP"
    },
    {
      "task": "Create kustomization file with resources and namespace",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Extract data from HTML table in \"mycode.html\"",
      "F_verb": "extract",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP in NP"
    },
    {
      "task": "Find all directories under /home/mywebsite/public_html/sites/all/modules and set their permission to 750",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "change the permissions of all the directories in the folder root_dir to 555",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "Find directories with permissions 777 and change them to 755 recursively",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all files/directories that were modified after February 1st under '/usr' directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Search for \"foo\" in every file in the current directory and number the output",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP in NP"
    },
    {
      "task": "Display output and sort by column (defaults to by files)",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Run a security audit of the system",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP"
    },
    {
      "task": "Write the bug report to a file instead of sending it by e-mail",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP instead-of S_ING by NP"
    },
    {
      "task": "Request changing the passphrase of key file \"private.key\"",
      "F_verb": "request",
      "source": "nl",
      "cate": "request/ask/allow",
      "pat": "V S_ING of NP"
    },
    {
      "task": "Find all build* directories under /var/www/html/ and print all but first 5 appending with the string 'rf '",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "list all aliases that name contents the string \"xlogs\"",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP that S"
    },
    {
      "task": "search in all the regular/normal files of the current folder for the word \"word\" and display the matched file name",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all files under current directory matching the posix-egrep type regex '^.*/[a-z][^/]*$' in their names with locale set to default C locale",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP in NP with NP to NP"
    },
    {
      "task": "Unset RBENV_VERSION variable in global environment.",
      "F_verb": "unset",
      "source": "nl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all directories with permissions 777 under and below /var/www/html, and change their permissions to 755",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Clear the environment and run a program",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "(Linux specific) Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Prints number of days in a current month.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Search for the string 'git' in all the files under current directory tree excluding paths and names that contain the string 'git'",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP under NP that S"
    },
    {
      "task": "Find all files under current directory excluding hidden files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Write firmware to device starting from 0x8000000",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP from NP"
    },
    {
      "task": "Set the title of an MP3 file",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP"
    },
    {
      "task": "Write the standard output and error of \"someCommand\" to the console and append it to \"someFile\"",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP S_INF"
    },
    {
      "task": "Search for a pattern [R]ecursively in the current directory, showing matching line [n]umbers, [I]gnoring non-text files",
      "F_verb": "search",
      "reason": "noCate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Set 644 permission to all regular files under /path",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP under NP"
    },
    {
      "task": "delete all normal/regular files in the current folder which are empty",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Save long listing of all running processes in the 'log' file, and save number of process strings that contain 'cntps' in the 'cnt' variable.",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "find all files that do not have execute permission to all",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Unzip \"file.gz\" to stdout",
      "F_verb": "unzip",
      "source": "nl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP to NP"
    },
    {
      "task": "Silently read a single character from standard input into variable \"key\" without backslash escapes and using the prompt $'Press any key to continue...\\n'",
      "F_verb": "prompt",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP to NP"
    },
    {
      "task": "Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP under NP to NP"
    },
    {
      "task": "Search the current directory and its sub-directories for any file that has \"bsd\" somewhere in its name.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP that S"
    },
    {
      "task": "Start an interactive rebase, which allows the commits to be reordered, omitted, combined or modified",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP which S"
    },
    {
      "task": "Connect to a host, specifying folders for scripts and executables",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP for NP"
    },
    {
      "task": "Pass a config file (with eg. the entry script and the output filename) and show compilation progress",
      "F_verb": "pass",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP with NP"
    },
    {
      "task": "Show the list of user wnj's files that are newer than file `ttt'",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP that S"
    },
    {
      "task": "Remove the passphrase from user's ssh key without prompting.",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP without S_ING"
    },
    {
      "task": "Search directories /res/values-en-rUS and /res/xml for XML files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Run a command on a remote server",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP"
    },
    {
      "task": "Remove all files whose names start with spam-",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP whose S"
    },
    {
      "task": "display all the regular/normal files in the current folder which have been modified in the last 24 hours",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Write one record to a Kinesis stream",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Search the current directory tree for .VER files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Exit the shell with the specified exit code",
      "F_verb": "exit",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Push Git changes",
      "F_verb": "push",
      "reason": "noVerb",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "List all currently installed packages (includes AUR packages)",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP which S"
    },
    {
      "task": "Make directories \"mnt\" and \"point\"",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Print string \"123\" once with '1' replaced by 'a' and second time replaced by 'b'",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP by NP"
    },
    {
      "task": "Write output of \"command\" to standard output and append to \"/path/to/logfile\"",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V to NP"
    },
    {
      "task": "SSH into SERVER, execute \"command,\" and start up a login shell when it completes",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Print which files differ in \"/tmp/dir1\" and \"/tmp/dir2\" recursively",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V which S"
    },
    {
      "task": "Removes all empty folders under '/path/to/the/folder' path.",
      "F_verb": "empty",
      "source": "nl",
      "cate": "clear/clean/empty/eliminate/unpin/cleanup/unpublish",
      "pat": "V NP under NP"
    },
    {
      "task": "Display list of fields available",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "find directories under the $LOGDIR directory where there have been no modifications for 5 days and deletes them.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP where S"
    },
    {
      "task": "Print the list of regular files in the current directory and all subdirectories",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Deploy static assets",
      "F_verb": "deploy",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Delete all lines in \"file\" that contain \"pattern\", using \"temp\" as temporary working file (ie. shouldn't exist).",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP that S using NP as NP"
    },
    {
      "task": "Find all lines matching \"$USER\" in \"file\" and number the output",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Move all files matching patterns \"*.old\", \".old\", \".*.old\" from the current directory to directory \"../old/\"",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "search for a word in all the php files in the current folder and display the matching lines.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Perform TLS cipher scan against a host to determine supported ciphers and SSL/TLS protocols",
      "F_verb": "perform",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP against NP S_INF"
    },
    {
      "task": "Set environment variables using assignments are listed in '.env' file and run 'rails' command with defined environment",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP"
    },
    {
      "task": "Set the value of \"to_sort\" to \"$1\" in a subshell which no longer exists after the pipeline completes",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP to NP in NP which S"
    },
    {
      "task": "display all the files in the current folder which have not been modified in the last 7 days and which are not in the list \"file.lst\" and save the output to a file",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Start a login shell as a specific user",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP as NP"
    },
    {
      "task": "Add user to htpasswd file or update existing user",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Replace any sequence of spaces in file 'text.txt' with single space and print 4th space separated field",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP of NP In NP with NP"
    },
    {
      "task": "Turn on Redshift with 5700K temperature during day and 3600K at night",
      "F_verb": "turn",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V on NP with NP during NP at NP"
    },
    {
      "task": "display all the directories in specific path ( saved in $x ) excluding those that are present in a path and save the ouput to a file",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "find Texinfo source files in /usr/local/doc",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Create a torrent file from a specific file or directory",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "Compare directories recursively (shows names for differing files/directories as well as changes made to files)",
      "F_verb": "compare",
      "source": "tl",
      "cate": "compare",
      "pat": "V NP"
    },
    {
      "task": "Unlock higher compression levels (up to 22) using more memory (both for compression and decompression)",
      "F_verb": "unlock",
      "reason": "noCate",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP to NP using NP for NP"
    },
    {
      "task": "Print the host name",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Change permissions of all files ending in \".php\" under the current directory to 755 and print a count of modified files",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP under NP to NP"
    },
    {
      "task": "Send 5 pings to broadcast address \"10.10.0.255\" and print the unique IPs who responded",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP who S"
    },
    {
      "task": "Set the volume of sink 1 to 75%",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Execute a brute force against a list of SMB servers using a username and a pwdump file",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP against NP of NP using NP"
    },
    {
      "task": "Archive all files beginning with .env or .bash in current directory to user's home directory on host \"app1\", preserving timestamps and skipping files that are newer on \"app1\"",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP in NP to NP on NP"
    },
    {
      "task": "Find users whose names begin with \"ab\" and ends with \"1\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Remove the current directory from `z`'s database",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Test plugin data collection functionality and then exit",
      "F_verb": "test",
      "reason": "noVerb",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Remove all files except the ones listed in \"MANIFEST\"",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Send an introductory email message for the patch series",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP for NP"
    },
    {
      "task": "List files greater than 1024KB under /path/to/directory and print the time and size on stdout",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP on NP"
    },
    {
      "task": "change the owner of all the files in the file system which belong to the user with the uid 999",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP which S"
    },
    {
      "task": "Assign a name when starting a screen session",
      "F_verb": "assign",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP when S"
    },
    {
      "task": "Check whether the adb server process is running and start it",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "check whether S"
    },
    {
      "task": "Find all *.py files under and below the current directory and search them for \"xrange\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Find all *.txt files/directories under current directory and execute the python script hello.py for each of them with the file path as an argument to the script",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Give rwx permissions to the user and group of the directory named \"files\" leaving others without any privileges",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V of NP without NP"
    },
    {
      "task": "Search for the files that are owned by user rooter or by user www-data",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP that S"
    },
    {
      "task": "Lock screen to a PNG background",
      "F_verb": "lock",
      "reason": "noVerb",
      "source": "tl",
      "cate": "lock/seal/relock",
      "pat": "V NP to NP"
    },
    {
      "task": "Remind to leave in 4 hours and 4 minutes",
      "F_verb": "remind",
      "reason": "noCate",
      "source": "tl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V S_INF in NP"
    },
    {
      "task": "Show help for specific EC2 subcommand",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Delete all non digits from index \"$i\" in bash array \"depsAlastmodified\" and print the hex dump as characters",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP in NP"
    },
    {
      "task": "Send SIGHUP (hangup) signal to all parents of zombie processes.",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP of NP"
    },
    {
      "task": "Read a single character from standard input into variable \"key\" without backslash escapes and using the prompt \"Press any key to continue...\"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP into NP without NP"
    },
    {
      "task": "Find files/directories in entire file system with at least 644 permission",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Create master SSH control socket \"my-ctrl-socket\" in the background with no terminal or command execution with connection forwarding from localhost port 50000 to localhost port 3306 via \"jm@sampledomani.com\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "display all the directories in the folder /path/to/dest except tmp directory",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Open a space-separated list of images in thumbnail mode",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Encode key pair payload to JWT",
      "F_verb": "encode",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP to NP"
    },
    {
      "task": "display all regular/normal files in the current folder which are accessed in the last 7*24 hours",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Build and switch to the new configuration, making it the boot default and naming the boot entry",
      "F_verb": "switch",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP"
    },
    {
      "task": "Split \"abc.txt\" into files with at most 1500000000 bytes each and use prefix \"abc\"",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP with NP"
    },
    {
      "task": "display all the files in the folders mydir1, mydir2 which are bigger than 2KB and have not been accessed in the last 30*24 hours",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Remove all files from the current directory tree whose names end in \"~\"",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP whose S"
    },
    {
      "task": "Show all running processes with name matching \"postgres\"",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Find all directories under current directory and run ./script.sh for each of them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all *fstab* files under and below /etc",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Send SIGTERM signal to first process sent to background by the current shell.",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP by NP"
    },
    {
      "task": "Display the named characters in \"line1\\r\\nline2\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the text files in the folder /tmp/1 and display only those files which have spaces in their names",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files under 'dir' directory with white space safety in their paths and print their md5 sums into file.txt",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP into NP"
    },
    {
      "task": "Wrap each line in \"yourfile\" to fit in 79 characters and right pad any lines shorter with spaces",
      "F_verb": "wrap",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP in NP S_INF in NP"
    },
    {
      "task": "Run one-off commands with the process's environment",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP"
    },
    {
      "task": "Find all files under /home/feeds/data without descending into *def/incoming* and *456/incoming* paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP without S_ING into NP"
    },
    {
      "task": "Move all lines starting with \"Ca\" to the beginning of the file",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP with NP to NP of NP"
    },
    {
      "task": "display all the regular/normal files in the current folder which have been modified after a specific time stamp and do not search in the sub directories",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Add a torrent file or magnet link to Transmission and download to a specified directory",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP or NP to NP"
    },
    {
      "task": "Find all files named 'text.txt' under current directory tree and display their contents",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Search the current directory tree for files AAA and BBB",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "display all the normal/regular files in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique parent directory paths",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Find all files called wp-config.php in the /var/www directory and below",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files/directories matching the regex .*sql.*",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Open all .c files in the current directory tree in the vim editor",
      "F_verb": "open",
      "source": "nl",
      "cate": "open",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Run tests contained at a specific location",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP at NP"
    },
    {
      "task": "search for MP3 files in the current folder and subfolders exclude dir1 AND dir2",
      "F_verb": "exclude",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Merge a branch into your current branch",
      "F_verb": "merge",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP into NP"
    },
    {
      "task": "Print numbers 1 through 10 separated by \":\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP through NP by NP"
    },
    {
      "task": "Forcefully delete files that are not tracked by git",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP that S"
    },
    {
      "task": "Find *.html files in the current directory tree that were modified 7 days ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Garbage collect from the cache, including the default cloud remote storage (if set)",
      "F_verb": "collect",
      "source": "tl",
      "cate": "collect/recycle/sample",
      "pat": "V from NP"
    },
    {
      "task": "Find all files under current directory that match the regex ^.*666$ in their names",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Open the current repository in a browser",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP in NP"
    },
    {
      "task": "Same as above, but write the zip archive to file",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP S_INF"
    },
    {
      "task": "Get a running process' CPU affinity by PID",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP by NP"
    },
    {
      "task": "Run commands from a file",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP"
    },
    {
      "task": "Read line from file descriptor 4 and store received input in 'line' variable",
      "F_verb": "store",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP in NP"
    },
    {
      "task": "create a tar ball of all pdf files in current folder",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Accept everything prompted by the `apt-get` command",
      "F_verb": "accept",
      "source": "tl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP by NP"
    },
    {
      "task": "Select a specific GPU (the bus number is the first number in the output of `lspci`)",
      "F_verb": "select",
      "source": "tl",
      "cate": "choose/select",
      "pat": "V NP in NP of NP"
    },
    {
      "task": "Look inside a zipped file and determine the file type(s) inside",
      "F_verb": "look",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V inside NP"
    },
    {
      "task": "Display only information about offline CPUs in a table",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP in NP"
    },
    {
      "task": "Find all empty files in the current directory and delete them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "find all the normal/regular files in /etc/sysconfig which have been accesses in the last 30 minutes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Start a virtual machine",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Print line, word and byte count for each file recursively and also show the total counts",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Display calendar for the current month",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Print canonical filename of \"/path/here/..\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Delete files in the DIR directory tree whose names begin with \"2015\" and contain \"album\" or \"picture\"",
      "F_verb": "contain",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Find and replace xxx with yyy in whole directory tree",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Force create a symbolic link named \"$*\" to the canonical absolute path of \"$1\"",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP of NP"
    },
    {
      "task": "Request MX record of 'example.com' domain, and filter out all comment strings",
      "F_verb": "request",
      "source": "nl",
      "cate": "request/ask/allow",
      "pat": "V NP of NP"
    },
    {
      "task": "Print unique lines in sorted file \"A\" when compared to sorted files \"B\", \"C\", and \"D\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP when S"
    },
    {
      "task": "Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 360 minutes ago",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP that S"
    },
    {
      "task": "change permissions of all the script files in a directory",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Start running a file forever (as a daemon)",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V S_ING as NP"
    },
    {
      "task": "Make directory \"dir1\"",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Find all files changed on the 29th of September, 2008, starting from the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP of NP from NP"
    },
    {
      "task": "change the permission of all the files in the current directory to 664 and change the permission of all the directories  in the current folder to 775.",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "Recursively finds all files like \"*.log\" and \"*.trc\" in a current folder, modified in a last day, sorts list by modification time and pipes output to pager tool 'less'.",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V to NP"
    },
    {
      "task": "Open a web page to start a bug report",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP S_INF"
    },
    {
      "task": "Use awk command 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 \";\" array[$1,$2] }' on compressed files \"input1.vcf.gz\" and \"input2.vcf.gz\"",
      "F_verb": "use",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP on NP"
    },
    {
      "task": "find the regular js files which path does not contains '*/test/*'  and name does not contains '*-min-*' or '*console*'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "Restore an archive into an existing database",
      "F_verb": "restore",
      "source": "tl",
      "cate": "restore/recover/resume",
      "pat": "V NP into NP"
    },
    {
      "task": "find all the files in current folder ending with \"ini\" and display all files which contain several patterns",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP which S"
    },
    {
      "task": "Display the logs of one or more containers and follow log output",
      "F_verb": "follow",
      "source": "tl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V NP"
    },
    {
      "task": "Count the number of open files for PID \"$PYTHONPID\" every 2 seconds",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "Check the status of the Postfix daemon",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP"
    },
    {
      "task": "Go into the first directory whose name contains 1670",
      "F_verb": "go",
      "source": "nl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V into NP whose S"
    },
    {
      "task": "Generate a PostScript file from a text file",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "Lookup the mail server(s) associated with a given domain name (MX record)",
      "F_verb": "lookup",
      "reason": "noCate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Run a .NET assembly in debug mode",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP"
    },
    {
      "task": "Filter the contents of 'file' through sed commands written in 'commandfile', displaying the result.",
      "F_verb": "filter",
      "source": "nl",
      "cate": "filter",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Change the group of \"myfile\" to \"friends\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Populate the tables for a specific package",
      "F_verb": "populate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP for NP"
    },
    {
      "task": "List available archive types",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "switch user to jenkins",
      "F_verb": "switch",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Search the /Path directory tree for files matching pattern \"file_name*\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Save first IP address of domain 'google.com' in 'address' variable",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Clone a repository to a specified directory",
      "F_verb": "clone",
      "reason": "noCate",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Archive \"/media/10001/music/\" on host \"server\" to local directory \"/media/incoming/music/\" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP on NP to NP"
    },
    {
      "task": "Stop all torrents",
      "F_verb": "stop",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP"
    },
    {
      "task": "See what files are executable by the file's owner and group",
      "F_verb": "see",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP by NP"
    },
    {
      "task": "Search the current directory recursively for regular files last accessed 2 minutes ago",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Recursively copy newer files in \"sourcedir/\" to \"user@dest.com:/dest/dir/\" via ssh",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP in NP to NP via NP"
    },
    {
      "task": "Silently read a line into variable \"passwd\" with prompt \"Enter your password: \"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP into NP with NP"
    },
    {
      "task": "Display all lines except those that contain the given regular expression",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP those S"
    },
    {
      "task": "Display all lines in 'file' containing 'something', pausing for user input after each page.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP for NP after NP"
    },
    {
      "task": "Let the train fly",
      "F_verb": "train",
      "reason": "noCate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Report all statistics",
      "F_verb": "report",
      "reason": "noVerb",
      "source": "tl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP"
    },
    {
      "task": "Compile a C file generated by Lex",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP by NP"
    },
    {
      "task": "Open the saved bookmark in a browser",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP in NP"
    },
    {
      "task": "find all files in the folder \"myfiles\" which have not been accessed in the last 30*24 hours",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Delete all files in the /myDir directory tree that were last modfied more than 7 days ago",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Copy the directory structure in \"src/\" to \"dest/\" with empty files",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP in NP to NP with NP"
    },
    {
      "task": "Read a single character from standard input into variable \"REPLY\" ignoring backslash escapes and using the prompt \"${1:-Continue?} [y/n]: \"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP into NP"
    },
    {
      "task": "Delete existing replace refs for the given objects",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP for NP"
    },
    {
      "task": "Execute an RPC command",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Store the output to a given file along with displaying in the console",
      "F_verb": "store",
      "reason": "noCate",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP with S_ING in NP"
    },
    {
      "task": "Move candidate packages to a directory instead of deleting them",
      "F_verb": "move",
      "reason": "noCate",
      "source": "tl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP to NP instead-of S_ING"
    },
    {
      "task": "Find files with group write permission and remove the permission",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Specify a file to include as the message body",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF as NP"
    },
    {
      "task": "Displays process tree of a process with id 'PID', showing parent process and processes id.",
      "F_verb": "process",
      "source": "nl",
      "cate": "handle/process/preprocess",
      "pat": "V NP"
    },
    {
      "task": "Copy all *.txt files from the current directory tree to /destination",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Find all files under /somefolder matching the extended regex '\\./(.*\\.error.*|second.*log|.*FFPC\\.log)$' in their paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP in NP"
    },
    {
      "task": "Run a command when a file changes",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP when S"
    },
    {
      "task": "Remove camera shakes after creating stabilisation file, transform video using xvid",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP after S_ING using NP"
    },
    {
      "task": "Find all files/directories with '.tar.gz' extension under $DIR/tmp/daily/ directory tree, sort them numerically and show the last 3 of them",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Compress a file to the xz file format",
      "F_verb": "compress",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all files named 'foo' under your home directory and list them with confirmation prompt",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP with NP"
    },
    {
      "task": "List all files/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names excluding the paths */generated/* and */deploy/*",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP in NP"
    },
    {
      "task": "List file information of the full path of command \"c++\"",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Download changes from default remote repository and merge it",
      "F_verb": "merge",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP"
    },
    {
      "task": "Search for 'stuff' in all *,txt files under current directory",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP under NP"
    },
    {
      "task": "List jobs and their process ids and print them by replacing newline with '^'",
      "F_verb": "process",
      "source": "nl",
      "cate": "handle/process/preprocess",
      "pat": "V NP"
    },
    {
      "task": "create directories mnt and point",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Search by package license",
      "F_verb": "search",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V by NP"
    },
    {
      "task": "Count non-blank lines in a file 'foo.c'",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP in NP"
    },
    {
      "task": "Wrap each line in \"file.txt\" to fit in 80 characters",
      "F_verb": "wrap",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP in NP S_INF in NP"
    },
    {
      "task": "Add a new helm repository",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Delete chain rule",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Enable interpretation of backslash escapes (special characters)",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP of NP"
    },
    {
      "task": "Create a portable deemix config in the current directory",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP"
    },
    {
      "task": "change owner and group of the file it to user and group root",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP"
    },
    {
      "task": "Only output the package names",
      "F_verb": "output",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files with names ending with extensions '.foo', '.bar' and '.baz'",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP between NP with NP"
    },
    {
      "task": "Archive \"src\" to \"dest\" via ssh with permissions set to 755",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP via NP with NP to NP"
    },
    {
      "task": "change the permission of all the regular/normal files in the current folder from 777 to 755",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "find all the directories in the folder $LOGDIR which have been modified in the last 5 days and delete them.",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Initialize (or re-encrypt) the storage using one or more GPG IDs",
      "F_verb": "initialize",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP using NP"
    },
    {
      "task": "Install an application from a remote source",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP from NP"
    },
    {
      "task": "display long list of all the files in the folder /home/peter which belong to no user and change the owner,group of all these files (after user confirmation) to \"peter\",\"peter\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Check the bit width of static library \"libsomefile.a\"",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP"
    },
    {
      "task": "Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP whose S"
    },
    {
      "task": "Count and show the number of lines for each PHP files in the current directory tree",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP for NP in NP"
    },
    {
      "task": "Find files whose data was modified within the given days of the month",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Show manually installed packages",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Remove an Ignite plugin from the project",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Update local clone from the remote SVN repository",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP from NP"
    },
    {
      "task": "Read a file of SHA512 sums and verify all files have matching checksums",
      "F_verb": "verify",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Show file type information for files in /usr/bin",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP in NP"
    },
    {
      "task": "Split terminals vertically",
      "F_verb": "split",
      "reason": "noVerb",
      "source": "tl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP"
    },
    {
      "task": "display all the files in the current folder excluding those which are in the path of \".git\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP those S"
    },
    {
      "task": "Save the current state of a guest to a file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Ping host and ring the bell when a packet is received (if your terminal supports it)",
      "F_verb": "ping",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP when S"
    },
    {
      "task": "Make directory \"dirname\" with permissions set to 777",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP with NP to NP"
    },
    {
      "task": "Update the package's footprint",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "Search the current directory and all of its sub-directory for any PDF files.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "search for the directory with the name aa in the current folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP with NP in NP"
    },
    {
      "task": "Run \"ps -elfc\" followed by \"ls\" on host \"example.com\"",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V"
    },
    {
      "task": "Show I/O usage in non-interactive mode",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "search for text files in the current folder which have write access to others",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP which S"
    },
    {
      "task": "display a long listing of all normal/regular files in a folder which have not been modified in the last 60 days and save the output to a file",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Make directory \"/var/svn\"",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "set alias \"te\" for command 'tail -f /var/log/apache2/error_log | perl -ne '\\''...'\\'''",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Show options summary and complete ASCII table",
      "F_verb": "complete",
      "reason": "noVerb",
      "source": "tl",
      "cate": "finish/complete/finalize/complement",
      "pat": "V NP"
    },
    {
      "task": "Save output to a file",
      "F_verb": "save",
      "reason": "noVerb",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "List all tags whose ancestors include a given commit",
      "F_verb": "list",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP whose S"
    },
    {
      "task": "Find all *.txt files/directories under current directory and execute the python code 'import sys; print sys.argv[1:]' with the file paths as arguments",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP with NP as NP"
    },
    {
      "task": "Read filenames from stdin, and take backups before writing output back to the original filepaths",
      "F_verb": "read",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP"
    },
    {
      "task": "Download track / playlist at a specific bitrate",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP at NP"
    },
    {
      "task": "List all files/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "Selects a job from list and get it back to the foreground (iselect package is required).",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP to NP"
    },
    {
      "task": "kill all jobs",
      "F_verb": "kill",
      "source": "nl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP"
    },
    {
      "task": "search for the pattern \"tgt/etc/file1\" in the files tgt/etc/file2, tgt/etc/file3",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Print absolute path of \"YOUR_PATH\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Find a directory named 'project.images' in the entire filesystem",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Search for the string 'git' in all the files under current directory tree without traversing into '.git' folder and excluding files that have 'git' in their names",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP under NP without S_ING into NP"
    },
    {
      "task": "Search the /root directory recursively for the regular file named \"myfile\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Stream command output to Slack continuously",
      "F_verb": "stream",
      "reason": "noCate",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP to NP"
    },
    {
      "task": "Copy local objects to the CalDAV server and vice versa",
      "F_verb": "copy",
      "reason": "noVerb",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    }
  ],
  "6": [
    {
      "task": "List open files in a directory",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Assemble a file, writing the output to a.out",
      "F_verb": "assemble",
      "reason": "noCate",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP"
    },
    {
      "task": "Remove spaces and other undesirable characters from all files in a directory tree",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP in NP"
    },
    {
      "task": "find files with the extension .conf in the /etc directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Remove the last line from \"$file\" without reading the whole file or rewriting anything",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP without S_ING"
    },
    {
      "task": "Display real-time events from containers streamed as valid JSON Lines",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP from NP as NP"
    },
    {
      "task": "Print the gcc version installed on \"machine.example.com\" using identity file \"identity_file\" and suppressing the known hosts check and warnings",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP on NP using NP"
    },
    {
      "task": "List groups",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Sign a Phar file with an OpenSSL private key",
      "F_verb": "sign",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP with NP"
    },
    {
      "task": "find all file name in curent directory ,  -exec will file all file output  awk used here for print only file name .",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Sort \"some_data\" by the first and second \";\" delimited entries and stabilizing the sort",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP by NP"
    },
    {
      "task": "Find all *.mpg (regular) files under current directory and run an ffmpeg command on each of them",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP of NP"
    },
    {
      "task": "(GNU specific) Display numbers of processes in following states: running, sleeping, stopped, and defunct (zombie).",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Update Nextflow",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "Find all directories under /home/username/public_html/sites/all/modules and set their permission to 750",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "Print numbers from 1 to 30 with equalized 0 padding",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP to NP with NP"
    },
    {
      "task": "Read a line from standard input into variable \"dir\"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP into NP"
    },
    {
      "task": "Generate a QR code",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Display all the possible MIME types of a given file in confidence order",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Prints long recursive listing of all content of a current folder, saving output to 'output.file'.",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V to NP"
    },
    {
      "task": "run script filename.sh as root with preserved user environment",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP as NP with NP"
    },
    {
      "task": "Run all specifications in the \"spec\" directory",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP"
    },
    {
      "task": "Set your VPN region",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Set one or more semicolon-separated properties",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directories named 'query' under current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Reduce 20 percent from the current backlight value",
      "F_verb": "reduce",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "archive all the normal/regular files in the current directory which have been modified in the last 24 hours.",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Display the revision history with file names matching a specified pattern",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Request SSH to run \"echo foo; sleep 5; echo bar\" in the background",
      "F_verb": "request",
      "source": "nl",
      "cate": "request/ask/allow",
      "pat": "V NP S_INF in NP"
    },
    {
      "task": "(GNU specific) Monitor all processes whose command contains 'http'.",
      "F_verb": "monitor",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP whose S"
    },
    {
      "task": "Find all dir* files/directories under parent",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "find all the html files in the current folder which have been modified exactly 7 days ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Search the files from directory tree \"dirname\" for string \"foo\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP for NP"
    },
    {
      "task": "Convert from decimal",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V from NP"
    },
    {
      "task": "Find all .sql files in the current directory recursively and print their path names separated by zeroes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Use a specific version of Ruby for an application/project directory",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "Set update interval",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Display a password input box",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "find all png images in the current folder and convert the to jpg images. print0 is used to handle the files which have new lines in their names",
      "F_verb": "convert",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Create a mdbook project in the current directory",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP"
    },
    {
      "task": "Create a symbolic link named \".bash_profile\" to \".bashrc\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP to NP"
    },
    {
      "task": "Compile with architecture-specific optimizations for the current CPU",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V with NP for NP"
    },
    {
      "task": "Display the logs of every service and keep reading until `Ctrl + C` is pressed",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Start and manage all services in a directory as the current user",
      "F_verb": "start",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP in NP as NP"
    },
    {
      "task": "Mount \"/dev/shm\" using /etc/fstab entry",
      "F_verb": "mount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP using NP"
    },
    {
      "task": "Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from both files, replace missing fields with \"no-match\", and output the second field from standard input and the second and third field from file1.txt",
      "F_verb": "merge",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP from NP where S"
    },
    {
      "task": "create directory subdirectory",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Find all *.ogg (case insensitive) files/directories under your home directory that are greater than 100MB in size",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Display geographic information about a given IP address",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Print the count of unread articles",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "find all the directories with the name \"DIRNAME\" in the current folder and force delete them",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP whose S"
    },
    {
      "task": "Find all files that belongs to user root under / directory and show a few lines of output from the beginning",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "display all files in the current folder that have been modified in the last 24 hours whose name has only 1 letter",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Find all the files/directories with '.conf' extension under '/etc' directory non-recursively and display the last ten files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP under NP"
    },
    {
      "task": "Find all files/directories named 'apt' in the entrie filesystem",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Counts all files in a current folder and in subfolders one-level lower, and sort folder list by number of files within.",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP by NP of NP"
    },
    {
      "task": "Change the LUKS volume's passphrase",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Listen to a port, wait for an incoming connection and transfer data to STDIO",
      "F_verb": "wait",
      "source": "tl",
      "cate": "wait/await/sleep",
      "pat": "V for NP"
    },
    {
      "task": "search for the file \"job.history\" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "list *.pdf, *.bmp and *.txt files under the /home/user/Desktop directory.",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "List all available Node.js versions and highlight the default one",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Execute a command from standard input",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP"
    },
    {
      "task": "display all the .sh scripts in the folder /usr",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "List installed packages and their versions",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "List the commands in /usr/bin, pausing for user input after each page.",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP for NP after NP"
    },
    {
      "task": "Kill the current session (with prefix Ctrl-B)",
      "F_verb": "kill",
      "reason": "noCate",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP with NP"
    },
    {
      "task": "Evaluate Elixir code by passing it as an argument",
      "F_verb": "evaluate",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP by S_ING as NP"
    },
    {
      "task": "change group of the file /var/lib/php/session  to group lighttpd",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Install one or more space-separated versions of Ruby",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP of NP"
    },
    {
      "task": "find files which modification time is  one day ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "change the extension of all the \".abc\" files in the folder \"/the/path\" to \".edefg\" and do not change in the sub directories",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V in NP"
    },
    {
      "task": "Find all directories under /home/me",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "find all the files in current folder ending with \"ini\" and search for a word in all these files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Print bytes 512 through 1024 of a file",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP through NP of NP"
    },
    {
      "task": "Move *wp-admin/index.php files under /var/www/  to ./index_disabled",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP under NP to NP"
    },
    {
      "task": "Create a snapshot from an EC2 volume",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP between NP that S"
    },
    {
      "task": "Install a local software package",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Display the revision history, excluding file names that match a specified pattern",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP that S"
    },
    {
      "task": "Display the complete certificate chain of an HTTPS server",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Make directories \"$@\" verbosely and replace \"mkdir: created directory \" with \"jar-jar: yea, weesa gotta \" in the output",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP with NP"
    },
    {
      "task": "From a script, output the name of the script itself, without containing directories.",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP without S_ING"
    },
    {
      "task": "Find all .gif and .jpg files in the /var/www directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Specify amount of RAM for instance",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "Compile a project and re-compile every time a file changes",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP"
    },
    {
      "task": "Rename uppercase file or folder name $1 to lower case name",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP"
    },
    {
      "task": "Send SIGKILL to all processes owned by user 'daniel', terminating them instantly.",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP by NP"
    },
    {
      "task": "Find all 100MB files in file system and delete them using rm command",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all directories that do not contain \"main.cpp\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Immediately terminate all processes whose command or arguments match \"myProcessName\"",
      "F_verb": "terminate",
      "source": "nl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP whose S"
    },
    {
      "task": "Optimize a file and print out the result",
      "F_verb": "print",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V out NP"
    },
    {
      "task": "Remove all files with a txt extension under current directory",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP with NP under NP"
    },
    {
      "task": "Print file name without the last two extensions assuming the file name doesn't contain any other dots.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP without NP"
    },
    {
      "task": "Automatically start the replay buffer on launch",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP on NP"
    },
    {
      "task": "Build the configuration and open it in a virtual machine",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "find all the file which name (name can contains space) end with c or h and content contain 'thing'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "Save absolute path of \"/home/nohsib/dvc/../bop\" in variable \"absolute_path\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Search the current directory tree for files without \"test\" in their path names",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP without NP in NP"
    },
    {
      "task": "Enable a specific extension",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Print unique lines of sorted file \"A.txt\" compared to sorted file \"B.txt\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Execute the first instance of \"parallel\" found in the PATH, passing it all parameters received by the script/function",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Modify an existing Samba user's password",
      "F_verb": "modify",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "Display the biggest file sizes only",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "change the extension of all the \".lst\" files in the current folder to \"a.lst\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "Play a beep at a specified frequency (Hz) and duration (milliseconds)",
      "F_verb": "play",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP at NP"
    },
    {
      "task": "Execute \"2\" and write output to standard output and file \"${LOG_FILE}\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Search for a file in a package",
      "F_verb": "search",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Display the current workspace status",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Initialize an unconfigured repository",
      "F_verb": "initialize",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP"
    },
    {
      "task": "Find one file or directory in the current directory whose name matches the pattern given as a variable $a",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Make directories and parents as needed for each file path in \"a.txt\" excluding the basename for each path",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP as NP for NP in NP for NP"
    },
    {
      "task": "Recursively prints all files in a current folders, and searches \"stringYouWannaFind\" in file content ignoring case differences, and preceding found string with its number in file.",
      "F_verb": "number",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V in NP"
    },
    {
      "task": "Check a partition for bad blocks before creating the swap area",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP for NP before S_ING"
    },
    {
      "task": "Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files invoking sed as few times as possible",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Stop the Apache daemon",
      "F_verb": "stop",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP"
    },
    {
      "task": "Search the /path directory recursively for TXT files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Move \"tobecopied/tobeexcluded\" to the current directory",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP to NP"
    },
    {
      "task": "Write lines 16224 through 16482 of \"file.in\" to \"file.out\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP through NP to NP"
    },
    {
      "task": "Initialize it inside an existing git repository",
      "F_verb": "initialize",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP inside NP"
    },
    {
      "task": "Print unique lines in \"file1\" compared to \"file2\" in the order they appear",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP to NP in NP"
    },
    {
      "task": "Play a custom level",
      "F_verb": "play",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Play previous song",
      "F_verb": "play",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Configure the instance",
      "F_verb": "configure",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "find all the empty directories in current folder and delete them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "search for the word foo in all the js files in the current folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP in NP"
    },
    {
      "task": "Archive \"/media/Incoming/music/\" to \"/media/10001/music/\" on host \"server\" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission",
      "F_verb": "skip",
      "source": "nl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V NP that S"
    },
    {
      "task": "Download modules to local cache",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP to NP"
    },
    {
      "task": "find all the files in current folder ending with \"ini\" and search for a word in all these files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Find all the SUID files in the current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files/directories under current directory that were modified later than /reference/file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Find all files under current directory that match the case insensitive regex .\\|./.git and replace (all occurrences) the text matching the regex expanded by $lower1 with $lower2 in these files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Search the /media/shared directory recursively for MP3 and OGG files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Mount \"/path/to/device\" on \"/path/to/mount/location\" as a vfat filesystem and a loop back device",
      "F_verb": "loop",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Print unique lines of sorted file \"file1\" when compared with the list of first space separated fields of all sorted strings of file \"file2\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP when S"
    },
    {
      "task": "Extract path and query part from URL",
      "F_verb": "extract",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    },
    {
      "task": "search for jpg images in folders in the path \"cam2/2013\" and convert these files to the video Cam2-2013-30fps-19crf.mp4",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "verbosely create intermediate directoriy tmp as required and directory boostinst",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP as NP"
    },
    {
      "task": "Archive a file or directory",
      "F_verb": "archive",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Show information about a disk image",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "search for a file \"file\" in current folder and display all instances of this file",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all directories recursively starting from / and count them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP"
    },
    {
      "task": "Find and replace in a file printing the result to stdout",
      "F_verb": "find",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP to NP"
    },
    {
      "task": "list all the files in the file system excluding proc folder and excluding symbolic links which have write permission for the user",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP for NP"
    },
    {
      "task": "Look up a character by its value",
      "F_verb": "look",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V up NP by NP"
    },
    {
      "task": "search for all the regular/normal files in the current folder and display only video/image files",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Save the full path of command \"oracle\" to variable \"path\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Use \"/var/log/wtmp\" and print IPs and search for \"^msw.*127.0.0.1\"",
      "F_verb": "use",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Find all *.txt and *.json files in current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Generate a permuted index with SYSV-style behaviors",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Attempt to connect as root to localhost and copy /home/reportuser/dailyReport.doc to directory /root/dailyReports/20150105/ - this will normally fail because ssh won't accept root connections by default.",
      "F_verb": "connect",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V as NP to NP"
    },
    {
      "task": "display a long listing of all regular files  in current folder which have been modified in the last 60 minutes",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP which S"
    },
    {
      "task": "display all the doc files in the current folder ( files ending with \".doc\" )",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Show the response time for all registries",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Find all files and directories and count them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Check a file for formatting and display any changes on the console",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP for S_ING"
    },
    {
      "task": "Normalize an audio file (adjust volume to the maximum peak level, without clipping)",
      "F_verb": "normalize",
      "source": "tl",
      "cate": "normalize",
      "pat": "V NP"
    },
    {
      "task": "Search for all zero-byte files and move them to the /tmp/zerobyte folder",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP to NP"
    },
    {
      "task": "Submit a job and request multiple nodes",
      "F_verb": "request",
      "source": "tl",
      "cate": "request/ask/allow",
      "pat": "V NP"
    },
    {
      "task": "Create a rsa key of 2048 bits with comment \"michael\" and store it in file \"key\".",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP of NP with NP in NP under NP"
    },
    {
      "task": "Get pods in a specified namespace",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP in NP"
    },
    {
      "task": "Uncompress and unarchive \"data.tar.gz\"",
      "F_verb": "uncompress",
      "source": "nl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "Find the passwd file in the current directory and one level down",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Extract files into current directory, losing directory structure in the archive",
      "F_verb": "extract",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP into NP"
    },
    {
      "task": "Copy a single file (open an editor with the source filename on the left and the target filename on the right)",
      "F_verb": "copy",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP"
    },
    {
      "task": "Run commands from a file, logging all commands executed to the terminal",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP"
    },
    {
      "task": "Put the output of tty into a variable, then searches the output of \"who\" for TTY with \"/dev/\" removed and saves it to \"WHOLINE\"",
      "F_verb": "put",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP of NP into NP"
    },
    {
      "task": "Find all php files under current directory and delete empty lines from the beginning in those files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Change permissions to 644 for all directories under and below /path/to/someDirectory/",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP under NP"
    },
    {
      "task": "Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them to /media/caca/extract/full$date.cpio",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Calculate the total amount of memory usage of the current user",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP"
    },
    {
      "task": "Find the file in the current directory tree with inode number $inum and delete it",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Returns exit status 0 and prints exit status of previous command.",
      "F_verb": "exit",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP of NP"
    },
    {
      "task": "Execute a command in a new terminal window",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP"
    },
    {
      "task": "Force create a symbolic link as a file named \"/usr/lib/jvm/default-java\" to \"$default_java_dir\" with verbose output",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP as NP to NP with NP"
    },
    {
      "task": "Find lines that match pattern in a PDF",
      "F_verb": "find",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Find regular files named \"expression -or expression\" under and below /dir/to/search/",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP under NP unless S"
    },
    {
      "task": "Start a process with a name that can be used for later operations",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP with NP that S"
    },
    {
      "task": "find files in $HOME ending in \"txt\" or \"html\" and case insensitive search for the word \"vpn\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Check if a drive is mounted to nfs",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Change owner to \"root\" and group to \"wheel\" of \"bin\"",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP of NP"
    },
    {
      "task": "Delete everything except the control characters in \"foobar\\n\\337\" and dump the remaining characters",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP whose S"
    },
    {
      "task": "Find and remove multiple files such as *.mp3 or *.txt",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP as NP"
    },
    {
      "task": "Search an unmounted disk for bad blocks with a destructive write test and show verbose status",
      "F_verb": "search",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP with NP"
    },
    {
      "task": "Search for packages",
      "F_verb": "search",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Remove an installed package",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Hash hostnames in user's known hosts file.",
      "F_verb": "hash",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP"
    },
    {
      "task": "View network settings of an ethernet adapter",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Installs package group \"MYSQL Database Client\", answering 'yes' on all questions.",
      "F_verb": "package",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP"
    },
    {
      "task": "Prevent Atom from forking into the background, keeping Atom attached to the terminal",
      "F_verb": "prevent",
      "reason": "noCate",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP from S_ING"
    },
    {
      "task": "Scan a repository including comparative reports",
      "F_verb": "scan",
      "source": "tl",
      "cate": "visit/rescan/scan/walk/iterate/access/descend/traverse",
      "pat": "V NP including NP"
    },
    {
      "task": "Mount \"vfat\" filesystem \"/dev/sda7\" to \"/mnt/my_partition\" with read and write permission, umask of files and directories set to \"0000\", and save in fstab and allow ordinary users to mount",
      "F_verb": "mount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP to NP with NP"
    },
    {
      "task": "Print all matching commands in $PATH for command \"python\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP for NP"
    },
    {
      "task": "Print each line in \"file\", \"file2\", and \"file3\" and replace any tabs with spaces",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Make directory and parents as needed for each unique mime type in the current directory",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP as NP for NP in NP"
    },
    {
      "task": "Show header information for an ISO disk image",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Find all directories under /path/to/dir (no sub-directories) and archive them (with relative paths) into files with .tar.gz extension",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP into NP with NP"
    },
    {
      "task": "Recursively copy \"dir_a\" to \"dir_b\" and delete any new files in \"dir_b\"",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all directories under current directory and change their permission to 500",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Continuously answer \"y\" to any prompt from \"mv ...\"",
      "F_verb": "answer",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP from NP"
    },
    {
      "task": "For each line of the sorted output of both file1 and file2, print lines whose first field of file2 does not appear as first field of file1.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP whose S"
    },
    {
      "task": "Display inputfile all on one line (replace newlines by spaces)",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP on NP"
    },
    {
      "task": "Generate a name with the tag reference path",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Save list of groups which user $line belongs to and not matching pattern \"_unknown|sciences|everyone|netaccounts\" in 'results' variable",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP which S"
    },
    {
      "task": "Merge each line of standard input into a single comma separated line",
      "F_verb": "merge",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V with NP of NP into NP"
    },
    {
      "task": "Change the owner user and group of a file/directory",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP"
    },
    {
      "task": "display a long listing of all the temp files whose size is 0 bytes and which have not been accessed in the last 10 days",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP whose S"
    },
    {
      "task": "find C, C++ source and header files in current folder and create etags for them",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP for NP"
    },
    {
      "task": "Run \"./configure\" with a new environment variable CC set to the full path of the command 'cc'",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP to NP of NP"
    },
    {
      "task": "Enable or disable the Private Internet Access daemon in the background",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP in NP"
    },
    {
      "task": "Output an alpha-numeric wordlist from the given URL with words of minimum 5 characters",
      "F_verb": "output",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP with NP of NP"
    },
    {
      "task": "Find all *fink* files/directories under current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "List running apps",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Read a line from standard input and save each word in the bash array variable \"arr\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP in NP"
    },
    {
      "task": "Display records more recent than 3 days",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Generate a self-signed certificate from a certificate signing request valid for some number of days",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP for NP of NP"
    },
    {
      "task": "Find all executables under /path directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Connect only to a specific electrum-server instance",
      "F_verb": "connect",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP"
    },
    {
      "task": "Shows only process trees rooted at processes of this user.",
      "F_verb": "process",
      "source": "nl",
      "cate": "handle/process/preprocess",
      "pat": "V of NP"
    },
    {
      "task": "Include only the specified extensions in analysis",
      "F_verb": "include",
      "reason": "noCate",
      "source": "tl",
      "cate": "import/include",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all *.py (case insensitive) files/directories under dir directory ignoring .git path",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Get the mean of a single column of float numbers (floats must use \",\" and not \".\")",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Delete line 2 in numbered file \"file\" and renumber",
      "F_verb": "renumber",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V"
    },
    {
      "task": "display all the files in the current folder that are at least one week old (7 days) but less then 30 days old",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Save the absolute path of the directory of the current script to variable \"DIR\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP of NP to NP"
    },
    {
      "task": "Search for hidden files non-recursively",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Find files belonging to the given owner",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP to NP"
    },
    {
      "task": "Install the Laravel Jetstream scaffolding with a specific stack",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP with NP"
    },
    {
      "task": "Log the results to a specific CSV file",
      "F_verb": "log",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Display version information and exit",
      "F_verb": "exit",
      "reason": "noVerb",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V"
    },
    {
      "task": "Find files/directories in entire file system that were modified a day ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "List all directories under current directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "Find files containing \"FOO\" case-insensitively, and print only the match, rather than the whole line",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Sort tab separated file \"file\" using a version sort for field 6 and a numeric sort for field 7",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V for NP"
    },
    {
      "task": "Move all files and directories in the current directory to \"$TARGET\" excluding files matching \"$EXCLUDE\"",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Print a secret to stdout",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Create a new Hugo theme (themes may also be downloaded from https://themes.gohugo.io/)",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Find all files under /path/to/dir that were modified less than 7 days ago with null character as the delimiter",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Find all files under $1 directory excluding hidden files and append a null character at the end of each of their paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Compress or uncompress files and directories in a Phar file",
      "F_verb": "compress",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP in NP"
    },
    {
      "task": "Get ephemerides for Paris, France, on June 9th, 2020",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP for NP on NP"
    },
    {
      "task": "Display Kotlin and JVM version",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP with NP under NP with NP"
    },
    {
      "task": "delete all the empty in the current folder and all its sub directories",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Count the total number of lines in all HTML files under /usr/src that contain string \"foo\"",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP under NP that S"
    },
    {
      "task": "Saves list of logged in users in system together with 'USER' header in the 'a' variable.",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP in NP in NP with NP in NP"
    },
    {
      "task": "Accept a minion key by name",
      "F_verb": "accept",
      "source": "tl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP by NP"
    },
    {
      "task": "Find all files/directories under '/var/log' directory tree that bave been modified today (from the start of the day)",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "search for bash and rsync files in the entire file system excluding search in the path /usr/share folder and discard all the errors",
      "F_verb": "discard",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Print the time of last boot",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "List all available characters",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Remove all but the 3 most recent package versions from the pacman cache",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Show the entries in the autojump database",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Convert input.pdf to plain text and save it as output.txt",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Execute find with \"$@\" arguments",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP"
    },
    {
      "task": "Start a local server",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Locate world-writable files and directories on the system",
      "F_verb": "locate",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP"
    },
    {
      "task": "Delete an existing ethernet bridge interface",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "List all the USB devices available",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Display the 5 smallest files in the current directory and its sub-directories.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Search for 'pattern' in all files with '.cc' extension under current directory tree and show the matched lines with line numbers and filenames",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Set the read bit for \"other\" on all *rc.conf files in the current directory tree",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP on NP in NP"
    },
    {
      "task": "Convert CSV to JSON, performing calculations and display those calculations",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Reattach to a screen session",
      "F_verb": "reattach",
      "source": "nl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V to NP"
    },
    {
      "task": "Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Remove the variables foo and bar",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Convert \"595a\" into characters and then print the hexadecimal and printable characters of each byte",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "List all files in the current directory tree including those that may contain spaces in their names",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP those S"
    },
    {
      "task": "Find all files named \"filename\" in the current directory tree, not descending into \"FOLDER1\" directories",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Save a list of all 755 permission files/directories under $dir directory tree to the variable 'files'",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP under NP to NP"
    },
    {
      "task": "Synchronize via ssh \"user@source-server:/somedirA/\" to \"somedirB/\" with compressed data during transmission and display progress",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "View all recorded shutdowns (i.e., the last logins of the pseudo user \"shutdown\")",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Mount \"vfat\" filesystem \"/dev/sda7\" to \"/mnt/my_partition\" with read and write permission, umask of files and directories set to \"0000\", and save in fstab and allow ordinary users to mount",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V to NP"
    },
    {
      "task": "Page interactively through the output of running 'command' - the arrow keys move the view around, the < and > keys go to the beginning/end of the output, the / key initiates a search, the Q key quits, etc.",
      "F_verb": "go",
      "source": "nl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V to NP of NP"
    },
    {
      "task": "Search the regular files from directory tree 'directory_name' for \"word\" and print the names of the matched files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP for NP"
    },
    {
      "task": "replace a word in all the regular/normal files in the current folder(doesn't actually modify the original file just displays the replaced text)",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Convert a string to a QR code and print it in terminal",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Render the animation of a specific scene, starting at frame 10 and ending at frame 500",
      "F_verb": "render",
      "source": "tl",
      "cate": "draw/render/paint/redraw/plot",
      "pat": "V NP of NP"
    },
    {
      "task": "Print unique lines of sorted file \"b\" compared with sorted file \"a\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP with NP"
    },
    {
      "task": "Merge lines from files \"file1\", \"file2\", \"file3\", \"file4\", \"file5\", replace \"\\t\" with \" \\t\", and format the \"\\t\" delimited result as a table",
      "F_verb": "format",
      "source": "nl",
      "cate": "format",
      "pat": "V NP as NP"
    },
    {
      "task": "Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Display the content of YourFile.txt, waiting for user input at each page.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP for NP at NP"
    },
    {
      "task": "Display drivers and modules handling each device",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all *.c files under /home",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Print a full description of CPU, memory, disk, network and process information",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Search the current directory tree for an html file having the text 'Web sites' in it",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "list the details of all the directories in the current folder",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "List files",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Find all files with name ending with .txt and display only the filenames without full paths",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP without NP"
    },
    {
      "task": "Set the screen brightness to 40%",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "Split \"$in_file\" excluding the first line into files of at most 100000 lines each with numeric suffixes of length 5 and the prefix $in_file\"_\"",
      "F_verb": "prefix",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Find all Read Only files in the file system",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Display differences between /tmp/test1 and /tmp/test2 side-by-side.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP between NP"
    },
    {
      "task": "Counts number of lines returned by curl request.",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP by NP"
    },
    {
      "task": "Find all *.csv files under /foo/bar and move them to some_dir",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP under NP to NP"
    },
    {
      "task": "Capture the entire X server screen in the PostScript image format",
      "F_verb": "capture",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP in NP"
    },
    {
      "task": "find all files with pattern` '*.mp3'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Replace all spaces with underscores in directory names under current directory.",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP with NP in NP under NP"
    },
    {
      "task": "change the current working directory to \"B\" and display all the files in that folder and append the output to the file \"tmp.txt\"",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Remove files in the current directory tree modified more than 31 days ago recursively",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Stash current changes, including new (untracked) files",
      "F_verb": "stash",
      "reason": "noCate",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP"
    },
    {
      "task": "Create a new volume group called vg1 using multiple devices",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP using NP"
    },
    {
      "task": "Keep reading file until `Ctrl + C`",
      "F_verb": "keep",
      "reason": "noCate",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V S_ING until NP"
    },
    {
      "task": "search for the pattern in all the regular/normal files in the entire file system",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP in NP"
    },
    {
      "task": "Report file systems disk space usage pretty formatted.",
      "F_verb": "report",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP"
    },
    {
      "task": "Count the number of entries",
      "F_verb": "count",
      "reason": "noVerb",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP"
    },
    {
      "task": "Display file.txt with lines numbered, and page interactively through the result.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Find files owned by no user",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP by NP"
    },
    {
      "task": "Find regular files under / that contain \"string\" and clear out their contents",
      "F_verb": "clear",
      "source": "nl",
      "cate": "clear/clean/empty/eliminate/unpin/cleanup/unpublish",
      "pat": "V NP"
    },
    {
      "task": "Print the lines in \"table.txt\" grouped by the first field",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP by NP"
    },
    {
      "task": "Create a user role",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Generate a hexdump from a binary file and display the output",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "find all the files in the current folder which are smaller than 9MB",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Print and delete all directories named 'work' under '/usr/ports/' directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP under NP"
    },
    {
      "task": "List all ~/bin/FilesDvorak/.* (non-recursive) and ~/.PAST_RC_files/.* (recursive) files/directories and take common entries between these two lists",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "display a long listing of all the normal/regular files in the current folder (print0 is used to handle files which have newlines in their names or files with the name only as spaces )",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Print 'Empty dir' if $some_dir is empty, otherwise print 'Dir is NOT empty'",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP if S"
    },
    {
      "task": "Open gcc info manual and select \"option index\" menu entry.",
      "F_verb": "select",
      "source": "nl",
      "cate": "choose/select",
      "pat": "V NP"
    },
    {
      "task": "List tracked patterns",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Print the contents of the file and display a progress bar",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Gets a job with defined number back to the foreground.",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP with NP to NP"
    },
    {
      "task": "Display previous, current and next month",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Display the list of metadata attributes that can be extracted",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP that S"
    },
    {
      "task": "Download a web resource",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Save a new password and additional information (press Ctrl + D on a new line to complete)",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP"
    },
    {
      "task": "Create script filesPermissions.sh that restores the original permissions of the regular files in the current directory tree",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP that S"
    },
    {
      "task": "Run command 'su whoami' on host 'remotehost'",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP"
    },
    {
      "task": "Find files on the system that are bigger than 20 megabytes and show the sorted list of their filenames",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP that S"
    },
    {
      "task": "Run sed command \"s#\\(export\\ PATH=\\\"\\)\\(.*\\)#\\1/home/$(whoami)/bin:~/\\.local/bin:\\2#\" on \"~/.zshrc\" where \"$(whoami)\" is replaced with the current user name",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP where S"
    },
    {
      "task": "find all the files in some directory which have not been modified in the last 7*24 hours",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "List information about all the images in a PDF file",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP about NP in NP"
    },
    {
      "task": "Search all .c and .h files in the current directory tree for string \"e\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP for NP"
    },
    {
      "task": "Show only commits whose messages include a given string (case-insensitively)",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP whose S"
    },
    {
      "task": "search for the file \"process.txt\" in the current folder (case insensitive search)",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Build and package the extension",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Restore a snapshot (selecting which snapshot to restore interactively)",
      "F_verb": "restore",
      "source": "tl",
      "cate": "restore/recover/resume",
      "pat": "V NP"
    },
    {
      "task": "Find \"*prefs copy\" files in the /mnt/zip directory tree and remove them with prompting",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Search for a line starting with 'use strict' in all files with '.pl' extension under current directory tree and show the unmatched files only",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP with NP in NP with NP under NP"
    },
    {
      "task": "Run checksums recursively from the current directory, and give back the filenames of all identical checksum results",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP"
    },
    {
      "task": "display all the files in the entire file system which have set uid bit set.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Set a high threshold of 0.5 seconds for the elapsed time; exceeding which the timestamp will be colored bright red",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "set alias \"ls\" for command \"ls -lrta\"",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Display disk statistics with disk names (including LVM)",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP which S"
    },
    {
      "task": "find all the regular files in current folder, that have been changed in the last 3 days and display last 5 files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Write \"2-1\" to standard output and to \"/sys/bus/usb/drivers/usb/unbind\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP S_INF"
    },
    {
      "task": "find all the files in the current folder which have been modified for the ffiles that are at least one week old (7 days) but less then 30 days old",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Count the number of times each person is logged in on the system",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all *.txt files under / and print their sizes and paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Print full path of command \"python\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Change file owner and group of \"/path/to/yourapp\" to root and print a diagnostic",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "List available themes",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "search and unzip all the \".fq.gz\" files and perform a control check on this raw sequence of data and display the output to the screen",
      "F_verb": "perform",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP of NP"
    },
    {
      "task": "Only mutate lines of code that are covered by tests",
      "F_verb": "mutate",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP that S"
    },
    {
      "task": "Evaluate a single expression",
      "F_verb": "evaluate",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP"
    },
    {
      "task": "Search /usr/bin for regular files that were last accessed more than 100 days ago",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP that S"
    },
    {
      "task": "Turn the number lock off",
      "F_verb": "turn",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Output results to a file",
      "F_verb": "output",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Ping every address from 192.168.0.1 to 192.168.0.254 with a timeout of 1 second and filter out no responses",
      "F_verb": "ping",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP to NP with NP"
    },
    {
      "task": "Count case insensitive absolute paths recursively from the current directory",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP from NP"
    },
    {
      "task": "Download a track or playlist",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "list all the directories in the folder httpdocs",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Clear the screen but keep the terminal's scrollback buffer",
      "F_verb": "clear",
      "reason": "noCate",
      "source": "tl",
      "cate": "clear/clean/empty/eliminate/unpin/cleanup/unpublish",
      "pat": "V NP"
    },
    {
      "task": "Sniff local DHCP traffic",
      "F_verb": "sniff",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Save the system host name into variable \"HOST\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP into NP"
    },
    {
      "task": "Ensure all 5 of UEDP0{1..5}_20120821.csv files exist, creating empty files for any missing ones (updates the file's timestamps)",
      "F_verb": "ensure",
      "source": "nl",
      "cate": "confirm/ensure",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Find all .sql files in the current directory recursively and apply script \"scriptname\" to them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "search  in current directory downwards all files which were accessed exactly 7 days back",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP which S"
    },
    {
      "task": "Backup MySQL database \"database\" with \"username\" and \"pswd\", compress with gzip and add the time stamp before emailing to \"me@domain.com\"",
      "F_verb": "compress",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V with NP"
    },
    {
      "task": "search for all the mp3 files in the file system and move them to the folder /mnt/mp3",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Split \"hugefile.txt\" into files with 100000 lines each starting with \"part.\" and using numeric suffixes",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP with NP"
    },
    {
      "task": "split all files in directory \"posns \" into pieces per 10000 lines",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP in NP into NP"
    },
    {
      "task": "Run a Shadowsocks proxy by specifying the config file",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP by S_ING"
    },
    {
      "task": "Use a specific version of Node.js across the whole system",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP across NP"
    },
    {
      "task": "Check if a drive with UUID \"09b8f1ab-8d4b-4c5f-b395-40be09c090b0\" is mounted",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Print the contents of \"my_script.py\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Connect to host \"remotehost\" as ssh user \"user\" to copy remote file \"/location/KMST_DataFile_*.kms\" to current directory on local host.",
      "F_verb": "connect",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V to NP as NP S_INF to NP on NP"
    },
    {
      "task": "Force overwrite if files to be unpacked already exist",
      "F_verb": "force",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V if S"
    },
    {
      "task": "Run the PHP script 'yourscript.php', making it immune to SIGHUP signals.",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Clean and then package the code with a given build profile",
      "F_verb": "clean",
      "source": "tl",
      "cate": "clear/clean/empty/eliminate/unpin/cleanup/unpublish",
      "pat": "V NP with NP"
    },
    {
      "task": "Search for '/usr/bin/perl' in all regular files under current dirctory tree and also show a long listing of them",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    }
  ],
  "7": [
    {
      "task": "print all readline bindings",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Create disk image with a specific size (in gigabytes)",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "run \"your_command\", letting the user page through the output and move around with the arrow keys - the Q key terminates and returns to the shell prompt.",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP through NP"
    },
    {
      "task": "Make a copy of file1 in dir1, dir2, and dir3.",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Replace all spaces (' ') with comma (',') in ${TO_IGNORE[@]}, append with '--ignore ' and save the resultant string to variable 'ARGS'",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP with NP in NP with NP"
    },
    {
      "task": "Create a new user with a home directory at the specified path",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP at NP"
    },
    {
      "task": "find all the \".JPG\" files in current folder and display their count",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Validate a specific file",
      "F_verb": "validate",
      "source": "tl",
      "cate": "validate/authenticate",
      "pat": "V NP"
    },
    {
      "task": "Show the current minimum and maximum CPU frequency and policy in table format",
      "F_verb": "format",
      "source": "tl",
      "cate": "format",
      "pat": "V"
    },
    {
      "task": "Install a new package and assume yes to all questions",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Save the directory of the full path to the current script in variable \"dir\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP to NP in NP"
    },
    {
      "task": "Append \"& Bytes\" to the end of every line in \"$TEMPFILE\" and format the result as a table",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP of NP in NP"
    },
    {
      "task": "Install one or more packages",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Upgrade all installed packages",
      "F_verb": "upgrade",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "find all the html files in the current folder which have been modified excatly 7 days before",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "To tail multiple applications at the same time separate them by comma",
      "F_verb": "tail",
      "reason": "noCate",
      "source": "tl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V NP at NP by NP"
    },
    {
      "task": "Display the current JDK version used",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "display all the files in the current folder excluding search in the paths containing the folder having the word \"mmm\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Find all the files under /etc directory which are larger than 100k",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP which S"
    },
    {
      "task": "search for the word \"search-pattern\" in all the regular/normal files in the current folder and display the matched file name",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Search directory tree /srv/${x} for regular files accessed at least 10080 minutes ago, and remove those files",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "print list of all alias commands",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Print and recursively remove the alphabetically last directory in the current directory",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Output a wordlist from the given URL using HTTP Basic or Digest authentication",
      "F_verb": "digest",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Find all .zip files starting from the current directory which are owned by user tommye",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP which S"
    },
    {
      "task": "archive all files in a current directory modified in the last 30 days",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Open a file",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP"
    },
    {
      "task": "Print the 6th field (delimited by '/') from the paths specified by ~/bin/FilesDvorak/.* files/directories",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP by NP"
    },
    {
      "task": "Remove everything within parentheses and substitute all non digit characters with a space from \"1/2 [3] (27/03/2012 19:32:54) word word word word 4/5\" and format the output as a table",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP within NP"
    },
    {
      "task": "Count the total number of lines in all \"*.gz\" files in the current directory tree after decompression",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP in NP whose S"
    },
    {
      "task": "Ping a group of hosts by invoking the ping module",
      "F_verb": "ping",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP by S_ING"
    },
    {
      "task": "Undo the last two commits, adding their changes to the index, i.e. staged for commit",
      "F_verb": "undo",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP to NP"
    },
    {
      "task": "Override the default kube config location",
      "F_verb": "override",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Immediately terminate all processes whose command or arguments match \"myProcessName\"",
      "F_verb": "match",
      "source": "nl",
      "cate": "match",
      "pat": "V NP"
    },
    {
      "task": "Actually run a service's custom command",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Request a specific subdomain",
      "F_verb": "request",
      "reason": "noVerb",
      "source": "tl",
      "cate": "request/ask/allow",
      "pat": "V NP"
    },
    {
      "task": "Output a wordlist from the given URL through a proxy",
      "F_verb": "output",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP through NP"
    },
    {
      "task": "Counts total number of all '*.py' files beginning from root folder, and shows 'tqdm' progress bar.",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Scale an A4 poster to A3 and then generate 2 A4 pages",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "find all the files that have been modified exactly 2 days ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Share with write permission",
      "F_verb": "share",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V with NP"
    },
    {
      "task": "Append the output to a log file, instead of replacing its current contents",
      "F_verb": "append",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP instead-of S_ING"
    },
    {
      "task": "Use ANSI escape codes to make \"World\" bold from input \"Hello World!\"",
      "F_verb": "use",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP S_INF from NP"
    },
    {
      "task": "Allow all users to execute \"myscript.sh\"",
      "F_verb": "allow",
      "source": "nl",
      "cate": "request/ask/allow",
      "pat": "V NP S_INF"
    },
    {
      "task": "Specify a virus database file or directory of files",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all *.mp3 files in entire file system greater than 10MB and delete them",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "find all files in home folder which have been modified after a timestamp",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Find all hidden directories starting from the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NPS"
    },
    {
      "task": "find all the files ending with .mp3 or .jpg",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Retrieve the X-Windows window ID of the running Firefox window(s)",
      "F_verb": "retrieve",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP"
    },
    {
      "task": "Execute \"bash -c your_script\" every 2 seconds",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "change owner and group of the file \"file\" to user \"user\" and group \"group\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Get the number of \"use\" statements in all PHP files, ordered",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Search the current directory recursively for regular files last modified less than 2 days ago",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Run a scheme program (with no REPL output)",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP"
    },
    {
      "task": "Generate a simple regular expression",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "List the specified attribute only",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "List the available environments",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Don't truncate information",
      "F_verb": "truncate",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Look for SUID files and directories",
      "F_verb": "look",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Append \"foo\" and \"bar\" column in file \"file\" with values dependent on the current table contents",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP in NP with NP on NP"
    },
    {
      "task": "Use a custom ESLint environment when linting",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP when S_ING"
    },
    {
      "task": "List all *jsp and *java regular files found in the current directory tree",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Compress a PNG and remove all metadata",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Create an annotated tag with the given message",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Erase firmware from device",
      "F_verb": "erase",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Display file in hexadecimal format (2-byte units), with byte offsets in decimal format",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP with NP in NP"
    },
    {
      "task": "Save hexadecimal bytes 7 and 8 in binary file \"file.moi\" to variable \"year\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Archive \"source\" to \"root@remote_server_name:/opt/backups\" via ssh on port 3382 and compress data during transmission",
      "F_verb": "compress",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP during NP"
    },
    {
      "task": "Clone Disk A to Disk B, creating a log file",
      "F_verb": "clone",
      "reason": "noCate",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Upload the current (local-only) repository to your github account",
      "F_verb": "upload",
      "reason": "noCate",
      "source": "tl",
      "cate": "commit/submit/upload",
      "pat": "V NP to NP"
    },
    {
      "task": "(GNU specific) Display various information about process currently taking the most CPU time.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Find all regular files under ${path} without following symlinks",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP without S_ING"
    },
    {
      "task": "Get the IP address of the cluster",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Detach from a session",
      "F_verb": "detach",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V from NP"
    },
    {
      "task": "Validate utf8 characters",
      "F_verb": "validate",
      "source": "tl",
      "cate": "validate/authenticate",
      "pat": "V NP"
    },
    {
      "task": "List all the .c files under the current directory and below in a 3 column format",
      "F_verb": "format",
      "source": "nl",
      "cate": "format",
      "pat": "V"
    },
    {
      "task": "Format output width to a minimum of 4 digits padding with zeros as necessary",
      "F_verb": "format",
      "reason": "noCate",
      "source": "tl",
      "cate": "format",
      "pat": "V NP to NP of NP with NP as NP"
    },
    {
      "task": "Find all files under $1, calculate their md5sums and redirect the results to $1__checksums.md5",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Specify an HTTP method",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "find all the perl files in the current folder and search for a pattern",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Switch to the previous branch",
      "F_verb": "switch",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP"
    },
    {
      "task": "List all environment variables whose name or value contains current user's login name.",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP whose S"
    },
    {
      "task": "find all the text files in the folder /home/calvin and do not search beyond 2 levels",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Assign the alias rm2g to a find command that removes any .tar file larger than 2 gigabytes.",
      "F_verb": "assign",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP that S"
    },
    {
      "task": "Search /usr, /home, /tmp for *.jar files suppressing error messages",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "List the namespaces",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Write \"ee\" to standard output on \"/dev/pty/2\" and as input to command \"foo\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP on NP"
    },
    {
      "task": "Close all open thunar windows",
      "F_verb": "close",
      "reason": "noVerb",
      "source": "tl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP"
    },
    {
      "task": "Use the specified user account",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Count the number of lines in all \".php\" files in the current directory tree using bash for Windows",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP in NP using NP for NP"
    },
    {
      "task": "Create a hard link to a file",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP to NP"
    },
    {
      "task": "Execute \"sleep 30; touch nohup-exit\" in the background on target machine \"REMOTE\"",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Execute a program",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "find all the normal/regular files in the current folder which have been modified in the last day and display a long listing of them",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all files/directories startring with 'onlyme' in their names under current directory without going into sub-directories",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP in NP under NP without S_ING"
    },
    {
      "task": "Find all syslog directories under /var/log directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all directories by the name `httpdocs' on the system",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP by NP on NP"
    },
    {
      "task": "Download multiple files (glob expression)",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "delete all the files in the current folder which have been modified in the last 14*24 hours",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Close the current connection",
      "F_verb": "close",
      "reason": "noVerb",
      "source": "tl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP"
    },
    {
      "task": "display the filename and size of all the files in the file system which are bigger than 20MB",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP which S"
    },
    {
      "task": "Display facts about a group of hosts by invoking the setup module",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP of NP by S_ING"
    },
    {
      "task": "Enable a jEnv plugin",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "find all normal/regular files in current folder an save the output to the files /tmp/grep1 & /tmp/grep2",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Represent current date in RFC 3339 format with precision to seconds and save it to 'timestamp' variable",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Get A record for domain $domain",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP for NP"
    },
    {
      "task": "Make directory \"saxon_docs\"",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Find all *.txt files on the vfat file system",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP"
    },
    {
      "task": "Partially remove metadata from a file",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Get the disk space used by all *.txt (case insensitive) files/directories under /path directory",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP by NP under NP"
    },
    {
      "task": "Search  in current directory downwards all files whose size is greater than 10 bytes .",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP whose S"
    },
    {
      "task": "Find List of directories  with non-zero sub-folder count:",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP with NP"
    },
    {
      "task": "find all the files in the file system which have not been modified in the last 100*24 hours",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Turn on debugging output",
      "F_verb": "turn",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V on NP"
    },
    {
      "task": "If there are multiple executables which match, display all",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directories under current directory in maximum 3 levels deep",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP in NP"
    },
    {
      "task": "search for a word in all the .C files( those having the extension \"c\") in current directory",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Convert filename encoding and rename the file to the new encoding",
      "F_verb": "rename",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP"
    },
    {
      "task": "Run on the current directory, excluding the \"build\" directory",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V on NP"
    },
    {
      "task": "find all regular/normal files in the current folder that have been modified in the last 120 hours",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Traceroute to a host",
      "F_verb": "traceroute",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V to NP"
    },
    {
      "task": "Launch a new instance, set its name and use a cloud-init configuration file",
      "F_verb": "launch",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Remove directory, provided it is empty. Use `rm -r` to remove non-empty directories",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Specify the destination port and packet length in bytes",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files matching pattern '.#*' in the current directory tree and execute \"foobar\" for each of them with the file name as an argument",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Print the boot time in standard date format",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Continuously write \"UUUUUUUUUUUUUUUUU\" without newlines to \"/dev/to/overwrite\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP without NP to NP"
    },
    {
      "task": "Apply a theme",
      "F_verb": "apply",
      "source": "tl",
      "cate": "apply/reapply/accept/repeat",
      "pat": "V NP"
    },
    {
      "task": "Generate a Makefile and use it to compile a project in the same directory as the source",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Start the Deluge daemon using a specific configuration file",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP using NP"
    },
    {
      "task": "Find all files which belong to user lal and change their ownership to ravi",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "List all files under and below the directory given as variable $ARCH1",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP as NP"
    },
    {
      "task": "Execute a Git subcommand with a given configuration set",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP"
    },
    {
      "task": "Display verbose build output",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Print the file paths and their sizes for all files under full_path_to_your_directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP for NP under NP"
    },
    {
      "task": "Change the group id",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Create eslint config",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Paste a file",
      "F_verb": "paste",
      "reason": "noCate",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP"
    },
    {
      "task": "Print the names and sizes of regular files residing in the \"tmp\" directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Join strings from 'file1' and 'file2', discarding excessive strings from largest file, and printing first, second and third space-separated field from first file, and third and fourth field from second file as a join result",
      "F_verb": "join",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP"
    },
    {
      "task": "Find files in the current directory and below that are newer than /bin/sh",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Print information on possible targets for this project",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP on NP for NP"
    },
    {
      "task": "Create compressed archive from \"my_large_file_1\" and \"my_large_file_2\" and split into files of size 1024 MiB with prefix \"myfiles_split.tgz_\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "Count the number of all directories under directory '/mount/point' non-recursively",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP under NP"
    },
    {
      "task": "Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP under NP"
    },
    {
      "task": "Read a line from standard input into variable \"password\" without echoing the input and using the prompt \"Password: \"",
      "F_verb": "prompt",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP"
    },
    {
      "task": "display all the files in the file system excluding all the \".c\" files",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Force create a symbolic link named \"mylink\" with target \"/apps/myapps/new/link/target\"",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Find files/directories under current directory that are modified exactly one hour ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Find all files in ~/clang+llvm-3.3/bin/ and print 'basename /file/path' for each file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP for NP"
    },
    {
      "task": "Initialise a configuration file",
      "F_verb": "initialise",
      "reason": "noCate",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP"
    },
    {
      "task": "display all directories in the folder \"PROD\" and do not search in the sub directories",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP"
    },
    {
      "task": "Define a macro before processing files",
      "F_verb": "define",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP before NP"
    },
    {
      "task": "change the current working directory to \"A\" and display all the files in that folder and save the output to the file \"tmp.txt\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Print a sorted list of unique directory paths in entire file system that match the pattern '<name_pattern>' in their names",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP that S"
    },
    {
      "task": "Write the ASCII output in HTML file format, suitable for viewing in web browsers",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP for NP in NP"
    },
    {
      "task": "Search the files from the current directory tree for text \"documentclass\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP for NP"
    },
    {
      "task": "Show RAID info",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all the files whose name is tecmint.txt and contains both capital and small letters in /home directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Execute /usr/bin/find with $* arguments where current directory is the first argument",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP where S"
    },
    {
      "task": "Increase or decrease image size",
      "F_verb": "decrease",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Extract five digits sequence from a filename with x number of alphanumeric characters followed by the five digit sequence surrounded by a single underscore on either side then another set of x number of alphanumeric characters.",
      "F_verb": "extract",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP with NP of NP by NP by NP on NP of NP"
    },
    {
      "task": "Sort a CSV file by the \"name\" column in descending order",
      "F_verb": "sort",
      "reason": "noCate",
      "source": "tl",
      "cate": "sort",
      "pat": "V NP by NP in NP"
    },
    {
      "task": "Find all files under current directory and set read-write permission for owner, read permission for group and other for those directories",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP for NP for NP"
    },
    {
      "task": "Search the /path directory tree for files that do not have a valid user or group",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V"
    },
    {
      "task": "find all the files that are modified in the last 1 day",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Tell the kernel about the existence of the specified partition",
      "F_verb": "tell",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP about NP of NP"
    },
    {
      "task": "find all files in a  directory with default depth size and compress them to lpicpio.2 file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP in NP with NP to NP"
    },
    {
      "task": "Set the keyboard in French AZERTY",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP in NP"
    },
    {
      "task": "find all empty files in /tmp directory .",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Display changes in a histogram",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files matching shell pattern \"foo/bar\" in the foo directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Search for a package via its name or description",
      "F_verb": "search",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP via NP"
    },
    {
      "task": "Print a count of case insensitive duplicate filenames in the current directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Installs 'firefox' package without using 'sublime2' repository.",
      "F_verb": "install",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP without using NP"
    },
    {
      "task": "Configure for first use",
      "F_verb": "configure",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V for NP"
    },
    {
      "task": "change owner and group of the directory  $dstdir\" to the user and group of the file \"$srcdir\"",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V of NP"
    },
    {
      "task": "Find .rmv files in the current directory recursively",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Set variable value to current kernel release name, making this variable visible by subprocesses of current shell.",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "Search the current directory recursively for regular files with extensions sdw, sdc, sdd and save the search result as \"list_1\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP as NP"
    },
    {
      "task": "Start the pacman4console level editor, saving to a specified text file",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP to NP"
    },
    {
      "task": "Save the filename and hash of the md5 sum of \"file\" to bash array \"md5\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "change the permissions of all the regular files in the current folder",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Change permissions of directory \"/home/sshtunnel/\" to 555",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Run updates",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Execute script 'truncate.sh' on all files in the /path/to/files directory tree",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP in NP"
    },
    {
      "task": "Archive \"/home/user1\" to \"wobgalaxy02:/home/user1\" excluding hidden files",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Open a Konsole with the emergency FALLBACK profile",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP with NP"
    },
    {
      "task": "Reference another assembly",
      "F_verb": "reference",
      "reason": "noCate",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Search man page descriptions with a regular expression",
      "F_verb": "search",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "(Linux-specific) Display a tree-like view of USB devices, letting the user page through it with the arrow keys, with the Q key to quit.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all IP addresses in /etc directory files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all SUID files .",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "list complete path name to process associated with pid \"$1\"",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP to NP with NP"
    },
    {
      "task": "Remove all *.swp files under current directory",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP"
    },
    {
      "task": "display all the files in the current folder which have been accessed in the last 60 minutes",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Build a Nimble package",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "List files owned by a package",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP by NP"
    },
    {
      "task": "Set the disc label when creating an ISO",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP when S"
    },
    {
      "task": "Tunnel VNC port 5900 over compressed SSH and X11 forwarded session to \"remotehost\"",
      "F_verb": "tunnel",
      "source": "nl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP over NP"
    },
    {
      "task": "find the depth of all the files in current folder and display the depth and file name",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Print out the contents of all *.txt files in the home directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V out NP of NP in NP"
    },
    {
      "task": "Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "find all the files in the directory which is pointed by $1 variable ending with the name held in the variable $2 or having the extension of value saved in the argument $2.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Compile resources referenced in \"file.gresource.xml\" to a .gresource binary",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Find files on the system modified more than 90 minutes ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP"
    },
    {
      "task": "Change permissions to 644 for all files in the current directory tree",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP for NP in NP"
    },
    {
      "task": "Compare different files from the current branch to other branch",
      "F_verb": "compare",
      "source": "tl",
      "cate": "compare",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Search for files/directories with a case insensitive .txt extension in entire file system",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP with NP in NP"
    },
    {
      "task": "Refresh every 250 milliseconds and show the last 30 seconds in the charts",
      "F_verb": "refresh",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP"
    },
    {
      "task": "Find files/directories under '/dir' directory tree that are newer than 'yesterday.ref' file and older than 'today.ref' file by modification time",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Check filesystem /dev/sda, reporting any damaged blocks",
      "F_verb": "check",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Specify a base url for relative urls in the input HTML file",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP in NP"
    },
    {
      "task": "Find all files on the system that have been modified in the last 10 minutes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP that S"
    },
    {
      "task": "List regular files in current directory with read, write and execute permission for all users and also show the permissions",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Sort in descending numerical order on a field",
      "F_verb": "sort",
      "reason": "noCate",
      "source": "tl",
      "cate": "sort",
      "pat": "V in NP on NP"
    },
    {
      "task": "Search the ~/Books directory recursively for files named \"Waldo\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Print \"$somedir is empty\" if $somedir is empty",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP if S"
    },
    {
      "task": "Return the contents of the first node named \"foo\" as a string",
      "F_verb": "return",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP as NP"
    },
    {
      "task": "Jump to the 100th line",
      "F_verb": "jump",
      "reason": "noVerb",
      "source": "tl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V to NP"
    },
    {
      "task": "Limit download speed in bytes/s",
      "F_verb": "limit",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all directories under ~/code excluding hidden directories and replace all newlines with : in the output then remove the last :",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "find all the \"error_log\" files in the folder \"/home\" which are bigger than 5MB and force delete them",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "find all the html files in current folder and replace some pattern in all these files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "List files under $CURR_DIR which were modified, accessed or whose status were changed $FTIME ago and sort them and remove duplicate entries",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP"
    },
    {
      "task": "Get the list of libraries and their dependencies",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Display only mimetype of myfile.txt, without the filename.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP without NP"
    },
    {
      "task": "Rename \"blah2\" to \"blah2-new\"",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP"
    },
    {
      "task": "Run project tests",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Move all files listed in $i file to dir.$count directory",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Rename all *.jpg files to *.jpg$.jpg files under current directory by appending the parent directory name at the beginning of their names",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP under NP by S_ING at NP of NP"
    },
    {
      "task": "search for the word \"nameserver\" in all the configuration files of the /etc folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP of NP"
    },
    {
      "task": "Find all files/directories under current directory with a Depth-First search",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP with NP"
    },
    {
      "task": "Merge files 'text.txt' and 'codes.txt' by outputting any lines whose second field in the first matches the first field in the second.",
      "F_verb": "merge",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP by S_ING whose S"
    },
    {
      "task": "Locate all *.mov files in the current directory tree",
      "F_verb": "locate",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Print histogram of heap usage by type",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP by NP"
    },
    {
      "task": "Count the number of lines in every regular .rb file in the current directory tree",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP in NP"
    },
    {
      "task": "Copy the output from a command to the X11 primary selection area (clipboard)",
      "F_verb": "copy",
      "reason": "noVerb",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Find all *.tar.gz files/directories under /directory/whatever which were modified more than $DAYS ago and show a message if no files were found",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP if S"
    },
    {
      "task": "Count the number of the regular files residing under and below ./randfiles/",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP under NP"
    },
    {
      "task": "Add a directory or increment its rank",
      "F_verb": "increment",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP"
    },
    {
      "task": "Randomize the order of lines in a file and output the result",
      "F_verb": "randomize",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Recursively rename all files under /your/target/path replacing 'special' with 'regular' - all file/diretory names may not include spaces, and directory names containing such files may not contain the word 'special' in their name.",
      "F_verb": "contain",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP in NP"
    },
    {
      "task": "Recursively move \"./dir\" to \"user@host:/path\" compressing data and displaying progress during transmission",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP to NP"
    },
    {
      "task": "Execute COMMAND for all files and directories under the current directory tree",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP for NP under NP"
    },
    {
      "task": "Run PHP interactively",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Split the first 100 lines of \"datafile\" into files with at most 1700 bytes each preserving lines",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP of NP with NP"
    },
    {
      "task": "Associate the local install of `asciinema` with an asciinema.org account",
      "F_verb": "associate",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP of NP with NP"
    },
    {
      "task": "Display a calendar for a specific year (4 digits)",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Update a package manually",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "List available signal names (to be used without the 'SIG' prefix)",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP S_INF"
    },
    {
      "task": "Delete partition mappings",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Send reverse requests to get domain name for each address in 'my_ips' list",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP S_INF for NP in NP"
    },
    {
      "task": "list files in /usr modified after February 1 of the current year",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP after NP of NP"
    },
    {
      "task": "Print the sizes and names of all TXT files from the current directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "force delete all the regular/normal files in the current folder",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP"
    },
    {
      "task": "Select a few columns",
      "F_verb": "select",
      "source": "tl",
      "cate": "choose/select",
      "pat": "V NP"
    },
    {
      "task": "start 2 sleep processes in the background",
      "F_verb": "start",
      "source": "nl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP in NP"
    },
    {
      "task": "Display the last slash-separated part of each filename path in file.txt",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "search for all the files in the current folder which have spaces and force delete them",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP which S"
    },
    {
      "task": "search for al cpp files in current folder and replace all expect the parent directory name of these files and display it them sorted order",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP"
    },
    {
      "task": "Attach to a session, creating it if it doesn't exist",
      "F_verb": "attach",
      "source": "tl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V to NP"
    },
    {
      "task": "search for the directory \"mysql\" in the /etc folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Find all files/directories named 'top' in the entire filesystem",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Switch to the previous view",
      "F_verb": "switch",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP"
    },
    {
      "task": "Add archive resource",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Find *.c and *.h files under the current directory tree skipping hidden directories and files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Install a specific dependency version, and add it to bower.json",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all directories named \"D\" in the current directory tree and print their parents",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Use multiple jobs to do the restoring",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP S_INF"
    },
    {
      "task": "Read JSON from a file and execute a specified JSONPath expression",
      "F_verb": "read",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP"
    },
    {
      "task": "Show help on a Git subcommand (like `commit`, `log`, etc.)",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP on NP"
    },
    {
      "task": "Remount \"rfs\" filesystem \"/dev/stl12\" on \"/system\" with read and write permission",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Create a new user belonging to the specified group",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP to NP"
    },
    {
      "task": "delete all the \".doc\" files in the current folder",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Find the first file/directory named 'something' under current directory and quit",
      "F_verb": "quit",
      "source": "nl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V"
    },
    {
      "task": "Convert an A2 poster into 4 A4 pages",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP into NP"
    },
    {
      "task": "Recursively print all files and directories in the directory tree \"$absolute/path/of/your/dir\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Print relative path of device of disk with UUID \"b928a862-6b3c-45a8-82fe-8f1db2863be3\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP of NP with NP"
    },
    {
      "task": "Check md5sum of directory /path against the checksum saved in file 'file'",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP against NP in NP"
    },
    {
      "task": "Print flow of random data, showing all non-printing characters",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Copy \"/Users/username/path/on/machine/\" to \"username@server.ip.address.here:/home/username/path/on/server/\" and convert encoding from UTF-8-MAC to UTF-8",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "search for a word in all c files in the current folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP in NP"
    },
    {
      "task": "display all directories in current folder excluding those which do not have read permission to all users and save the output to a file",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "List tasks",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Find all *.dbf files/directories in entire file system and print their sorted and unique parent directory paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Format output of \"mount\" as a table",
      "F_verb": "format",
      "source": "nl",
      "cate": "format",
      "pat": "V NP of NP as NP"
    },
    {
      "task": "Create a name with 4 digits for the abbreviated commit hash",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP for NP"
    },
    {
      "task": "find all the files that have been modified today",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Try to get a free server number, if the default (99) is not available",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP if S"
    },
    {
      "task": "Create configuration file",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Prints $m latest modified files within the $d folder, using $f format for printing timestamp.",
      "F_verb": "format",
      "source": "nl",
      "cate": "format",
      "pat": "V for NP"
    },
    {
      "task": "Give the location of every hard link to file1 in the /home directory tree",
      "F_verb": "give",
      "source": "nl",
      "cate": "provide/give/supply",
      "pat": "V NP of NP to NP in NP"
    },
    {
      "task": "Add a new Laravel site",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Set the current minimum CPU frequency of CPU 1",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP"
    },
    {
      "task": "Start one or more containers",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "List the unique parent directories of all .class files found under \"/root_path\"",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP under NP"
    },
    {
      "task": "Display help for a specific command",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Delete the first line of \"$FILE\" using intermediate file \"$FILE.tmp\"",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP of NP using NP"
    },
    {
      "task": "split a file \"list.txt\" into pieces per 600 lines",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP"
    },
    {
      "task": "Find regular files under and below /path that match pattern \"???-???_[a-zA-Z]*_[0-9]*_*.???\"",
      "F_verb": "match",
      "source": "nl",
      "cate": "match",
      "pat": "V NP"
    },
    {
      "task": "Calculate md5 checksum of $line and save to variable 'md5'",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP"
    },
    {
      "task": "display all the users in the current folder that belong to the group \"sunk\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Find files in the /var/log folder which were modified modified 2 weeks ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Find all files under /path and below writable by `group' and `other'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP by NP"
    },
    {
      "task": "List the contents of the encrypted archive.gpg",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP"
    },
    {
      "task": "Open a new `bash` shell, which uses yesterday as the current date",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP which S"
    },
    {
      "task": "Move a single file (open an editor with the source filename on the left and the target filename on the right)",
      "F_verb": "move",
      "source": "tl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP"
    },
    {
      "task": "Mount partition with label \"WHITE\" on \"/mnt/WHITE\" with read and write permission and have it accessible by user and group \"test\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Use standard input to count lines, words and characters (bytes) in that order",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP S_INF in NP"
    },
    {
      "task": "Force remove all files and folders in the physical current working directory",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP"
    },
    {
      "task": "Open a file and enter normal mode, to execute commands",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP S_INF"
    },
    {
      "task": "Find and print the full pathname of all PDF files in the current directory and its sub-directories.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "List all directories of the $topdir directory tree that contain a Makefile and at least one .py file",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP that S"
    },
    {
      "task": "delete all the hidden in the folder Musica after user confirmation",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP after NP"
    },
    {
      "task": "Remove trailing spaces from all files under current directory ignoring directories wtih *.git* (case insensitive) in their paths",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP under NP with NP in NP"
    },
    {
      "task": "Freeze 1 or more specified stages",
      "F_verb": "freeze",
      "reason": "noCate",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP"
    },
    {
      "task": "Show version information",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "display all the files in the file system which are present in nfs system",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Run a shell command from the interactive CLI",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP"
    },
    {
      "task": "Print the full date and time for entries and then display the hostname column last to prevent truncation",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP for NP"
    },
    {
      "task": "Compile using Verilog library files from a different path",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V using NP from NP"
    },
    {
      "task": "List all file details with filenames matching \"*2012*.xml\" from \"serveripaddress::pt/dir/files/\" listening on port 111 and write to \"output.txt\"",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP with NP rom NP"
    },
    {
      "task": "Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Read only 100 bytes of a file starting from the 500th byte",
      "F_verb": "read",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Check the spelling of a file",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP"
    },
    {
      "task": "searches through the /usr/local directory for files that end with the extension .html",
      "F_verb": "end",
      "source": "nl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V with NP"
    },
    {
      "task": "display all the empty files in current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Change the configuration directory",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "find in the file system for the directories with the name \"httpdocs\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP or NP with NP"
    },
    {
      "task": "Create stabilisation file to be able to remove camera shakes",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP S_INF"
    },
    {
      "task": "Find all regular files under current directory tree and replace all '1.2.3.4' with '5.6.7.8' in these files modiying the files in-place",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "files all files which expect directories and display count of them",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Find files matching a given size range",
      "F_verb": "find",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Insert the contents of a file",
      "F_verb": "insert",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP of NP"
    },
    {
      "task": "Copy and always overwrite all files in \"/zzz/zzz\" to \"/xxx/xxx\"",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Search the current directory tree for filenames matching the pattern '[mM][yY][fF][iI][lL][eE]*'",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "search for a word in all the php files in the current folder and display the matching lines. PLus at the end takes multilple files as input",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "The file \"files_to_find.txt\" contains a list of filenames, create each file or update its timestamp if it exists.",
      "F_verb": "update",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP if S"
    },
    {
      "task": "Compare files",
      "F_verb": "compare",
      "source": "tl",
      "cate": "compare",
      "pat": "V NP"
    },
    {
      "task": "List local packages and possible updates",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Find all files in the current directory tree which do not belong to any user",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Find all files under current directory without descending into .git directory and replace the match of the regex \\Q$1\\E with \\L$2\\E in those files where $1 and $2 will be expanded in the current shell",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP without S_ING into NP"
    },
    {
      "task": "Find all files/directories under current directory tree that start with 'R' and end with 'VER' in their names and were modified more than 1 day ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Build only the specified test target",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Save the md5 sum of $twofish to variable 'twofish'",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "find regular files under the current directory and execute an md5sum command on each one",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Print fingerprints of all public keys",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Print all file/directory names without white space safety under the /proc directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP without NP under NP"
    },
    {
      "task": "Search for 'Text To Find' in all regular files under current directory tree and show the matched files and matched lines with line numbers",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP under NP"
    },
    {
      "task": "Decompress a file",
      "F_verb": "decompress",
      "reason": "noCate",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "find all the directories in the file system which have read, write and execute to all the users",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V to NP"
    },
    {
      "task": "Find all xml files under current directory and archive them to .bz2 archives",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Check if RBENV is defined in the current tmux session environment",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Trim an audio file to the specified times",
      "F_verb": "trim",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP"
    },
    {
      "task": "Run your_command_here for each file found under /target/path with the file path as argument",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP for NP under NP with NP as NP"
    },
    {
      "task": "Print 'empty' if $some_dir is an empty directory, otherwise print 'not empty'",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Check which package the \"sort\" command belongs to in rpm",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V which S"
    },
    {
      "task": "Transfer file over SSH using a different port than the default and show global progress",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "find all  tools generated files  a.out , *.o and core dump files which not required to us these all junk files & delete from  current  directory .",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "Create a project under the given directory",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP under NP"
    },
    {
      "task": "Count the number of lines that match the given string in a file",
      "F_verb": "count",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP oF NP that S"
    },
    {
      "task": "display a long listing of all the files in the current folder which have been modified in the last 24 hours",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP which S"
    },
    {
      "task": "Disable IP address and host name mapping",
      "F_verb": "disable",
      "source": "tl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP"
    },
    {
      "task": "Get cluster data",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Write \"[some repository]\" to standard output and append to \"/etc/apt/sources.list\" as root",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Show disk quotas in human readable units for the current user",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP for NP"
    },
    {
      "task": "Print IP addresses of the current host",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Print numbers from 1 to 5 without separating spaces",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP to NP without S_ING"
    },
    {
      "task": "Find files whose content was modified at least 1 minute ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP whose S"
    },
    {
      "task": "Output the results in a specific format",
      "F_verb": "output",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Display a specific number of identities",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all files under current directory and print them appending a null character at the end of each file paths",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP at NP of NP"
    },
    {
      "task": "Turn down the master volume by 10%",
      "F_verb": "turn",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V down NP by NP"
    },
    {
      "task": "Find files/directories under /users/tom that matches both the pattern \"*.pl\" and  \"*.pm\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Search the current directory tree for files whose names end in \"rb\" or \"js\" and which contain string \"matchNameHere\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP whose S"
    },
    {
      "task": "Print the content and metadata of a Parquet file",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Update a user's \"Office Phone Number\" field for the output of `finger`",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP for NP of NP"
    },
    {
      "task": "Display \"infile\" as printable characters or backslash escapes",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP as NP"
    },
    {
      "task": "Remove a role",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Remove all files and directories under '/home/foo' directory tree that match with one of the name patterns '.DS_Store', '._.DS_Store' , '._*', '.TemporaryItems' or '.apdisk'",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP that S"
    }
  ],
  "8": [
    {
      "task": "Print all lines from file 'report.txt' containing any-cased 'error' pattern",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP"
    },
    {
      "task": "display all scala files in the directory \"src/main\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all *.old files and move them to directory oldfiles",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Specify column delimiter character for the -t option (e.g. \",\" for csv); default is whitespace",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Generate a case-insensitive regex",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Read \"perf.data\" (created by `perf record`) and display the profile",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Display packages whose support is limited, has already ended or will end earlier than the distribution's end of life",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP whose S"
    },
    {
      "task": "Find all files matching pattern '.#*' in the current directory tree and execute \"foobar\" for each of them with the file name as an argument",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP for NP of NP with NP as NP"
    },
    {
      "task": "Print the lines of file \"strings\" not specified in file \"index\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "search for all C, C++, Header, JavaScript files in the folder /opt/chromium/src and exclude the search in the path \"/.svn\" and save the output list to CSRC.LST",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Keep displaying `stdout` of a process",
      "F_verb": "keep",
      "reason": "noCate",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V S_ING of NP"
    },
    {
      "task": "Print \"$PATH\" variable as input to awk script \"rem_dup.awk\" and concatenate the result with \":\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP as NP to NP"
    },
    {
      "task": "Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes)",
      "F_verb": "split",
      "source": "tl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Find all *.mp3 files under current directory and run mplayer with these files",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP"
    },
    {
      "task": "Start waitress on a Unix socket",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP on NP"
    },
    {
      "task": "Run test without web interface, spawning 1 user a second until there are 100 users",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP without NP"
    },
    {
      "task": "Run functions locally",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Start Redis server with verbose logging",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP with NP"
    },
    {
      "task": "Exclude the specified comma-separated directories",
      "F_verb": "exclude",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "display all directories in the folder Symfony",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Split \"t.txt\" into files with at most 30000000 lines each and use a prefix \"t\" and numeric suffixes of length 2",
      "F_verb": "use",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP"
    },
    {
      "task": "List available if conditions",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Isolate first comma-delimited field of each line in \"file\", discard consecutive duplicates, and search \"file\" for first matching occurrence of that field.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP of NP"
    },
    {
      "task": "Connect to a server and authenticate with a specific SSL client certificate",
      "F_verb": "authenticate",
      "source": "tl",
      "cate": "validate/authenticate",
      "pat": "V with NP"
    },
    {
      "task": "Create a block device",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "find all text files in current folder and trim the extra spaces in all lines in these files ( MAC version )",
      "F_verb": "trim",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Copy a disk to a raw image file, hashing each 1GB chunk",
      "F_verb": "copy",
      "reason": "noCate",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all the files named 'vimrc' anywhere on the system",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP"
    },
    {
      "task": "Extract the contents of \"Input.txt.gz\", list the unique first comma separated field prefixed by the number of occurrences",
      "F_verb": "extract",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Write the shell's input to standard error as it is read",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP as S"
    },
    {
      "task": "List all files in the current directory tree larger than 1000 kb",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Save the current directory as \"bookmark_name\"",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP as NP"
    },
    {
      "task": "Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file1.tar) of the last block of files sent to xargs",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "List \".java\" files that have the same filename and contents",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP that S"
    },
    {
      "task": "Set up a git repo and perform various setup tasks (run from /etc)",
      "F_verb": "perform",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Generate a simple full-stack project (monolithic or microservices)",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Sort and show top 10 processes by memory usage",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP by NP"
    },
    {
      "task": "Display information about all users who are currently logged in",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP who S"
    },
    {
      "task": "Print a unique list of characters from standard input showing backslash escapes for non-displayables",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP from NP for NP"
    },
    {
      "task": "Print the contents of \"Little_Commas.TXT\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all *.jpg files under current directory and print only duplicate names",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "List each unique character in \"file\" prefixed by number of occurrences",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP by NP of NP"
    },
    {
      "task": "Prints total number of lines of all *.php files in a current folder and subfolders.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP of NP in NP"
    },
    {
      "task": "Show information about a remote",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Print a list of all duplicate filenames in the current directory tree if there is no white space in filenames",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP if S"
    },
    {
      "task": "Stop a PostgreSQL server",
      "F_verb": "stop",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP"
    },
    {
      "task": "Display a specified number of decimal digits of Archimedes' constant Pi",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "display all the directories in the folder /var and do not go beyond 2 levels during search",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Search all regular files in the current directory tree for \"example\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP for NP"
    },
    {
      "task": "Change the password of the current user",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP"
    },
    {
      "task": "Enable module \"foo\"",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Find all *.jpg (case-insensitive) files under  maximum 2 levels down the temp/medium/* paths and run `mogrify -resize 428x270\"^\" -quality 80 -compress JPEG -monitor -strip` with the file paths as arguments",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Rename all *.html files under and below the current directory to *.var",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V"
    },
    {
      "task": "List all *.jar files/directories under /usr, /home and /tmp directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "run bash in screen and source a file before printing the prompt",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files under /path/you/need, calculate their md5sums and redirect the results to checksums.md5",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all files under the current directory that are not the same file as \"/home/nez/file.txt\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "change the current working directory to \"A\" and display all the files in that folder and save the output to the file \"tmp.txt\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Search the current directory tree for regular files omitting directory `omit-directory'",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Create a new page",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Change the password of a key",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP"
    },
    {
      "task": "Run a development server",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.",
      "F_verb": "exit",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP if S"
    },
    {
      "task": "Greps DNS zone transfer info on domain localdomain.com from NS @dc1.localdomain.com, finds strings with any-cased word 'Lawler' and strips last letter from each string.",
      "F_verb": "grep",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP into NP from NP"
    },
    {
      "task": "display all directories in vim folder do not search in sub directories",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "find all normal/regular files in current folder which end with \"~\" or which begin and end with \"#\" and and and delete them",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Print each logged in user's username and full name",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them in MB",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP which S"
    },
    {
      "task": "find all the normal/regular files in the folder \"pathfolder\" excluding all hidden files and display the count",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all .java files starting from the current folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP"
    },
    {
      "task": "Counts number of occurences of all ip addresses in 'ip_addresses' file, and prints all addresses with number of occurences in a descending order.",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP of NP in NP"
    },
    {
      "task": "Print \"Hello, world!\"",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Show the contents of a file as it was at a given revision (e.g. branch, tag or commit)",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP as S"
    },
    {
      "task": "Display an ASCII calendar of events by week",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of np"
    },
    {
      "task": "Start or stop the daemon",
      "F_verb": "stop",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP"
    },
    {
      "task": "Open cmus from specified directory",
      "F_verb": "open",
      "reason": "noCate",
      "source": "tl",
      "cate": "open",
      "pat": "V NP from NP"
    },
    {
      "task": "Display a list of available versions",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Show the status of storage volumes",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "display all the files in the current folder which hare in the sub directory trees of the folders which begin with the word \"kt\" followed by a digit",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Find all directories under current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find files that were modified more than 7 days ago but less than 14 days ago and archive them",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP which S"
    },
    {
      "task": "Quit",
      "F_verb": "quit",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V"
    },
    {
      "task": "Remove metadata from a file and print detailed output to the console",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Get the id of the currently active window",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "List all files in a current folder, separating names with comma",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Print the size for every *.ogg file found under the home directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP for NP under NP"
    },
    {
      "task": "Calculate the MD5 checksum for a file",
      "F_verb": "calculate",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP for NP"
    },
    {
      "task": "Find files in the current directory tree whose status was changed within the last 60 minutes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Install a PHP version globally",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Modify and rewrite 'file' replacing the first instance of \"foo\" on each line with \"bar\"",
      "F_verb": "rewrite",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP on NP with NP"
    },
    {
      "task": "Remove all files in the /myfiles directory tree that were accessed at least 30 days ago",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Split \"file.txt\" into files of at most 20 lines each with a prefix \"new\"",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP of NP with NP"
    },
    {
      "task": "Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V in NP in NP that S"
    },
    {
      "task": "search for the file job.hostory in the folder \"/data/Spoolln\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Change permissions of \"/dvtcolorconvert.rb\" to 755",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Search for files which have read and write permission for their owner and group, and which other users can read, without regard to the presence of any extra permission bits",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP which S"
    },
    {
      "task": "Start all containers using an alternate compose file",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP using NP"
    },
    {
      "task": "Find the total size of *.jpg files within the directory tree ./photos/john_doe",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP within NP"
    },
    {
      "task": "Find all .mp3 files with more then 10MB and delete them from root directory .",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "View a data bag",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Play the first 10 seconds of a specific file at 2500Hz",
      "F_verb": "play",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP at NP"
    },
    {
      "task": "Show ignored and untracked files",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Pass a user name and password for server authentication",
      "F_verb": "pass",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP for NP"
    },
    {
      "task": "Change to a particular registry",
      "F_verb": "change",
      "reason": "noVerb",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP"
    },
    {
      "task": "Print variable \"$module\" in formatted columns with at most 80 characters per line",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Find files larger than 100MB in /var/www and exclude files with /download/ in their path from the output",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP in NP from NP"
    },
    {
      "task": "Split \"data.tsv\" into files of at most 100 MiB preserving lines and use a prefix of \"data.tsv.\" and numeric suffixes",
      "F_verb": "use",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP"
    },
    {
      "task": "List all files/directories under current directory and redirect it to /tmp/files.txt",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "Monitor Clockwork logs for multiple projects",
      "F_verb": "monitor",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Print current date as epoch seconds",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP as NP"
    },
    {
      "task": "find all the php files in current folder and search for multiple patterns in these files and display the file names",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Search the current directory tree for files and directories whose names do not end in \"exe\" and \"dll\"",
      "F_verb": "end",
      "source": "nl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V in NP"
    },
    {
      "task": "Search for all *.conf files in entire file system",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Read a single character from standard input and save to variable \"y\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V to NP"
    },
    {
      "task": "Find all links to path/to/file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP to NP"
    },
    {
      "task": "Lock the display and show a padlock instead of the cursor",
      "F_verb": "lock",
      "source": "tl",
      "cate": "lock/seal/relock",
      "pat": "V NP"
    },
    {
      "task": "display all files which have been modified between two dates in current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP which S"
    },
    {
      "task": "Open a new window of the default browser",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP of NP"
    },
    {
      "task": "Display the directory stack with a space between each entry",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Search the current directory tree for all image files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Compress all directories found in directory tree $LOGDIR that have been modified within the last 24 hours",
      "F_verb": "compress",
      "source": "nl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Make `doas` request a password even after it was supplied earlier",
      "F_verb": "make",
      "source": "tl",
      "cate": "make/cause/instruct",
      "pat": "V NP after S"
    },
    {
      "task": "find all the fles that have .ssh in the end and redirect the output to ssh-stuff",
      "F_verb": "redirect",
      "source": "nl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V NP to NP"
    },
    {
      "task": "Decompress \"path/to/test/file.gz\" to standard output and save all lines matching \"my regex\" and not matching \"other regex\" to files with a 1000000 line limit",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP with NP"
    },
    {
      "task": "Remount \"/path/to/chroot/jail/usr/bin\" as read only",
      "F_verb": "remount",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP as NP"
    },
    {
      "task": "Install a new package from the repos and AUR",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP from NP"
    },
    {
      "task": "display the content of all the instances of the file \"lilo.conf\" in the file system and discard any errors in encountered during the search and display) and save the output to the file \"lilo.txt\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP of NP in NP"
    },
    {
      "task": "Download to a given local path by its id",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V to NP by NP"
    },
    {
      "task": "Print the file 'text1;text2;text3' replacing each space(\" \") with a newline",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "Print the grand total disk usage of all files listed in \"files.txt\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Locate packages of interest by the package name, disk set, or version",
      "F_verb": "locate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP by NP"
    },
    {
      "task": "find all the undo files in the current folder and display the toal lines, words, characters",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Analyze the entropy of a binary, saving the plot with the same name as the binary and `.png` extension appended",
      "F_verb": "analyze",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP of NP"
    },
    {
      "task": "Append all .txt files into one file",
      "F_verb": "append",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP into NP"
    },
    {
      "task": "Show the last 10 .conf files found by `find' in the /etc directory",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP by NP in NP"
    },
    {
      "task": "Search for non-empty files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Restore file from trash",
      "F_verb": "restore",
      "source": "tl",
      "cate": "restore/recover/resume",
      "pat": "V NP from NP"
    },
    {
      "task": "Show the parameters and statistics of the specified interface",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Reinitialise the current terminal",
      "F_verb": "reinitialise",
      "reason": "noCate",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP"
    },
    {
      "task": "Download a torrent and output the log to a file",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Print the full name of \"$USER\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Give [a]ll users rights to [r]ead and e[x]ecute",
      "F_verb": "give",
      "source": "tl",
      "cate": "provide/give/supply",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all files/directories named orm.properties under  /eserver6 directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "List *.txt files residing in the current directory tree",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Show quota",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Save the list of files containing string `ExtJSLogin' to files.txt excluding change-app-name.sh",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Set up the server with Laravel dependencies using the default PHP version",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP with NP using NP"
    },
    {
      "task": "Download a resource from multiple sources",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    },
    {
      "task": "Create a symolic link in \"/usr/local/bin/\" to \"/Applications/Sublime\\ Text\\ 2.app/Contents/SharedSupport/bin/subl\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "search for a shell script in the current folder and display the current folder path",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP"
    },
    {
      "task": "Ping an IP address over TCP on a specific port",
      "F_verb": "ping",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP over NP on NP"
    },
    {
      "task": "Find all *.ps files under $STARTDIR and run ps2pdf for each files with the file path as a argument",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP under NP"
    },
    {
      "task": "Detect unused secrets",
      "F_verb": "detect",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Convert filename.pdf to plain text and print it to standard output",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Change the profile",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "display the file name and creation month of top 11 files in the entire file system",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Print a NULL-separated list of all directories of the current directory tree",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Print source of the file system containing $path.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Decompress a file",
      "F_verb": "decompress",
      "reason": "noCate",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "Create `la` as a shortcut for `ls -a`",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP as NP for NP"
    },
    {
      "task": "Change directory to the parent of the real path of the current script",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP of NP of NP"
    },
    {
      "task": "search for the directory \"uploads\" in current folder and change the permission of the folder and all the files to 755",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Represent time string $MOD_DATE as seconds since epoch and save to variable 'MOD_DATE1'",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V to NP"
    },
    {
      "task": "Recursively search for all directories containing \"foo\" (case insensitive) under the current directory, renaming them to replace \"foo\" (case insensitive) with \"Bar\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP under NP"
    },
    {
      "task": "Print lines 10000 to 10010 from input \"seq 1 100000\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP from NP"
    },
    {
      "task": "Replace spaces in file names with underscores for all files in the current directory tree",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP in NP for NP in NP"
    },
    {
      "task": "Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Execute a single SQL query or PostgreSQL command on the given database (useful in shell scripts)",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP"
    },
    {
      "task": "find all the files in the home folder which have been modified in the last 24 hours",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Search file aaa from current direcoty downwards and print it .",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP"
    },
    {
      "task": "Show the environment",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Get hard limit for the number of simultaneously opened files",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP for NP of NP"
    },
    {
      "task": "Install and store frameworks",
      "F_verb": "store",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP"
    },
    {
      "task": "delete all the text files starting with the name \"oldStuff\" in the file system",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Assign permissions 644 to files in the current directory tree",
      "F_verb": "assign",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "Locate binaries that have unusual manual entries (binaries that have more or less than one manual installed)",
      "F_verb": "locate",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Compress a PNG and preserve all metadata (including file timestamps)",
      "F_verb": "compress",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP"
    },
    {
      "task": "Automatically spell check file \"text.txt\" using \"ispell\" command and log the output to \"out.txt\"",
      "F_verb": "log",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Calculate the md5 sum of the contents of \"$FILES\"",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Find all files in the current directory tree whose names are \"file_name\", except for those with pathnames matching pattern \"./dirt to be Excluded/*\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Display (almost) all errors and warnings",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "find all the files that have been modified exactly yesterday (from 00:00 to 23:59 yesterday)",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Compare files \"A1\" and \"A2\" with 3 lines of unified context and print lines beginning with \"+\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "Grab the output of \"basename\" (the last slash-separated section of variable \"filename\") and echo it to stdout, which basename would do by default anyway.",
      "F_verb": "grab",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Enable service at boot for runlevels 2, 3, 4, and 5",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP at NP for NP"
    },
    {
      "task": "show all the regular files in current folder",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all *.txt files/directories under current directory and execute process for each of them",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP for NP of NP"
    },
    {
      "task": "Modify ACL of a file for user with read and write access",
      "F_verb": "modify",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP of NP for NP"
    },
    {
      "task": "Find files bigger than 20 megabytes in the home directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all *.py files under current directory and search for regular expressions taken from the search_terms.txt file",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP from NP"
    },
    {
      "task": "Perform a dry run to wakup the computer at a given time. (Press Ctrl + C to abort)",
      "F_verb": "perform",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP S_INF at NP"
    },
    {
      "task": "Search the regular files from directory tree 'folder_name' for \"your_text\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP for NP"
    },
    {
      "task": "Set the number of columns",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP"
    },
    {
      "task": "Enable source packages",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP down NP that S"
    },
    {
      "task": "Print group memberships for a specific user",
      "F_verb": "print",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP for NP"
    },
    {
      "task": "Create a seed file with the specified name to populate the database",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP S_INF"
    },
    {
      "task": "Remove files whose names match regular expression '^.*/[A-Za-z]+-[0-9]+x[0-9]+\\.[A-Za-z]+$' from the current directory tree",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP whose S"
    },
    {
      "task": "Compile and package the compiled code in its distributable format, such as a `jar`",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP in NP as NP"
    },
    {
      "task": "search for all the regular files in the current folder and display the contents",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Change directory to parent directory and do not resolve any symlinks in the resulting path",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Redirect the current process's standard error to standard out and write to console and append to \"$HOME/logfile\"",
      "F_verb": "redirect",
      "source": "nl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V NP to NP"
    },
    {
      "task": "Change directory to the basename of \"$1\" with \".tar.gz\" removed",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP of NP"
    },
    {
      "task": "Search for 'string-to-find' in all files under current directory tree and show the matched lines with their filenames",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP under NP"
    },
    {
      "task": "Print total size of file systems in kilobytes.",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Search history for \"part_of_the_command_i_still_remember_here\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Add a package as a dependency for this project, adding it to `composer.json`",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Output an HTML file, with additional formatter options (full page, with line numbers)",
      "F_verb": "output",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "Build a site to the `./public/` directory",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP to NP"
    },
    {
      "task": "Print the file type of the full path of \"rename\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Search a single directory",
      "F_verb": "search",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Call a specific target, executing 4 jobs at a time in parallel",
      "F_verb": "call",
      "source": "tl",
      "cate": "call/invoke/indicate/occur",
      "pat": "V NP at NP in NP"
    },
    {
      "task": "find all .bak files in or below the current directory and move them to ~/.old.files directory:",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP to NP"
    },
    {
      "task": "Display all volume groups",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Remove empty folder, and skip error message if one is not empty.",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Read JPEG image from a file and print in ASCII",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V in NP"
    },
    {
      "task": "find all the core files in the temp folder and force delete them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "display all executable files in the folder /home",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Disable the VGA1 output",
      "F_verb": "disable",
      "source": "tl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP"
    },
    {
      "task": "Find files/directories named 'foo' under current directory tree without descending into directories named 'foo'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP without S_ING into NP"
    },
    {
      "task": "Split \"randn20M.csv\" into files of at most 5000000 lines each with prefix \"_tmp\"",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP of NP with NP"
    },
    {
      "task": "Make directory \"foo\"",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP"
    },
    {
      "task": "Delete all regular files named 'FindCommandExamples.txt' under current directory tree",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP"
    },
    {
      "task": "display all regular/normal files in the entire file system with the name dummy and discard all the errors",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Write output of \"yourcommand\" to standard output and to \"output.txt\"",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "display all the regular/normal files in current folder which have been modified exactly 60 minutes before",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "display all files in the folder /usr/src excluding those ending with \",v\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Print the appointments and events for the current day and exit",
      "F_verb": "exit",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V"
    },
    {
      "task": "Find all regular files with '.r' and '.c' in their names under current directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP in NP under NP"
    },
    {
      "task": "List verbose information about USB devices",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP about NP"
    },
    {
      "task": "Get the parent pid of a process",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Find filesystems with specific label",
      "F_verb": "find",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Find directories in the current directory tree whose names are 33 characters in length",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Execute \"generate_commands\" and run the resulting commands in the current shell.",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Check the style of multiple files",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP"
    },
    {
      "task": "Search a file for a specified string",
      "F_verb": "search",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Update a device to use the latest firmware via serial",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP S_INF via NP"
    },
    {
      "task": "Destroy existing repo and stop tracking changes",
      "F_verb": "stop",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP"
    },
    {
      "task": "Show a report of time logs and notes for all working days on record",
      "F_verb": "record",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V"
    },
    {
      "task": "List the full path of each directory in the current working directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "display all files in current folder which have been modified in the last 60 minutes",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Rebuild and test with `make` if any `.c` source files in the current directory change",
      "F_verb": "rebuild",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP if S"
    },
    {
      "task": "copy all files which do not have execute permission to another folder",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP which S"
    },
    {
      "task": "Print the output of a command to the default printer (see `lpstat` command)",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Finds recursively and following symlinks from root folder all files that contain \"text-to-find-here\" and prints files names.",
      "F_verb": "contain",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Read from an input capture file and filter by IP",
      "F_verb": "filter",
      "source": "tl",
      "cate": "filter",
      "pat": "V by NP"
    },
    {
      "task": "Print a list of differing files",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "find for the word \"dba_2pc_pending\" in all the files of current fodler having the word \"sql\" in their name",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP of NP"
    },
    {
      "task": "Remove the last 2 tab-separated fields of each line in file pointed to by filename",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "find all the symbolic links in the current folder and follow to the original file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Save iptables configuration of a given table to a file",
      "F_verb": "save",
      "reason": "noCate",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Find all regular files in the current directory tree, except GIT files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "View the queue",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Enable compression on a filesystem",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP on NP"
    },
    {
      "task": "Only output the first 5 entries of the result",
      "F_verb": "output",
      "reason": "noCate",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Display all files in the current directory tree that match \"*foo\"",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Generate ASCII art for a given text",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP for NP"
    },
    {
      "task": "Initialise and configure the Blackfire client",
      "F_verb": "configure",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Take an image of a device, creating a log file",
      "F_verb": "take",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "display all the log files in the folder /var/log, print0 is used to handle files with only spaces in their names or which have newlines in their names and discard all the errors",
      "F_verb": "discard",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Take a screenshot of a web page in headless mode",
      "F_verb": "take",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "check readline bindings for \"\\x61\"",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP for NP"
    },
    {
      "task": "search for all the text files in the folder /home/calvin/ and save the output to  /tmp/search.log",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Compare 2 images using a custom metric",
      "F_verb": "compare",
      "source": "tl",
      "cate": "compare",
      "pat": "V NP using NP"
    },
    {
      "task": "List all files named \"filename\" from the current directory tree, ignoring directory \"FOLDER1\"",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP from NP"
    },
    {
      "task": "display all the files in the folder /home which have the setuid bit enabled",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Save the user name of the current user to variable \"x\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Send one ping request to host whose name or IP address is specified by variable \"ip\", using network interface eth9.",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP whose S"
    },
    {
      "task": "Compress every file in the current directory that matches \"*cache.html\" and keep the original file",
      "F_verb": "keep",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP"
    },
    {
      "task": "Measure the disk space taken up by all *.txt files in the current directory tree",
      "F_verb": "measure",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP by NP in NP"
    },
    {
      "task": "List all files and directories in long list format with a time style of \"long-iso\" and sort from oldest modifed to newest modified",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "search for all the regular/normal files ending with sdw or sdc or sdd in the current folder and save the output to list_1 file",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP with NP in NP"
    },
    {
      "task": "Count the *.html files residing in the /usr/src directory tree and containing string \"foo\"",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP in NP"
    },
    {
      "task": "Let a steam locomotive run through your terminal",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V through NP"
    },
    {
      "task": "Delete all files/directories named 'sample' (case insensitive) under '/home/user/Series/' directory tree as super user",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP as NP"
    },
    {
      "task": "Find all files/directories with '.log' extension whose names start with 'app-', have been modified in the last 5 minutes and show the first one found",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP whose S"
    },
    {
      "task": "Build using verbose output",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V using NP"
    },
    {
      "task": "Calculate md5 sum of the md5 sum of all the sorted files under $path",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP of NP under NP"
    },
    {
      "task": "Print only strings from file 'file2' that not found in 'file1'",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP that S"
    },
    {
      "task": "Find all directories under current directory tree that were modified $FTIME days ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Find all *.md files in entire file system and convert them to HTML (*.md.html) files",
      "F_verb": "convert",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Recursively changes group ownership of everything within a current folder and having group 'X_GNAME' to 'Y_GNAME'.",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP to NP"
    },
    {
      "task": "Run a Crystal file",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Check user quotas",
      "F_verb": "check",
      "reason": "noVerb",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Calculate the md5 sum of every \".py\" file in directory tree \"/path\"",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Find all files under current directory and print only the filenames (not paths)",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Copy %PATH% variable on Windows to clipboard",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP on NP to NP"
    },
    {
      "task": "Bind mount \"/original/path\" on \"/new/path\"",
      "F_verb": "bind",
      "source": "nl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V NP on NP"
    },
    {
      "task": "find file named foo.txt under root / directory.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Display the routing table",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Perform a case insensitive search for *filename* files/directories under current directory tree",
      "F_verb": "perform",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP for NP under NP"
    },
    {
      "task": "Synchronize current branch, automatically merging or rebasing, and stashing and unstashing",
      "F_verb": "synchronize",
      "reason": "noCate",
      "source": "tl",
      "cate": "synchronize/sync/synchronise",
      "pat": "V NP"
    },
    {
      "task": "Start an Android emulator device",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Find files in the current directory whose names begin with \"file\" and remove them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Find files/directories that have not been modified in the last one day in directories or files taken from the glob pattern '/tmp/test/*'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "display the version of find",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "list all files under the current directory called cookies.txt",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "Start a session that remembers history",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP that S"
    },
    {
      "task": "Save the canonical path of \"$dir/$file\" in variable \"path\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Run a command and save the output to separate files",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Interactively ask for confirmation before termination",
      "F_verb": "ask",
      "source": "tl",
      "cate": "request/ask/allow",
      "pat": "V for NP before NP"
    },
    {
      "task": "Don't show informative messages",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Remove a package",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "return every file that does not have bar somewhere in its full pathname",
      "F_verb": "return",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP that S"
    },
    {
      "task": "List images matching a string. Omit the string to list all images",
      "F_verb": "list",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Delete a file",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Synchronize all packages",
      "F_verb": "synchronize",
      "reason": "noCate",
      "source": "tl",
      "cate": "synchronize/sync/synchronise",
      "pat": "V NP"
    },
    {
      "task": "display the count of all the directories in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Start finder on entries that not match pyc and match exactly travis",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP on NP that S`"
    },
    {
      "task": "Make directories and parents for each line in \"infile\" excluding the file name",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP for NP in NP"
    },
    {
      "task": "Commit a specific file or directory",
      "F_verb": "commit",
      "source": "tl",
      "cate": "commit/submit/upload",
      "pat": "V NP"
    },
    {
      "task": "Find all files in the current directory tree whose names begin with '-'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Add a package to the project",
      "F_verb": "add",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "List all files except for those in directory SCCS",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP for NP in NP"
    },
    {
      "task": "Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' that were modified within the last day (day counted from today)",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP from NP that S"
    },
    {
      "task": "Find .rm files in the /home/me/download/ directory tree and convert them to the MP3 format",
      "F_verb": "convert",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Search the current directory up to depth level 2 for files and directories",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP to NP for NP"
    },
    {
      "task": "Run an installed application",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Find files in the current directory tree that were accessed within the last 60 minutes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Prints git log message with a custom time format string",
      "F_verb": "log",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "Build and run Caddy for a development plugin using a specific Caddy config",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP for NP using NP"
    },
    {
      "task": "Convert \"1199092913\" to dotted decimal IPv4 address",
      "F_verb": "convert",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Remove all regular files under and below directory \"$DIR\" that were last accessed more than 5 days ago",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Translate a word into french",
      "F_verb": "translate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP into NP"
    },
    {
      "task": "Disable a given swap partition",
      "F_verb": "disable",
      "source": "tl",
      "cate": "close/end/release/free/dismiss/deactivate/disable",
      "pat": "V NP"
    },
    {
      "task": "Display a message with a custom foreground color",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP with NP"
    },
    {
      "task": "Continuously send \"ok\" plus newline to the program \"recalcitrant.php\"",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP"
    },
    {
      "task": "Count md5sum of all '*.py' files in a current folder with subfolders.",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP in NP with NP"
    },
    {
      "task": "Find all *.foo files under current directory and print their contents",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Download helm chart as a tar archive",
      "F_verb": "download",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP as NP"
    },
    {
      "task": "find case-insentive example.com file, and whole dose not contain beta",
      "F_verb": "contain",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Login [a]sking which role to use (in case of several available SAML roles)",
      "F_verb": "login",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP which S"
    },
    {
      "task": "Build the site for production",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP for NP"
    },
    {
      "task": "Switch to a branch and automatically merge the current branch and any uncommitted changes into it",
      "F_verb": "merge",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP into NP"
    },
    {
      "task": "Check the status of an instance",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP of NP"
    },
    {
      "task": "Boot QEMU instance with a live ISO image",
      "F_verb": "boot",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP with NP"
    },
    {
      "task": "Search for files specifying the maximum depth of the search",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP of NP"
    },
    {
      "task": "Convert a `.py` file to a notebook with no outputs",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP with NP"
    },
    {
      "task": "Start interactive command line interpreter",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Uses the time utility to report only real execution time of 'ls' command.",
      "F_verb": "report",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP of NP"
    },
    {
      "task": "Clone a local repository",
      "F_verb": "clone",
      "reason": "noVerb",
      "source": "tl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP"
    },
    {
      "task": "Find out all *.sh owned by user vivek",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V out NP by NP"
    },
    {
      "task": "Find all *shp* directories under current directory and move '*' (literal) file/directory inside those directories to shp_all",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all .txt files in the dir/ directory tree and copy them along with times, permissions, and ownership to dir_txt/",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP with NP"
    },
    {
      "task": "Print 'cp' commands that would copy a file xyz.c to all the files with '.c' extension present in the ./C directory and below",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP that S"
    },
    {
      "task": "Automatically log into \"SOME_SITE.COM\" as user \"YOUR_USERNAME\" using password \"YOUR_PASSWORD\"",
      "F_verb": "log",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V into NP as NP using NP"
    },
    {
      "task": "Encrypt a file",
      "F_verb": "encrypt",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP"
    },
    {
      "task": "Convert file to a specific encoding, and print to `stdout`",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "See all pages in section 3.",
      "F_verb": "see",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP upto NP under NP"
    },
    {
      "task": "If possible, subtract a given number of units from the returned value",
      "F_verb": "subtract",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Use a specific username when connecting to the remote host",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP when S"
    },
    {
      "task": "Analyze nginx configuration with the specific severity level",
      "F_verb": "analyze",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP with NP"
    },
    {
      "task": "Invoke `moro` without parameters, to set the current time as the start of the working day",
      "F_verb": "invoke",
      "source": "tl",
      "cate": "call/invoke/indicate/occur",
      "pat": "V NP without NP S_INF as NP"
    },
    {
      "task": "Delete all empty directories in minimum 2 levels down the root directory",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Show help for a given command",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "List partitions",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Compare each C header file in or below the current directory with file /tmp/master",
      "F_verb": "compare",
      "source": "nl",
      "cate": "compare",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Connect to port 1234 of specified IP address or hostname as ssh user \"user\", and copy all visible files in /var/www/mywebsite/dumps/ on this host to local directory /myNewPathOnCurrentLocalMachine - this directory must already exist on local host.",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP in NP on NP to NP"
    },
    {
      "task": "Split a file at line 5 and use a custom prefix for the output files",
      "F_verb": "use",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP for NP"
    },
    {
      "task": "Create intermediate directories \"b and \"c\" as required and directory \"c\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP as NP"
    },
    {
      "task": "Find files not matching shell pattern '*/vendor/*'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Check the Pi-hole daemon's status",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP"
    },
    {
      "task": "Delete all files in the /myDir directory tree that were last modfied 7 days ago",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Display help options for the generate command",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "find all the php files in the current folder (discards any directory which has an extension of \".php\")",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Specify comma-separated file extensions to include when sniffing",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF when S_ING"
    },
    {
      "task": "Search the current directory for *rc.conf files and grant \"other\" users read permission",
      "F_verb": "grant",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP"
    },
    {
      "task": "Remove trailing white spaces from all files under dir directory and keep backups of the originals",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP under NP"
    },
    {
      "task": "Run without performing download tests",
      "F_verb": "run",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V without S_ING"
    },
    {
      "task": "Start imerge-based rebase (checkout the branch to be rebased, first)",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Print common lines in sorted files \"ignore.txt\" and \"input.txt\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Compile current directory for a particular operating system",
      "F_verb": "compile",
      "source": "tl",
      "cate": "compile/assemble",
      "pat": "V NP for NP"
    },
    {
      "task": "find all the text files in  the current folder and do not search in somedir, bin directories",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP"
    },
    {
      "task": "Find all files/directories which have been modified from the start of the day in directories/files taken from the glob pattern '/tmp/test/*'",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP which S"
    },
    {
      "task": "Find movies over a gigabyte in size",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP over NP"
    },
    {
      "task": "Find all files/directories under current directory without descending into './bookshop/mediaimg', '*/CVS*', './files', './images/cms', './internal', './limesurvey171plus_build5638' and './gallery2' paths, then run cvs command with 'status' and each path as arguments and redirect the output to output.txt fle",
      "F_verb": "redirect",
      "source": "nl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V NP to NP"
    },
    {
      "task": "List all known package types that can be installed",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP that S"
    },
    {
      "task": "find all files in the current directory excluding those that end with .js or have the words .min or console in their name",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Find files matching an exact set of permissions",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP"
    },
    {
      "task": "Search for $SEARCH in all regular files under $DIR directory tree and display the number of bytes of the matched output",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Find files/directories in entire file system that had their meta information changed more than 3 days ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'",
      "F_verb": "extract",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    }
  ],
  "9": [
    {
      "task": "Execute a java .class file that contains a main method by using just the class name",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP that S"
    },
    {
      "task": "Display the size of an ISO file divided by a given number (only usable when --sectors is not given)",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP by NP"
    },
    {
      "task": "Display informations for a specific package",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "Find all .c and .h files in the current directory tree and search them for \"expr\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Calculate the md5sum of each \".py\" file under \"/path/to/dir/\", sort the output, and calculate the md5sum of that",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP under NP"
    },
    {
      "task": "Use auto prompt to help with a command",
      "F_verb": "use",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP S_INF with NP"
    },
    {
      "task": "List screen IDs",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Show logs for an app",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP"
    },
    {
      "task": "List all files/directories under current directory by replacing all spaces with commas (,)",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP by S_ING with NP"
    },
    {
      "task": "Determine if user \"$USER\" is logged in",
      "F_verb": "determine",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Make directory \"/tmp/imaginary/\" on remote host before archiving \"file\" to \"user@remote:/tmp/imaginary/\"",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP on NP before S_ING"
    },
    {
      "task": "Print the libraries in the cache and check whether a given library is present",
      "F_verb": "print",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP"
    },
    {
      "task": "Find and list all files on your current directory and show a few lines of output from the beginning",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP from NP"
    },
    {
      "task": "Signal the operating system to pause a program until a SIGCONT (\"continue\") signal is received",
      "F_verb": "signal",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP S_INF until S"
    },
    {
      "task": "Print the last file extension from standard input",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP"
    },
    {
      "task": "Show only heads references",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Update timestamps of all files and directories under current directory.",
      "F_verb": "update",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP of NP under NP"
    },
    {
      "task": "Shows strings that NOT match regex '^($|\\s*#|\\s*[[:alnum:]_]+=)'",
      "F_verb": "match",
      "source": "nl",
      "cate": "match",
      "pat": "V NP"
    },
    {
      "task": "Print the file size and directory size in human readable format of the current directory tree 2 levels deep",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP of NP"
    },
    {
      "task": "Find all files with the extension jpg regardless of case",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP of NP"
    },
    {
      "task": "Display the current date as a Unix timestamp (seconds since the Unix epoch)",
      "F_verb": "display",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP as NP"
    },
    {
      "task": "Upgrade installed packages to newest available versions",
      "F_verb": "upgrade",
      "reason": "noCate",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP to NP"
    },
    {
      "task": "display the html, javascript and text files in the current folder (print0 is used to preserve the filenames of all the files which have newlines in their names)",
      "F_verb": "preserve",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP which S"
    },
    {
      "task": "Set variable \"extract_dir\" to list of top-level directories and files contained in tar archive specified by variable FILE.",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP S_INF"
    },
    {
      "task": "Generate a man page for an executable",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP for NP"
    },
    {
      "task": "Set permissions to 755 for every subdirectory of the current directory",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP for NP"
    },
    {
      "task": "Dump \"testscript.sh\" as 2 byte hexadecimale, printable characters, and octal values",
      "F_verb": "dump",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP as NP"
    },
    {
      "task": "display all the regular files in the current folder that are exactly 10KB",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP that S"
    },
    {
      "task": "find all the directories in the $LOGDIR folder which have been modified in the last 24 hours and compress them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "set alias \"c1\" for command \"awk '{print \\$1}'\"",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Print unique lines of sorted file \"a\" compared with sorted file \"b\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP with NP"
    },
    {
      "task": "Create a bridged network with Internet sharing and a pre-configured bridge interface",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP with NP"
    },
    {
      "task": "Run a web extension from a specific directory in Firefox",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP in NP"
    },
    {
      "task": "Execute a Scheme expression",
      "F_verb": "execute",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Search $MYGROUP in /etc/group, take the 4th colon (':') separated field, replace comma (',') with newline and save the result to variable 'MYUSERS'",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Get a file or directory",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP"
    },
    {
      "task": "Create a symbolic link named \"temp\" to \"newtarget\"",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP to NP"
    },
    {
      "task": "run command \"cd /home/$USERNAME/$PROJECT; svn update\" with a shell as user username2",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP as NP"
    },
    {
      "task": "Disable IP address and host name mapping",
      "F_verb": "host",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "Find all *.* files not within .git directory and run $SED_CMD -i \"s/$1/$2/g\" on each of them",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP of NP"
    },
    {
      "task": "Find all directories under /var/www directory and set their permission to 755",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "Print pathname of a file that is connected to the standard output of the command \"yes\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP that S"
    },
    {
      "task": "Calculate the md5 sum of the output of \"du -csxb /path\" and compare it against the md5 sum saved in \"file\"",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Flush all pending write operations on all disks",
      "F_verb": "flush",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP on NP"
    },
    {
      "task": "Start syncthing without opening a web browser",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP without S_ING"
    },
    {
      "task": "Upgrade installed packages (like `upgrade`), but remove obsolete packages and install additional packages to meet new dependencies",
      "F_verb": "upgrade",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "Write every two lines in \"infile\" on a single line separated by a comma",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP on NP by NP"
    },
    {
      "task": "Resolve the full path of each executable",
      "F_verb": "resolve",
      "source": "tl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP of NP"
    },
    {
      "task": "Search the current directory tree for regular files owned by user \"www\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP by NP"
    },
    {
      "task": "Create a bower.json file for your package",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP for NP"
    },
    {
      "task": "Cleanup temporary/old files",
      "F_verb": "cleanup",
      "reason": "noCate",
      "source": "tl",
      "cate": "clear/clean/empty/eliminate/unpin/cleanup/unpublish",
      "pat": "V NP"
    },
    {
      "task": "Initialise a new repository in the current directory",
      "F_verb": "initialise",
      "reason": "noCate",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP in NP"
    },
    {
      "task": "Change shell",
      "F_verb": "change",
      "reason": "noVerb",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "Submit a script with default settings (depends on TORQUE settings)",
      "F_verb": "submit",
      "source": "tl",
      "cate": "commit/submit/upload",
      "pat": "V NP with NP"
    },
    {
      "task": "Concatenate with a space every other line in \"input.txt\"",
      "F_verb": "concatenate",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP in NP"
    },
    {
      "task": "Scale an image by 75% and overwrite the source image to a target resolution",
      "F_verb": "scale",
      "reason": "noCate",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP by NP"
    },
    {
      "task": "unsafed rm all file which name start with '#'",
      "F_verb": "start",
      "source": "nl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V with NP"
    },
    {
      "task": "Open a webpage in the default browser as scrapy sees it (disable javascript for extra fidelity)",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP in NP as NP"
    },
    {
      "task": "Show the number of lines for each PHP file in the current directory tree",
      "F_verb": "show",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP for NP in NP"
    },
    {
      "task": "View the recent activity feed of a given GitHub repository",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Create a new package",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "find all the files that have been modified in the last 4 days ( daystart is used to check files according to date i.e, all files modified from currentDay-4 00:00:00 to current day) and copy them to folder.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "display list of all the hidden files in the folder $HOME/projects/ and save the output to the file foo.txt",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Copy a comlex directory tree from one machine o another while preserving copy permissions and ownership",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP"
    },
    {
      "task": "Display system-wide real time performance counter profile",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "find all the \"error_log\" files in the folder \"/home\" which are bigger than 5MB and force delete them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "search for the ip \"192.168.1.5\" in all the files in /etc folder",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP in NP"
    },
    {
      "task": "Find all *.jpg files and copy them to /",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Generate tags for a single file, and output them to a file named \"tags\" in the current directory, overwriting the file if it exists",
      "F_verb": "output",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "Change the address upon which the web interface listens",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP which S"
    },
    {
      "task": "Unzip \"file.gz\", list the unique lines matching regex pattern '\"searchstring\":\"[^\"]*\"' prefixed by the number of occurrences, sort from least frequent to most frequent",
      "F_verb": "unzip",
      "source": "nl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP"
    },
    {
      "task": "display all files in the current directory excluding those that are present in the directories whose name starts with \"efence\" and do not search in the sub directories",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V in NP"
    },
    {
      "task": "Make regular files from debian/fglrx-amdcccle/usr/lib/fglrx/bin/ executable for all",
      "F_verb": "make",
      "source": "nl",
      "cate": "make/cause/instruct",
      "pat": "V NP from NP for NP"
    },
    {
      "task": "Find all regular files in the current directory tree that are not readable by all",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Authenticate the CLI client against the Vault server, using an authentication token",
      "F_verb": "authenticate",
      "source": "tl",
      "cate": "validate/authenticate",
      "pat": "V NP using NP"
    },
    {
      "task": "Replace all occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in all regular files under '/home/www' directory tree",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP of NP with NP in NP under NP"
    },
    {
      "task": "Show scriptlets from an RPM file",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP from NP"
    },
    {
      "task": "Send message to \"testuser\" on terminal \"/dev/tty/5\"",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP on NP"
    },
    {
      "task": "List available diff tools",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Show status of a particular job",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Prints string \"0 1 * * * /root/test.sh\" to the terminal, and append it to file '/var/spool/cron/root'",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP"
    },
    {
      "task": "Read text from `stdin`",
      "F_verb": "read",
      "source": "tl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP"
    },
    {
      "task": "Show available CPU frequency policies",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "List currently connected devices and their statistics",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "List environment variables whose name contains \"X\"",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP whose S"
    },
    {
      "task": "List all hardwares in tabular format",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP"
    },
    {
      "task": "Notify of job termination immediately",
      "F_verb": "notify",
      "source": "tl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V of NP"
    },
    {
      "task": "Force create a symbolic link to \"$f\" in \"~/my-existing-links/\" with name the basename of \"$f\"",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP in NP with NP of NP"
    },
    {
      "task": "Search and list packages from Hackage",
      "F_verb": "search",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP"
    },
    {
      "task": "Open a LUKS volume and create a decrypted mapping at /dev/mapper/{{target}}",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP at NP"
    },
    {
      "task": "Search for all the directories named 'm?' under current directory tree, add the extension \".mbox\" to all, create a 'Messages' directories inside them and move all files with .emlx extension to 'Messages' directory",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP under NP"
    },
    {
      "task": "Find all files larger than 20000k and print their names and sizes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Find & calculate total number of worlds in all .txt file from current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP of NP in NP from NP"
    },
    {
      "task": "display the change owner command for all the regular files in the current folder.",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP for NP in NP"
    },
    {
      "task": "Find files with pattern \"*[!0-9][1-9].txt\"  and execute chmod and ls command with AND condition then sort the output",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP"
    },
    {
      "task": "Find all *.m4a files under /home/family/Music directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "search the pattern ^PyErr in all the \".c\" files in the folder Lib/",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Reboot immediately",
      "F_verb": "reboot",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V"
    },
    {
      "task": "Search the current directory recursively for MOV files",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Open executable file for command \"rails\" in text editor \"mate\"",
      "F_verb": "open",
      "source": "nl",
      "cate": "open",
      "pat": "V NP for NP in NP"
    },
    {
      "task": "set variable \"uname_m\" to machine architecture, ie. x86_64",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP"
    },
    {
      "task": "Create ssh tunnel through \"genja.org\" connecting localhost port 4444 to \"raptor.lan\" port 22",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP through NP to NP"
    },
    {
      "task": "Extract an archive with user-defined output path",
      "F_verb": "extract",
      "reason": "noVerb",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP with NP"
    },
    {
      "task": "Calculate the sha1 sum and md5 sum of \"foo\"",
      "F_verb": "calculate",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP of NP"
    },
    {
      "task": "Check if you are logged in",
      "F_verb": "check",
      "reason": "noCate",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Initialize a new module in the current directory",
      "F_verb": "initialize",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP in NP"
    },
    {
      "task": "List all available generators",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "update the permission of all the files in the folder /u/netinst to 500",
      "F_verb": "update",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP of NP in NP to NP"
    },
    {
      "task": "find all the \".flac\" files in the current folder and create a sub shell and convert these to mp3 with 128k bit rate",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"
    },
    {
      "task": "Show information about a given commit",
      "F_verb": "show",
      "source": "tl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "search for all xml files in current folder and display them",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Choose a language standard to compile for(C++98/C++11/C++14/C++17)",
      "F_verb": "choose",
      "source": "tl",
      "cate": "choose/select",
      "pat": "V NP S_INF"
    },
    {
      "task": "change the permissions of all the files ending with \"fits\" in the folder \"/store/01\"",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP of NP with NP in NP"
    },
    {
      "task": "Display the last dot-separated field, in this case \"com\".",
      "F_verb": "display",
      "source": "nl",
      "cate": "play/unpause/display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Create a xar archive of all files in a given directory",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Remove files under /mnt/zip matching \"*prets copy\" with confirmation",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP under NP with NP"
    },
    {
      "task": "List dead nodes and the reasons why",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Also list empty devices",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Find all regular .abc files under and below /the/path and rename them prefixing their names with \"version_1\"",
      "F_verb": "rename",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP with NP"
    },
    {
      "task": "Resolve symbolic link of file \"/foo/bar/baz\"",
      "F_verb": "resolve",
      "source": "nl",
      "cate": "parse/resolve/unwrap/analyze/uncompress/decode/flatten/unmarshal/decompress/unzip/analyse/decrypt/unpack/decompile/disassemble/summarise/rank",
      "pat": "V NP of NP"
    },
    {
      "task": "change the word \"GHBAG\" to \"stream-agg\" in all the file names in current folder which have the word \"-GHBAG-\" in their name",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP in NP in NP which S"
    },
    {
      "task": "Determine the user associated with stdin",
      "F_verb": "determine",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP with NP"
    },
    {
      "task": "Find all files in the current directory tree containing \"foo\" in their names",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "find all the normal/regular files in the current folder which have been modified two days ago and display a long listing of them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Find all directories containing 'linux' in their names under '/root' directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP under NP"
    },
    {
      "task": "View an XLSX or CSV file, using the first row as table headers",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP using NP as NP"
    },
    {
      "task": "Save the first word of the first difference in \".dir_list_2\" compared to \".dir_list_1\" into variable \"extract_dir\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP in NP to NP into NP"
    },
    {
      "task": "Delete a function",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "display all the directories in the folder /usr/share",
      "F_verb": "display",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Save the number of bytes in \"$file\" after decompression into variable \"size\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP in NP after NP into NP"
    },
    {
      "task": "Upload multiple files (glob expression)",
      "F_verb": "upload",
      "reason": "noCate",
      "source": "tl",
      "cate": "commit/submit/upload",
      "pat": "V NP"
    },
    {
      "task": "Change default display to show more details",
      "F_verb": "change",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP S_INF"
    },
    {
      "task": "set MyVariable to the value of VARIABLE_NAME",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP of NP"
    },
    {
      "task": "Find all files under $d directory and set read-write permission for owner and group and no permission for other for those files",
      "F_verb": "find",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP under NP"
    },
    {
      "task": "display the files modified between last 18 to 24 months in the format filename, file size, Last access date, modification date and save the output to the file /dir/dir/output.csv",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Use a custom icon, should be a PNG",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Create an encrypted archive (user will be prompted for a password)",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP"////括号内不能视作句子的一个部分
    },
    {
      "task": "Get current directory name without full path, ie. the part after the last /",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP without NP after NP"
    },
    {
      "task": "Set permissions to 644 for all regular files under the current directory tree that have permissions 755",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP to NP for NP under NP that S"
    },
    {
      "task": "Find all files/directories named file in 2 and 3 levels down the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP down NP"
    },
    {
      "task": "Delete a key-value pair",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Get the list of supported encryption algorithms and modes",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Find all files on the system that have been modified in the last 10 minutes",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP on NP that S"
    },
    {
      "task": "List tracked files that have been commited",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP that S"
    },
    {
      "task": "find all the empty directories in the current folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Attach `lldb` to a running process with a given PID",
      "F_verb": "attach",
      "source": "tl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V NP to NP with NP"
    },
    {
      "task": "list txt files older than 5 days or html files of any age, null separated",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP"
    },
    {
      "task": "find all regular/normal files in the folder \"myfiles\" which have read and write permission to the other users",
      "F_verb": "write",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Display the function name, filename and line number",
      "F_verb": "display",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Show page faults and memory utilization",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "display all the text files and pdf files in the current folder",
      "F_verb": "display",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "List the contents of a tar file",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP"
    },
    {
      "task": "Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP"
    },
    {
      "task": "Print the full real path of \"/dev/disk/by-uuid/$1\" followed by \"is mounted\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP by NP"
    },
    {
      "task": "Find all .rb and .yml files in the /some/path directory tree and replace \"some_phrase\" with \"replacement_phrase\" in them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP in NP"
    },
    {
      "task": "Find all files/directories under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "Run commands from a file",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP"
    },
    {
      "task": "Include libraries from a different path",
      "F_verb": "include",
      "reason": "noCate",
      "source": "tl",
      "cate": "import/include",
      "pat": "V NP from NP"
    },
    {
      "task": "Remove adjascent duplicate lines from file 'input' comparing all but last space-separated fields",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Login",
      "F_verb": "login",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V"
    },
    {
      "task": "Search the /root directory recursively for the regular file named \"myfile\" ignoring \"work\" directories",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Render a man page into an HTML file",
      "F_verb": "render",
      "source": "tl",
      "cate": "draw/render/paint/redraw/plot",
      "pat": "V NP into NP"
    },
    {
      "task": "Print sub domains of \"mydomain.com\"",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "List all files in the /var directory tree whose size is greater than 10 megabytes",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "List processes",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Long format list with size displayed using human readable units (KB, MB, GB)",
      "F_verb": "format",
      "reason": "noCate",
      "source": "tl",
      "cate": "format",
      "pat": "V NP with NP using NP"
    },
    {
      "task": "find all the pdf files in current folder and create a tar ball of all these files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP to NP in NP of NP"
    },
    {
      "task": "Append \" | COUNTRY\" to every line in \"file\"",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "Execute command with specified argument(s) and save its output to log file",
      "F_verb": "save",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Upload local file to a table partition",
      "F_verb": "upload",
      "reason": "noCate",
      "source": "tl",
      "cate": "commit/submit/upload",
      "pat": "V NP to NP"
    },
    {
      "task": "Use a custom font file",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Display the content of file \"f\" in home directory if it exists and is executable",
      "F_verb": "display",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP if S"
    },
    {
      "task": "Sort lines in \"FILE\" to standard output preserving only unique lines",
      "F_verb": "sort",
      "source": "nl",
      "cate": "sort",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Check if current system is running in 64-bit addressing.",
      "F_verb": "check",
      "source": "nl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V if S"
    },
    {
      "task": "Uninstall a particular version of Gradle",
      "F_verb": "uninstall",
      "reason": "noVerb",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP of NP"
    },
    {
      "task": "After `git bisect` pinpoints the faulty commit, end the bisect session and return to the previous branch",
      "F_verb": "return",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V to NP"
    },
    {
      "task": "Lint the manifest and source files for errors",
      "F_verb": "lint",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP for NP"
    },
    {
      "task": "Check filesystem in read only mode",
      "F_verb": "check",
      "source": "tl",
      "cate": "test/tell/determine/check/ascertain/invalidate/verify/identify/track/detect/decide/checkout/sniff/inspect/justify/probe/benchmark/debug",
      "pat": "V NP in NP"
    },
    {
      "task": "Print file system disk space usage in 1 KiB blocks of the current directory's file system",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP of NP"
    },
    {
      "task": "Display details about the current user",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "find files in home directory that names are game",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Find files with pattern \"*[!0-9][1-9].txt\"  and execute chmod and ls command with AND condition then sort the output",
      "F_verb": "execute",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP"
    },
    {
      "task": "find the ten biggest files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Find all *.tex regular files in maximum 2 levels down the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Copy the directory structure in \"src/\" to \"dest/\" with empty files",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP in NP to NP with NP"
    },
    {
      "task": "Wait for a new process to launch with a given name, and attach to it",
      "F_verb": "attach",
      "source": "tl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V to NP"
    },
    {
      "task": "Save the contents of \"~/.bashrc\" to the clipboard on OSX",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP to NP on NP"
    },
    {
      "task": "Show chan_SIP clients (phones)",
      "F_verb": "show",
      "reason": "noVerb",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Find all regular files that reside in the current directory tree and were last modified at least 1 day ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP that S"
    },
    {
      "task": "Simply convert RAW files to jpg",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Find files readable only by the group",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP by NP"
    },
    {
      "task": "Display a boolean choice, returning the result through the exit code",
      "F_verb": "display",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP through NP"
    },
    {
      "task": "Lint all JavaScript source files in the current directory",
      "F_verb": "lint",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP in NP"
    },
    {
      "task": "Find the file in the current directory tree with inode number $inum and delete it",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "find all raw images in the current folder and pass them one at a time to the xargs command and enable parallel processing of the files",
      "F_verb": "enable",
      "source": "nl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP of NP"
    },
    {
      "task": "set alias \"clean\" for command 'rm -rf \"#\"* \".\"*~ *~ *.bak *.dvi *.aux *.log'",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Cut out everything from the 3rd character to the end of each line",
      "F_verb": "cut",
      "source": "tl",
      "cate": "cut/slash/separate/clip/crop",
      "pat": "V out NP from NP to NP of NP"
    },
    {
      "task": "Print space separated numbers from 1 to 10",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Link your mullvad account with the specified account number",
      "F_verb": "link",
      "reason": "noCate",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP with NP"
    },
    {
      "task": "Generate tags for all files in the current directory, and output them to a specific file, overwriting the file if it exists",
      "F_verb": "output",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP if S"
    },
    {
      "task": "Find files with a specific extension",
      "F_verb": "find",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP"
    },
    {
      "task": "Get the properties of all the user limits",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Report only total size of file systems in terabytes.",
      "F_verb": "report",
      "source": "nl",
      "cate": "report/notify/prompt/ring/remind/focus",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Pass numbers 1 to 100000 as arguments to \"/bin/true\"",
      "F_verb": "pass",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP as NP to NP"
    },
    {
      "task": "search for all the files ending with \".bak\" in current folder which have not been accessed in the last 30 days and delete the file if it exists",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP if S"
    },
    {
      "task": "Save the system host name to variable \"myHostName\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Compile and package the compiled code in its distributable format, such as a `jar`",
      "F_verb": "package",
      "source": "tl",
      "cate": "package/encode/marshal/synthesize/wrap/compress/pack/compact/encrypt/escape/gzip/password/recompress/stream",
      "pat": "V NP in NP as NP"
    },
    {
      "task": "List all files/directories under current directory ensuring white space safety",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "Run a `groff` command with preprocessor and macro options guessed by the `grog` utility",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP by NP"
    },
    {
      "task": "Read the first line in \"$1\" and save each word in the bash array variable \"to_sort\"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Convert an A2 poster into 4 A4 pages",
      "F_verb": "convert",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP into NP"
    },
    {
      "task": "Print inode, permissions, size, and modification date of all files in the current directory tree as a list with an extra column prepended",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V with NP"
    },
    {
      "task": "Find all sample* files/directories under current directory and print 'program {}-out {}' where {} will expand to file paths",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Install a specific version of Node.js",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP of NP"
    },
    {
      "task": "Show jobs from queue named 'a' (queues have single-character names)",
      "F_verb": "show",
      "reason": "noCate",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP from NP"
    },
    {
      "task": "Find files containing \"foo\" and print the files with highlighted matches",
      "F_verb": "find",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Search the current directory recursively for regular files with the read permission set for everybody",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP with NP for NP"
    },
    {
      "task": "Search for 'DOGS' in all files with '.txt' extension under ~/documents and also print the file names",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP with NP under NP"
    },
    {
      "task": "Take a picture from selected device(Default is /dev/video0)",
      "F_verb": "take",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP"
    },
    {
      "task": "display the commands to force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories",
      "F_verb": "display",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP S_INF in NP which S"
    },
    {
      "task": "Terminate the connection that is running in the background",
      "F_verb": "terminate",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP that S"
    },
    {
      "task": "Switch to a branch and automatically merge the current branch and any uncommitted changes into it",
      "F_verb": "switch",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V to NP"
    },
    {
      "task": "Print only unique lines of 'file_name' file",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Log out of Private Internet Access",
      "F_verb": "log",
      "reason": "noVerb",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V out of NP"
    },
    {
      "task": "Split a file every 5 lines (this will fail if the total number of lines is not divisible by 5)",
      "F_verb": "split",
      "source": "tl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP"
    },
    {
      "task": "Get IP address of your SSH session",
      "F_verb": "get",
      "source": "nl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP"
    },
    {
      "task": "Show all UDP sockets connected on specific source and destination ports",
      "F_verb": "show",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP on NP"
    },
    {
      "task": "Find all files/directories in current directory and run the command 'command' on each of them invoking the command as few times as possible",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP on NP of NP as NP"
    },
    {
      "task": "Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Find all symlinks under /myfiles directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path.",
      "F_verb": "count",
      "source": "nl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP on NP"
    },
    {
      "task": "Return a list of installed fonts in your system",
      "F_verb": "return",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Find files/directories under current directory and print them as null terminated strings.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP with NP as NP"
    },
    {
      "task": "Use a specific user profile directory",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP"
    },
    {
      "task": "Print a detailed list of all files under and below the two directories given as variables $FULFILLMENT and $ARCH1",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP under NP as NP"
    },
    {
      "task": "Find all regular files under and below dir/ and change their names from UTF8 to the ASCII/TRANSLIT encoding",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Print the filenames taken by the glob pattern * with null character as the delimiter",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP by NP with NP as NP"
    },
    {
      "task": "set alias \"ls\" for command 'ls -a -l'",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "set alias \"c1\" for command \"awk '{print \\$1}'\"",
      "F_verb": "set",
      "source": "nl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP"
    },
    {
      "task": "Read a single character from standard input with prompt \"Is this a good question (y/n)?\" and save the response to variable \"answer\"",
      "F_verb": "read",
      "source": "nl",
      "cate": "read/load/reload/reread/mount/remount",
      "pat": "V NP from NP with NP"
    },
    {
      "task": "Combine numbered images (frame_1.jpg, frame_2.jpg, etc) into a video or GIF",
      "F_verb": "combine",
      "source": "tl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP into NP"
    },
    {
      "task": "Write a boilerplate to .gitignore",
      "F_verb": "write",
      "source": "tl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex expanded by the variable $i and show the output by paging through one screenful at a time",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP by NP"
    },
    {
      "task": "Changes group ownership of 'shared' to 'Workers'.",
      "F_verb": "change",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP of NP to NP"
    },
    {
      "task": "Find all CSS files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP"
    },
    {
      "task": "Reformat date \"Sat Aug 09 13:37:14 2014 +1100\" according to format string \"%a %b %d %H:%M:%S %Y %z\"",
      "F_verb": "reformat",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all files/directories named 'com.apple.syncedpreferences.plist' (case insensitive) under ~/Library directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "List services that have crashed",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP that S"
    },
    {
      "task": "Install a package",
      "F_verb": "install",
      "source": "tl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V NP"
    },
    {
      "task": "Locate python interpreter and show its human-readable file type description, resolving any symlinks.",
      "F_verb": "show",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Save number of lines in 'file.txt' file in 'nbLines' variable",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP in NP in NP"
    },
    {
      "task": "Display the frame rate of a video",
      "F_verb": "display",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "Dump the allocation state of every sector of the specified disk image",
      "F_verb": "dump",
      "source": "tl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP of NP"
    },
    {
      "task": "Specify a label for the file (to allow `swapon` to use the label)",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP for NP S_INF"
    },
    {
      "task": "For each line in list.txt, output the line adding \"FAIL\" if the same line appears in fail.txt, and \"PASS\" otherwise - lines in fail.txt must be in the same order as they appear in list.txt.",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP if S"
    },
    {
      "task": "find all files under the /etc directory and display any IP address patterns in them",
      "F_verb": "display",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP"
    },
    {
      "task": "Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP of NP"
    },
    {
      "task": "Create 256 directories named from '00' to 'ff', each containing 256 subdirectories named '00' to 'ff'.",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP from NP"
    },
    {
      "task": "Get all mirrors, sort for download speed and save them",
      "F_verb": "get",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP for NP"
    },
    {
      "task": "Split \"list.txt\" into files with at most 600 lines each",
      "F_verb": "split",
      "source": "nl",
      "cate": "split/break/divide/unbundle/demangle/crack/strip",
      "pat": "V NP into NP with NP"
    },
    {
      "task": "Find all files with '.jpg' extension in the current directory ignoring sub-directories and archive them to a file named jpeg.tgz",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Find all TXT files in the current directory and copy them to directory \"$HOME/newdir\"",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP to NP"
    },
    {
      "task": "Return PIDs of any running processes with a matching command string",
      "F_verb": "return",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP of NP with NP"
    },
    {
      "task": "Find files/directories in entire file system that were modified a day ago",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP that S"
    },
    {
      "task": "Search the entire file hierarchy for files ending with '~' and print all matches except for those with '/media' in their pathnames.",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for nP with NP"
    },
    {
      "task": "Generate a man page for an executable",
      "F_verb": "generate",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP for NP"
    },
    {
      "task": "Find all .c, .h files in the current directory tree and search them for string \"expr\"",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "Archive directory \"tata\" to directory \"tata2\", compressing data during copy.",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP"
    },
    {
      "task": "Print only first line of 'file' content, formatted as 29-symbol wide column",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP as NP"
    },
    {
      "task": "Save the list of all .py files under and below the current directory to output.txt",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP of NP under NP to NP"
    },
    {
      "task": "Find all files under minimum 1 level down the current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP down NP"
    },
    {
      "task": "SSH into \"localhost\" with forced pseudo-terminal allocation, execute \"$heredoc\", and save the output to variable \"REL_DIR\"",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP to NP"
    },
    {
      "task": "Enable verbose mode and print unexpected errors in X",
      "F_verb": "enable",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "List absolute path of files in the current directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "find all the text files in the folder /home/calvin which are atleast below 2 levels",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP in NP below NP"
    },
    {
      "task": "Display non-hidden files in the current directory with the given output format",
      "F_verb": "display",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP with NP"
    },
    {
      "task": "find all the png files in the current folder which begin with the word image",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Recursively move \"./dir\" to \"user@host:/path\" compressing data and displaying progress during transmission",
      "F_verb": "move",
      "source": "nl",
      "cate": "move/scroll/offset/advance",
      "pat": "V NP to NP instead-of S_ING by NP"
    },
    {
      "task": "Search the current directory tree for *.c and *.asm files, ignoring the case",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP for NP"
    },
    {
      "task": "List all files under current directory",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP"
    },
    {
      "task": "Act as proxy and forward data from a local TCP port to the given remote host",
      "F_verb": "forward",
      "reason": "noCate",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "change owner and group of the file it to user and group root",
      "F_verb": "group",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP"
    },
    {
      "task": "list all files under the current directory, writing the output to the file files_and_folders, do not try to descend into directories that cannot be read.",
      "F_verb": "list",
      "source": "nl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP under NP to NP"
    },
    {
      "task": "find all the xml files in the current folder which are present in the pattern text file",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Update all toolchains",
      "F_verb": "update",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP"
    },
    {
      "task": "Delete a key from the ssh-agent",
      "F_verb": "delete",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Display information about the current address' transactions",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Search for 'stuff' in all *,txt files under current directory",
      "F_verb": "search",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP in NP under NP"
    },
    {
      "task": "List currently running notebook servers",
      "F_verb": "list",
      "reason": "noCate",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "Find all .gif files in the /var/www directory tree that are between 5 kB and 10 kB in size",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "find all instances of a specific file in the current directory and discard all the errors.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP of NP of NP in NP"
    },
    {
      "task": "After editing the file, refresh the current patch with the changes",
      "F_verb": "refresh",
      "source": "tl",
      "cate": "initialize/reinitialize/prepare/refresh/reset/initiate/reposition/initialise/activate/reinitialise",
      "pat": "V NP with NP"
    },
    {
      "task": "Open a file in the default editor",
      "F_verb": "open",
      "source": "tl",
      "cate": "open",
      "pat": "V NP in NP"
    },
    {
      "task": "Delete all files that were modified more than 60 days ago under '/path-to-directory' tree",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP that S"
    },
    {
      "task": "Concatenate files containing `test' in their names",
      "F_verb": "concatenate",
      "source": "nl",
      "cate": "connect/associate/join/combine/concatenate/merge/concat/group/reconnect/migrate/defragment",
      "pat": "V NP in NP"
    },
    {
      "task": "Find files/directories with inode number '212042' under '/var' directory tree without traversing other devices/partitions",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP with NP without S_ING"
    },
    {
      "task": "Start all containers, rebuild if necessary",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP if S"
    },
    {
      "task": "Change permissions to 644 for all files showing the respective chmod command",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP using NP for NP"
    },
    {
      "task": "Display the kind of a command",
      "F_verb": "display",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP"
    },
    {
      "task": "find all files having certain word in its name in the current folder",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP in NP"
    },
    {
      "task": "Run commands from a file, stopping at the first error",
      "F_verb": "run",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP at NP"
    },
    {
      "task": "Update timestamps of all files (not directories) under current directory.",
      "F_verb": "update",
      "source": "nl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP of NP under NP"
    },
    {
      "task": "Specify the format of the output report (e.g. `full`, `xml`, `json`, `summary`)",
      "F_verb": "specify",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP of NP"
    },
    {
      "task": "Send a POST request (default method with request data)",
      "F_verb": "send",
      "source": "tl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP with NP"
    },
    {
      "task": "exclude vendor and app/cache dir, and search name which suffixed with php",
      "F_verb": "exclude",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Remove all broken symbolic links in /usr/ports/packages",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Calculate the SHA512 checksum for a file",
      "F_verb": "calculate",
      "source": "tl",
      "cate": "compute/calculate/evaluate/solve/scale/measure/recalculate/multiply/count/figure/subtract/increase/estimate/increment/aggregate/double/halve",
      "pat": "V NP for NP"
    },
    {
      "task": "Send SIGKILL signal to all processes using TCP port 8080, terminating them instantly.",
      "F_verb": "send",
      "source": "nl",
      "cate": "send/pass/dispatch/post/issue/propagate/forward/broadcast/transmit/emit/signal/raise/plan/bump/pipe",
      "pat": "V NP to NP using NP"
    },
    {
      "task": "run somebashstatement with the filename as argument, for files recursively in /path that match 'pattern'",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP with NP for NP in NP that S"
    },
    {
      "task": "Find all *.txt files/directories under current directory and execute the python script hello.py for each of them with the file path as an argument to the script",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "remove all the files in the present directory which have special characters in their name and do not search in the sub directories of the current folder.",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Open \"charm\" executable file in vim",
      "F_verb": "open",
      "source": "nl",
      "cate": "open",
      "pat": "V NP in NP"
    },
    {
      "task": "Search for 'Text To Find' in all regular files under current directory tree and show the matched files",
      "F_verb": "show",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Quit",
      "F_verb": "quit",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V"
    },
    {
      "task": "Format a file and display the result to the console",
      "F_verb": "display",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP to NP"
    },
    {
      "task": "Unstage everything",
      "F_verb": "unstage",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Find all files inside all directories (non-recursive) in maximum 2 levels down the /tmp/test directory and print the number of files in each directory and also print the file/directory paths",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "Force kill a process",
      "F_verb": "force",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP"
    },
    {
      "task": "List available boilerplates",
      "F_verb": "list",
      "reason": "noVerb",
      "source": "tl",
      "cate": "list/enumerate/renumber/number",
      "pat": "V NP"
    },
    {
      "task": "find all log files larger then 100MB  in /home directory and delete them .",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "View everything that happened from the start of last year to the start of last march",
      "F_verb": "view",
      "reason": "noCate",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP that S"
    },
    {
      "task": "Write the current date and time followed by \" 0\" to the console and append to \"log.csv\"",
      "F_verb": "append",
      "source": "nl",
      "cate": "append/put/add/insert/push/interpolate/place/install/register/queue/enqueue/type/consume/integrate",
      "pat": "V to NP"
    },
    {
      "task": "Find all symlinks in the /myfiles directory tree",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP"
    },
    {
      "task": "Find files and directories owned by xuser1 and change their ownership to user2",
      "F_verb": "change",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP to NP"
    },
    {
      "task": "Print the file sizes for all files under current directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP for NP under NP"
    },
    {
      "task": "Mask/Unmask a unit, prevent it to be started on bootup",
      "F_verb": "prevent", ////to be done不定式
      "reason": "noCate",
      "source": "tl",
      "cate": "stop/quit/terminate/interrupt/crash/intercept/abort/disconnect/shutdown/pause/freeze/block/kill/prevent/halt/shut/poweroff/restrict",
      "pat": "V NP S_INF on NP"
    },
    {
      "task": "display all files in the directory \"dir\" which have been changed in the last 60 minutes",
      "F_verb": "display",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP in NP S_INF in NP"
    },
    {
      "task": "Print a space separated list of numbers from 1 to 10 with no trailing new line",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP from NP to NP with NP"
    },
    {
      "task": "Compare each file in \"repos1/\" and \"repos2/\", treat absent files as empty, ignore differences in whitespace and tab expansions, and print 3 lines of unified context",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP"
    },
    {
      "task": "Print chmod commands that can change permissions of regular files residing in the current directory tree to u=rw,g=r,o=",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP that S"
    },
    {
      "task": "Find all files under /path/you/need, calculate their md5sums and redirect the results to checksums.md5",
      "F_verb": "redirect",
      "source": "nl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V NP to NP"
    },
    {
      "task": "Search the current directory tree for .log files containing the string \"The SAS System\", and save their names to sas_log_list.txt",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V NP S_INF"
    },
    {
      "task": "Print linker search path using ld formatted on new lines",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP using NP on NP"
    },
    {
      "task": "Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension transforming the full paths to relative paths",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP in NP to NP with NP"
    },
    {
      "task": "Find all files under current directory and set read permission for group and other for these files",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "force delete all the temp files which are of size 0 bytes and which have not been accessed in the last 10 days",
      "F_verb": "force",
      "source": "nl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP which S"
    },
    {
      "task": "Replace all non-punctuation characters with newlines from standard input",
      "F_verb": "replace",
      "source": "nl",
      "cate": "replace",
      "pat": "V NP with NP from NP"
    },
    {
      "task": "Display details about a package",
      "F_verb": "display",
      "reason": "noVerb",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP about NP"
    },
    {
      "task": "Copy the directory hierarchy from \"original\" to \"new\"",
      "F_verb": "copy",
      "source": "nl",
      "cate": "copy/clone/paste/duplicate/burn",
      "pat": "V NP from NP to NP"
    },
    {
      "task": "Find all files under current directory matching either of the patterns 'error.[0-9]*', 'access.[0-9]*', 'error_log.[0-9]*', 'access_log.[0-9]*', 'mod_jk.log.[0-9]*' in their names",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP of NP"
    },
    {
      "task": "Login to your LastPass account, by entering your master password when prompted",
      "F_verb": "login",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V to NP by S_ING when S"
    },
    {
      "task": "Find all files/directories under /home/feeds/data directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Find all files under current directory with their timestamp and paths and print a sorted list",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP"
    },
    {
      "task": "find all the jpg images in the folder /path/to/files which have been modified after after the file \"timestamp\" and convert them into pdf.",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP in NP which S"
    },
    {
      "task": "Find all the files/directories under '/var/adm' directory tree that have not been modified in the last 3 days",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP that S"
    },
    {
      "task": "Use the default diff tool to show staged changes",
      "F_verb": "use",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP S_INF"
    },
    {
      "task": "Create a mdbook project in the current directory",
      "F_verb": "create",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP in NP"
    },
    {
      "task": "display a list of all files in the folder passed as argument to a script",
      "F_verb": "display",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP in NP as NP to NP"
    },
    {
      "task": "Represent time string $MOD_DATE as seconds since epoch and save to variable 'MOD_DATE1'",
      "F_verb": "save",
      "source": "nl",
      "cate": "store/save/dump/retain/cache/stash/serialize/deserialize/persist/keep/stage/suspend/backup/preserve/buffer",
      "pat": "V to NP"
    },
    {
      "task": "Extract lines from a CSV file where the second column exactly matches 'Foo'",
      "F_verb": "extract",
      "reason": "noCate",
      "source": "tl",
      "cate": "return/get/obtain/fetch/acquire/take/capture/represent/reclaim/receive/claim/extract/share/grab/grep/learn/recall/redeem/contain/pull/download/yank/recommend/digest/elaborate",
      "pat": "V NP from NP where S"
    },
    {
      "task": "Print the date, then prompt \"Hit ENTER or wait ten seconds\" with a 10 second timeout, then the date again",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP with NP"
    },
    {
      "task": "Archive \"src\" to \"dst\" updating files existing in \"dst\"",
      "F_verb": "archive",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP to NP in NP"
    },
    {
      "task": "Do not overwrite existing files",
      "F_verb": "overwrite",
      "reason": "noCate",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Remove a logical volume in a volume group",
      "F_verb": "remove",
      "source": "tl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP"
    },
    {
      "task": "Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from \"${@:3}\" array slice",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP between NP of NP with NP from NP"
    },
    {
      "task": "find all files that were modified between 90 to 100 days ago in home directory and delete then .",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP"
    },
    {
      "task": "Transpile and output as minified JavaScript",
      "F_verb": "transpile",
      "reason": "noCate",
      "source": "tl",
      "cate": "convert/change/transfer/map/turn/transform/adapt/translate/force/cast/switch/reformat/recurse/align/mirror/colorize/tile/interpret/hash/eval/remux/mutate/indent/sparsify/center/randomize/transverse/invert/lint/transpile",
      "pat": "V NP as NP"
    },
    {
      "task": "Ignore the MD5 sum when making a package",
      "F_verb": "ignore",
      "reason": "noCate",
      "source": "tl",
      "cate": "cancel/deregister/undo/deny/unset/unregister/unbind/unload/deselect/unlock/unblock/suppress/revert/rollback/logout/mask/ignore/mute/disown/leave",
      "pat": "V NP when S"
    },
    {
      "task": "Set a reminder in a specific amount of time",
      "F_verb": "set",
      "source": "tl",
      "cate": "set/control/describe/define/specify/assign/configure/schedule/declare/reassign/designate/highlight/expose/grant/symlink/pair/link/act/hold/prefix/reference/manage/audit/whitelist/customise/suffix/require/answer/treat",
      "pat": "V NP in NP of NP"
    },
    {
      "task": "Use a plugin to run the proxy client",
      "F_verb": "use",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP S_INF"
    },
    {
      "task": "Remove all libGLE* files from the current directory tree",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP from NP"
    },
    {
      "task": "Display the number of sub-directories for all directories under current directory tree, sort them according to the decreasing order of the number and show only the first 10 of them",
      "F_verb": "display",
      "source": "nl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP of NP for NP under NP"
    },
    {
      "task": "Display drivers and modules handling each device",
      "F_verb": "display",
      "reason": "noCate",
      "source": "tl",
      "cate": "display/show/present/bring/replay/preview/visualize/view/monitor/watch/see",
      "pat": "V NP"
    },
    {
      "task": "Attach a file to a new free loop device and scan the device for partitions",
      "F_verb": "attach",
      "source": "tl",
      "cate": "bind/attach/rebind/reattach/subscribe/trace/catch/fork/follow/tail/daemonize",
      "pat": "V NP to NP using NP for NP"
    },
    {
      "task": "Search for crates",
      "F_verb": "search",
      "reason": "noVerb",
      "source": "tl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V for NP"
    },
    {
      "task": "Remove all files and directories in the /home directory tree whose names are \"Trash\"",
      "F_verb": "remove",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP in NP whose S"
    },
    {
      "task": "Continuously output \"y\" at a rate of 10 bytes per second",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP at NP of NP"
    },
    {
      "task": "Start interactive shell",
      "F_verb": "start",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V NP"
    },
    {
      "task": "create a tar ball of all pdf files in current folder",
      "F_verb": "create",
      "source": "nl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Delete all files that have not been accessed in the last 30 days",
      "F_verb": "delete",
      "source": "nl",
      "cate": "remove/exclude/reduce/delete/pop/uninstall/detach/decrement/revoke/abandon/discard/peek/limit/exit/eject/overwrite/omit/truncate/prune/override/unstage/dereference/purge/drop/unmount/trash/reject/erase/deduplicate/wipe/decrease",
      "pat": "V NP S_INF in NP"
    },
    {
      "task": "Print $d if $d is an empty directory",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP if S"
    },
    {
      "task": "Print all directories under $root appending a : (colon) at the end of each path without descending into directories matching the pattern .[a-z]*",
      "F_verb": "print",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP under NP at NP of NP without S_ING into NP"
    },
    {
      "task": "Deploy locally",
      "F_verb": "deploy",
      "reason": "noCate",
      "source": "tl",
      "cate": "start/wake/launch/happen/begin/enable/spawn/restart/unfreeze/continue/host/deploy/seed/resurrect/tunnel/proxy/serve/reboot/boot/power/login",
      "pat": "V"
    },
    {
      "task": "Find all files under current directory excluding the $OUTPUT file, calculate their md5sum with $MD5SUM_OPTIONS options and redirect the result to $OUTPUT",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "Output only the filetype suffix of \"foo.tar.gz\", in this case \"gz\"",
      "F_verb": "output",
      "source": "nl",
      "cate": "write/record/log/print/output/archive/spell/rewrite/echo",
      "pat": "V NP of NP in NP"
    },
    {
      "task": "Go to the given directory",
      "F_verb": "go",
      "source": "tl",
      "cate": "redirect/jump/skip/go/navigate/roll/expand",
      "pat": "V to NP"
    },
    {
      "task": "Fill the current database with data defined in db/seeds.rb",
      "F_verb": "fill",
      "source": "tl",
      "cate": "update/modify/fill/edit/rename/populate/adjust/flush/trim/reconcile/resize/upgrade/optimize/sign/prepend/optimise/customize/shrink/patch/fit/index/rebase/fake/compensate/calibrate/correct/flood/fix/repair/delimit/maximize/minimize/differ/minimise",
      "pat": "V NP with NP in NP"
    },
    {
      "task": "Play an audio source exactly N times (N=0 means forever)",
      "F_verb": "play",
      "source": "tl",
      "cate": "play/unpause",
      "pat": "V NP"
    },
    {
      "task": "Use a specific version of Ruby",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP of NP"
    },
    {
      "task": "Build and switch to the new configuration, making it the boot default",
      "F_verb": "build",
      "source": "tl",
      "cate": "create/build/produce/construct/generate/establish/compose/instantiate/implement/setup/rebuild/train/recompile/reinstall",
      "pat": "V NP to NP"
    },
    {
      "task": "Use pathnames, one per line, from `stdin`",
      "F_verb": "use",
      "reason": "noCate",
      "source": "tl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP from NP"
    },
    {
      "task": "Find all directories under current directory and run  /path/to/script.sh for each of them",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP from NP"
    },
    {
      "task": "Find files/directories named blah (case insensitive) under current directory",
      "F_verb": "find",
      "source": "nl",
      "cate": "query/find/locate/retrieve/look/search/discover/seek/lookup/hunt/pick",
      "pat": "V NP under NP"
    },
    {
      "task": "run command \"$WEB --quiet\" in backgrounf as user  named as the value of the variable $USER",
      "F_verb": "run",
      "source": "nl",
      "cate": "perform/execute/run/enforce/fire/trigger/approve/emulate/ping/telnet/traceroute/loop/use",
      "pat": "V NP in NP as NP of NP"
    }
  ]
}